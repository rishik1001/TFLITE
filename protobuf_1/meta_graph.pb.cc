// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/meta_graph.proto

#include "tensorflow/core/protobuf/meta_graph.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace tensorflow {
PROTOBUF_CONSTEXPR MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse::MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUseDefaultTypeInternal _MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR MetaGraphDef_MetaInfoDef::MetaGraphDef_MetaInfoDef(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tags_)*/{}
  , /*decltype(_impl_.function_aliases_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.meta_graph_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.tensorflow_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.tensorflow_git_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.stripped_op_list_)*/nullptr
  , /*decltype(_impl_.any_info_)*/nullptr
  , /*decltype(_impl_.stripped_default_attrs_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MetaGraphDef_MetaInfoDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetaGraphDef_MetaInfoDefDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetaGraphDef_MetaInfoDefDefaultTypeInternal() {}
  union {
    MetaGraphDef_MetaInfoDef _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetaGraphDef_MetaInfoDefDefaultTypeInternal _MetaGraphDef_MetaInfoDef_default_instance_;
PROTOBUF_CONSTEXPR MetaGraphDef_CollectionDefEntry_DoNotUse::MetaGraphDef_CollectionDefEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct MetaGraphDef_CollectionDefEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetaGraphDef_CollectionDefEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetaGraphDef_CollectionDefEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MetaGraphDef_CollectionDefEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetaGraphDef_CollectionDefEntry_DoNotUseDefaultTypeInternal _MetaGraphDef_CollectionDefEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR MetaGraphDef_SignatureDefEntry_DoNotUse::MetaGraphDef_SignatureDefEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct MetaGraphDef_SignatureDefEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetaGraphDef_SignatureDefEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetaGraphDef_SignatureDefEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MetaGraphDef_SignatureDefEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetaGraphDef_SignatureDefEntry_DoNotUseDefaultTypeInternal _MetaGraphDef_SignatureDefEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR MetaGraphDef::MetaGraphDef(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.collection_def_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.signature_def_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.asset_file_def_)*/{}
  , /*decltype(_impl_.meta_info_def_)*/nullptr
  , /*decltype(_impl_.graph_def_)*/nullptr
  , /*decltype(_impl_.saver_def_)*/nullptr
  , /*decltype(_impl_.object_graph_def_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MetaGraphDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetaGraphDefDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetaGraphDefDefaultTypeInternal() {}
  union {
    MetaGraphDef _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetaGraphDefDefaultTypeInternal _MetaGraphDef_default_instance_;
PROTOBUF_CONSTEXPR CollectionDef_NodeList::CollectionDef_NodeList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CollectionDef_NodeListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollectionDef_NodeListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollectionDef_NodeListDefaultTypeInternal() {}
  union {
    CollectionDef_NodeList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollectionDef_NodeListDefaultTypeInternal _CollectionDef_NodeList_default_instance_;
PROTOBUF_CONSTEXPR CollectionDef_BytesList::CollectionDef_BytesList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CollectionDef_BytesListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollectionDef_BytesListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollectionDef_BytesListDefaultTypeInternal() {}
  union {
    CollectionDef_BytesList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollectionDef_BytesListDefaultTypeInternal _CollectionDef_BytesList_default_instance_;
PROTOBUF_CONSTEXPR CollectionDef_Int64List::CollectionDef_Int64List(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._value_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CollectionDef_Int64ListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollectionDef_Int64ListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollectionDef_Int64ListDefaultTypeInternal() {}
  union {
    CollectionDef_Int64List _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollectionDef_Int64ListDefaultTypeInternal _CollectionDef_Int64List_default_instance_;
PROTOBUF_CONSTEXPR CollectionDef_FloatList::CollectionDef_FloatList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CollectionDef_FloatListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollectionDef_FloatListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollectionDef_FloatListDefaultTypeInternal() {}
  union {
    CollectionDef_FloatList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollectionDef_FloatListDefaultTypeInternal _CollectionDef_FloatList_default_instance_;
PROTOBUF_CONSTEXPR CollectionDef_AnyList::CollectionDef_AnyList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CollectionDef_AnyListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollectionDef_AnyListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollectionDef_AnyListDefaultTypeInternal() {}
  union {
    CollectionDef_AnyList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollectionDef_AnyListDefaultTypeInternal _CollectionDef_AnyList_default_instance_;
PROTOBUF_CONSTEXPR CollectionDef::CollectionDef(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.kind_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct CollectionDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CollectionDefDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CollectionDefDefaultTypeInternal() {}
  union {
    CollectionDef _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CollectionDefDefaultTypeInternal _CollectionDef_default_instance_;
PROTOBUF_CONSTEXPR TensorInfo_CooSparse::TensorInfo_CooSparse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.values_tensor_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.indices_tensor_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.dense_shape_tensor_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TensorInfo_CooSparseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TensorInfo_CooSparseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TensorInfo_CooSparseDefaultTypeInternal() {}
  union {
    TensorInfo_CooSparse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TensorInfo_CooSparseDefaultTypeInternal _TensorInfo_CooSparse_default_instance_;
PROTOBUF_CONSTEXPR TensorInfo_CompositeTensor::TensorInfo_CompositeTensor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.components_)*/{}
  , /*decltype(_impl_.type_spec_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TensorInfo_CompositeTensorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TensorInfo_CompositeTensorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TensorInfo_CompositeTensorDefaultTypeInternal() {}
  union {
    TensorInfo_CompositeTensor _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TensorInfo_CompositeTensorDefaultTypeInternal _TensorInfo_CompositeTensor_default_instance_;
PROTOBUF_CONSTEXPR TensorInfo::TensorInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tensor_shape_)*/nullptr
  , /*decltype(_impl_.dtype_)*/0
  , /*decltype(_impl_.encoding_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct TensorInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TensorInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TensorInfoDefaultTypeInternal() {}
  union {
    TensorInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TensorInfoDefaultTypeInternal _TensorInfo_default_instance_;
PROTOBUF_CONSTEXPR SignatureDef_InputsEntry_DoNotUse::SignatureDef_InputsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct SignatureDef_InputsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignatureDef_InputsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignatureDef_InputsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SignatureDef_InputsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignatureDef_InputsEntry_DoNotUseDefaultTypeInternal _SignatureDef_InputsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR SignatureDef_OutputsEntry_DoNotUse::SignatureDef_OutputsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct SignatureDef_OutputsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignatureDef_OutputsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignatureDef_OutputsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SignatureDef_OutputsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignatureDef_OutputsEntry_DoNotUseDefaultTypeInternal _SignatureDef_OutputsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR SignatureDef_DefaultsEntry_DoNotUse::SignatureDef_DefaultsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct SignatureDef_DefaultsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignatureDef_DefaultsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignatureDef_DefaultsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SignatureDef_DefaultsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignatureDef_DefaultsEntry_DoNotUseDefaultTypeInternal _SignatureDef_DefaultsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR SignatureDef::SignatureDef(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.inputs_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.outputs_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.defaults_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.method_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SignatureDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignatureDefDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignatureDefDefaultTypeInternal() {}
  union {
    SignatureDef _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignatureDefDefaultTypeInternal _SignatureDef_default_instance_;
PROTOBUF_CONSTEXPR AssetFileDef::AssetFileDef(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.filename_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.tensor_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AssetFileDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssetFileDefDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssetFileDefDefaultTypeInternal() {}
  union {
    AssetFileDef _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssetFileDefDefaultTypeInternal _AssetFileDef_default_instance_;
}  // namespace tensorflow
static ::_pb::Metadata file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[19];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto = nullptr;

const uint32_t TableStruct_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_MetaInfoDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_MetaInfoDef, _impl_.meta_graph_version_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_MetaInfoDef, _impl_.stripped_op_list_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_MetaInfoDef, _impl_.any_info_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_MetaInfoDef, _impl_.tags_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_MetaInfoDef, _impl_.tensorflow_version_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_MetaInfoDef, _impl_.tensorflow_git_version_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_MetaInfoDef, _impl_.stripped_default_attrs_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_MetaInfoDef, _impl_.function_aliases_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_CollectionDefEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_CollectionDefEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_CollectionDefEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_CollectionDefEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_SignatureDefEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_SignatureDefEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_SignatureDefEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef_SignatureDefEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef, _impl_.meta_info_def_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef, _impl_.graph_def_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef, _impl_.saver_def_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef, _impl_.collection_def_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef, _impl_.signature_def_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef, _impl_.asset_file_def_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::MetaGraphDef, _impl_.object_graph_def_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::CollectionDef_NodeList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::CollectionDef_NodeList, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::CollectionDef_BytesList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::CollectionDef_BytesList, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::CollectionDef_Int64List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::CollectionDef_Int64List, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::CollectionDef_FloatList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::CollectionDef_FloatList, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::CollectionDef_AnyList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::CollectionDef_AnyList, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::CollectionDef, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::tensorflow::CollectionDef, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::tensorflow::CollectionDef, _impl_.kind_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::TensorInfo_CooSparse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::TensorInfo_CooSparse, _impl_.values_tensor_name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::TensorInfo_CooSparse, _impl_.indices_tensor_name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::TensorInfo_CooSparse, _impl_.dense_shape_tensor_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::TensorInfo_CompositeTensor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::TensorInfo_CompositeTensor, _impl_.type_spec_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::TensorInfo_CompositeTensor, _impl_.components_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::TensorInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::tensorflow::TensorInfo, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::tensorflow::TensorInfo, _impl_.dtype_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::TensorInfo, _impl_.tensor_shape_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::TensorInfo, _impl_.encoding_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SignatureDef_InputsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SignatureDef_InputsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SignatureDef_InputsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SignatureDef_InputsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::tensorflow::SignatureDef_OutputsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SignatureDef_OutputsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SignatureDef_OutputsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SignatureDef_OutputsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::tensorflow::SignatureDef_DefaultsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SignatureDef_DefaultsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SignatureDef_DefaultsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SignatureDef_DefaultsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SignatureDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SignatureDef, _impl_.inputs_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SignatureDef, _impl_.outputs_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SignatureDef, _impl_.method_name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SignatureDef, _impl_.defaults_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::AssetFileDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::AssetFileDef, _impl_.tensor_info_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::AssetFileDef, _impl_.filename_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::tensorflow::MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse)},
  { 10, -1, -1, sizeof(::tensorflow::MetaGraphDef_MetaInfoDef)},
  { 24, 32, -1, sizeof(::tensorflow::MetaGraphDef_CollectionDefEntry_DoNotUse)},
  { 34, 42, -1, sizeof(::tensorflow::MetaGraphDef_SignatureDefEntry_DoNotUse)},
  { 44, -1, -1, sizeof(::tensorflow::MetaGraphDef)},
  { 57, -1, -1, sizeof(::tensorflow::CollectionDef_NodeList)},
  { 64, -1, -1, sizeof(::tensorflow::CollectionDef_BytesList)},
  { 71, -1, -1, sizeof(::tensorflow::CollectionDef_Int64List)},
  { 78, -1, -1, sizeof(::tensorflow::CollectionDef_FloatList)},
  { 85, -1, -1, sizeof(::tensorflow::CollectionDef_AnyList)},
  { 92, -1, -1, sizeof(::tensorflow::CollectionDef)},
  { 104, -1, -1, sizeof(::tensorflow::TensorInfo_CooSparse)},
  { 113, -1, -1, sizeof(::tensorflow::TensorInfo_CompositeTensor)},
  { 121, -1, -1, sizeof(::tensorflow::TensorInfo)},
  { 133, 141, -1, sizeof(::tensorflow::SignatureDef_InputsEntry_DoNotUse)},
  { 143, 151, -1, sizeof(::tensorflow::SignatureDef_OutputsEntry_DoNotUse)},
  { 153, 161, -1, sizeof(::tensorflow::SignatureDef_DefaultsEntry_DoNotUse)},
  { 163, -1, -1, sizeof(::tensorflow::SignatureDef)},
  { 173, -1, -1, sizeof(::tensorflow::AssetFileDef)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::tensorflow::_MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse_default_instance_._instance,
  &::tensorflow::_MetaGraphDef_MetaInfoDef_default_instance_._instance,
  &::tensorflow::_MetaGraphDef_CollectionDefEntry_DoNotUse_default_instance_._instance,
  &::tensorflow::_MetaGraphDef_SignatureDefEntry_DoNotUse_default_instance_._instance,
  &::tensorflow::_MetaGraphDef_default_instance_._instance,
  &::tensorflow::_CollectionDef_NodeList_default_instance_._instance,
  &::tensorflow::_CollectionDef_BytesList_default_instance_._instance,
  &::tensorflow::_CollectionDef_Int64List_default_instance_._instance,
  &::tensorflow::_CollectionDef_FloatList_default_instance_._instance,
  &::tensorflow::_CollectionDef_AnyList_default_instance_._instance,
  &::tensorflow::_CollectionDef_default_instance_._instance,
  &::tensorflow::_TensorInfo_CooSparse_default_instance_._instance,
  &::tensorflow::_TensorInfo_CompositeTensor_default_instance_._instance,
  &::tensorflow::_TensorInfo_default_instance_._instance,
  &::tensorflow::_SignatureDef_InputsEntry_DoNotUse_default_instance_._instance,
  &::tensorflow::_SignatureDef_OutputsEntry_DoNotUse_default_instance_._instance,
  &::tensorflow::_SignatureDef_DefaultsEntry_DoNotUse_default_instance_._instance,
  &::tensorflow::_SignatureDef_default_instance_._instance,
  &::tensorflow::_AssetFileDef_default_instance_._instance,
};

const char descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n)tensorflow/core/protobuf/meta_graph.pr"
  "oto\022\ntensorflow\032\031google/protobuf/any.pro"
  "to\032%tensorflow/core/framework/graph.prot"
  "o\032&tensorflow/core/framework/op_def.prot"
  "o\032&tensorflow/core/framework/tensor.prot"
  "o\032,tensorflow/core/framework/tensor_shap"
  "e.proto\032%tensorflow/core/framework/types"
  ".proto\0321tensorflow/core/protobuf/saved_o"
  "bject_graph.proto\032$tensorflow/core/proto"
  "buf/saver.proto\032%tensorflow/core/protobu"
  "f/struct.proto\"\250\007\n\014MetaGraphDef\022;\n\rmeta_"
  "info_def\030\001 \001(\0132$.tensorflow.MetaGraphDef"
  ".MetaInfoDef\022\'\n\tgraph_def\030\002 \001(\0132\024.tensor"
  "flow.GraphDef\022\'\n\tsaver_def\030\003 \001(\0132\024.tenso"
  "rflow.SaverDef\022C\n\016collection_def\030\004 \003(\0132+"
  ".tensorflow.MetaGraphDef.CollectionDefEn"
  "try\022A\n\rsignature_def\030\005 \003(\0132*.tensorflow."
  "MetaGraphDef.SignatureDefEntry\0220\n\016asset_"
  "file_def\030\006 \003(\0132\030.tensorflow.AssetFileDef"
  "\0226\n\020object_graph_def\030\007 \001(\0132\034.tensorflow."
  "SavedObjectGraph\032\366\002\n\013MetaInfoDef\022\032\n\022meta"
  "_graph_version\030\001 \001(\t\022,\n\020stripped_op_list"
  "\030\002 \001(\0132\022.tensorflow.OpList\022&\n\010any_info\030\003"
  " \001(\0132\024.google.protobuf.Any\022\014\n\004tags\030\004 \003(\t"
  "\022\032\n\022tensorflow_version\030\005 \001(\t\022\036\n\026tensorfl"
  "ow_git_version\030\006 \001(\t\022\036\n\026stripped_default"
  "_attrs\030\007 \001(\010\022S\n\020function_aliases\030\010 \003(\01329"
  ".tensorflow.MetaGraphDef.MetaInfoDef.Fun"
  "ctionAliasesEntry\0326\n\024FunctionAliasesEntr"
  "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032O\n\022Col"
  "lectionDefEntry\022\013\n\003key\030\001 \001(\t\022(\n\005value\030\002 "
  "\001(\0132\031.tensorflow.CollectionDef:\0028\001\032M\n\021Si"
  "gnatureDefEntry\022\013\n\003key\030\001 \001(\t\022\'\n\005value\030\002 "
  "\001(\0132\030.tensorflow.SignatureDef:\0028\001\"\337\003\n\rCo"
  "llectionDef\0227\n\tnode_list\030\001 \001(\0132\".tensorf"
  "low.CollectionDef.NodeListH\000\0229\n\nbytes_li"
  "st\030\002 \001(\0132#.tensorflow.CollectionDef.Byte"
  "sListH\000\0229\n\nint64_list\030\003 \001(\0132#.tensorflow"
  ".CollectionDef.Int64ListH\000\0229\n\nfloat_list"
  "\030\004 \001(\0132#.tensorflow.CollectionDef.FloatL"
  "istH\000\0225\n\010any_list\030\005 \001(\0132!.tensorflow.Col"
  "lectionDef.AnyListH\000\032\031\n\010NodeList\022\r\n\005valu"
  "e\030\001 \003(\t\032\032\n\tBytesList\022\r\n\005value\030\001 \003(\014\032\036\n\tI"
  "nt64List\022\021\n\005value\030\001 \003(\003B\002\020\001\032\036\n\tFloatList"
  "\022\021\n\005value\030\001 \003(\002B\002\020\001\032.\n\007AnyList\022#\n\005value\030"
  "\001 \003(\0132\024.google.protobuf.AnyB\006\n\004kind\"\321\003\n\n"
  "TensorInfo\022\016\n\004name\030\001 \001(\tH\000\0226\n\ncoo_sparse"
  "\030\004 \001(\0132 .tensorflow.TensorInfo.CooSparse"
  "H\000\022B\n\020composite_tensor\030\005 \001(\0132&.tensorflo"
  "w.TensorInfo.CompositeTensorH\000\022#\n\005dtype\030"
  "\002 \001(\0162\024.tensorflow.DataType\0222\n\014tensor_sh"
  "ape\030\003 \001(\0132\034.tensorflow.TensorShapeProto\032"
  "e\n\tCooSparse\022\032\n\022values_tensor_name\030\001 \001(\t"
  "\022\033\n\023indices_tensor_name\030\002 \001(\t\022\037\n\027dense_s"
  "hape_tensor_name\030\003 \001(\t\032k\n\017CompositeTenso"
  "r\022,\n\ttype_spec\030\001 \001(\0132\031.tensorflow.TypeSp"
  "ecProto\022*\n\ncomponents\030\002 \003(\0132\026.tensorflow"
  ".TensorInfoB\n\n\010encoding\"\244\003\n\014SignatureDef"
  "\0224\n\006inputs\030\001 \003(\0132$.tensorflow.SignatureD"
  "ef.InputsEntry\0226\n\007outputs\030\002 \003(\0132%.tensor"
  "flow.SignatureDef.OutputsEntry\022\023\n\013method"
  "_name\030\003 \001(\t\0228\n\010defaults\030\004 \003(\0132&.tensorfl"
  "ow.SignatureDef.DefaultsEntry\032E\n\013InputsE"
  "ntry\022\013\n\003key\030\001 \001(\t\022%\n\005value\030\002 \001(\0132\026.tenso"
  "rflow.TensorInfo:\0028\001\032F\n\014OutputsEntry\022\013\n\003"
  "key\030\001 \001(\t\022%\n\005value\030\002 \001(\0132\026.tensorflow.Te"
  "nsorInfo:\0028\001\032H\n\rDefaultsEntry\022\013\n\003key\030\001 \001"
  "(\t\022&\n\005value\030\002 \001(\0132\027.tensorflow.TensorPro"
  "to:\0028\001\"M\n\014AssetFileDef\022+\n\013tensor_info\030\001 "
  "\001(\0132\026.tensorflow.TensorInfo\022\020\n\010filename\030"
  "\002 \001(\tB\207\001\n\030org.tensorflow.frameworkB\017Meta"
  "GraphProtosP\001ZUgithub.com/tensorflow/ten"
  "sorflow/tensorflow/go/core/protobuf/for_"
  "core_protos_go_proto\370\001\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_deps[9] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fframework_2fgraph_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fframework_2ftensor_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fframework_2ftypes_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fprotobuf_2fstruct_2eproto,
};
static ::_pbi::once_flag descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto = {
    false, false, 2951, descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto,
    "tensorflow/core/protobuf/meta_graph.proto",
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once, descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_deps, 9, 19,
    schemas, file_default_instances, TableStruct_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::offsets,
    file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto, file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_getter() {
  return &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto(&descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto);
namespace tensorflow {

// ===================================================================

MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse::MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse() {}
MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse::MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse::MergeFrom(const MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[0]);
}

// ===================================================================

class MetaGraphDef_MetaInfoDef::_Internal {
 public:
  static const ::tensorflow::OpList& stripped_op_list(const MetaGraphDef_MetaInfoDef* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Any& any_info(const MetaGraphDef_MetaInfoDef* msg);
};

const ::tensorflow::OpList&
MetaGraphDef_MetaInfoDef::_Internal::stripped_op_list(const MetaGraphDef_MetaInfoDef* msg) {
  return *msg->_impl_.stripped_op_list_;
}
const ::PROTOBUF_NAMESPACE_ID::Any&
MetaGraphDef_MetaInfoDef::_Internal::any_info(const MetaGraphDef_MetaInfoDef* msg) {
  return *msg->_impl_.any_info_;
}
void MetaGraphDef_MetaInfoDef::clear_stripped_op_list() {
  if (GetArenaForAllocation() == nullptr && _impl_.stripped_op_list_ != nullptr) {
    delete _impl_.stripped_op_list_;
  }
  _impl_.stripped_op_list_ = nullptr;
}
void MetaGraphDef_MetaInfoDef::clear_any_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.any_info_ != nullptr) {
    delete _impl_.any_info_;
  }
  _impl_.any_info_ = nullptr;
}
MetaGraphDef_MetaInfoDef::MetaGraphDef_MetaInfoDef(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &MetaGraphDef_MetaInfoDef::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:tensorflow.MetaGraphDef.MetaInfoDef)
}
MetaGraphDef_MetaInfoDef::MetaGraphDef_MetaInfoDef(const MetaGraphDef_MetaInfoDef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MetaGraphDef_MetaInfoDef* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tags_){from._impl_.tags_}
    , /*decltype(_impl_.function_aliases_)*/{}
    , decltype(_impl_.meta_graph_version_){}
    , decltype(_impl_.tensorflow_version_){}
    , decltype(_impl_.tensorflow_git_version_){}
    , decltype(_impl_.stripped_op_list_){nullptr}
    , decltype(_impl_.any_info_){nullptr}
    , decltype(_impl_.stripped_default_attrs_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.function_aliases_.MergeFrom(from._impl_.function_aliases_);
  _impl_.meta_graph_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.meta_graph_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_meta_graph_version().empty()) {
    _this->_impl_.meta_graph_version_.Set(from._internal_meta_graph_version(), 
      _this->GetArenaForAllocation());
  }
  _impl_.tensorflow_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tensorflow_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tensorflow_version().empty()) {
    _this->_impl_.tensorflow_version_.Set(from._internal_tensorflow_version(), 
      _this->GetArenaForAllocation());
  }
  _impl_.tensorflow_git_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tensorflow_git_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tensorflow_git_version().empty()) {
    _this->_impl_.tensorflow_git_version_.Set(from._internal_tensorflow_git_version(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_stripped_op_list()) {
    _this->_impl_.stripped_op_list_ = new ::tensorflow::OpList(*from._impl_.stripped_op_list_);
  }
  if (from._internal_has_any_info()) {
    _this->_impl_.any_info_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.any_info_);
  }
  _this->_impl_.stripped_default_attrs_ = from._impl_.stripped_default_attrs_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.MetaGraphDef.MetaInfoDef)
}

inline void MetaGraphDef_MetaInfoDef::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tags_){arena}
    , /*decltype(_impl_.function_aliases_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.meta_graph_version_){}
    , decltype(_impl_.tensorflow_version_){}
    , decltype(_impl_.tensorflow_git_version_){}
    , decltype(_impl_.stripped_op_list_){nullptr}
    , decltype(_impl_.any_info_){nullptr}
    , decltype(_impl_.stripped_default_attrs_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.meta_graph_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.meta_graph_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.tensorflow_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tensorflow_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.tensorflow_git_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tensorflow_git_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MetaGraphDef_MetaInfoDef::~MetaGraphDef_MetaInfoDef() {
  // @@protoc_insertion_point(destructor:tensorflow.MetaGraphDef.MetaInfoDef)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void MetaGraphDef_MetaInfoDef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tags_.~RepeatedPtrField();
  _impl_.function_aliases_.Destruct();
  _impl_.function_aliases_.~MapField();
  _impl_.meta_graph_version_.Destroy();
  _impl_.tensorflow_version_.Destroy();
  _impl_.tensorflow_git_version_.Destroy();
  if (this != internal_default_instance()) delete _impl_.stripped_op_list_;
  if (this != internal_default_instance()) delete _impl_.any_info_;
}

void MetaGraphDef_MetaInfoDef::ArenaDtor(void* object) {
  MetaGraphDef_MetaInfoDef* _this = reinterpret_cast< MetaGraphDef_MetaInfoDef* >(object);
  _this->_impl_.function_aliases_.Destruct();
}
void MetaGraphDef_MetaInfoDef::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MetaGraphDef_MetaInfoDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.MetaGraphDef.MetaInfoDef)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  _impl_.function_aliases_.Clear();
  _impl_.meta_graph_version_.ClearToEmpty();
  _impl_.tensorflow_version_.ClearToEmpty();
  _impl_.tensorflow_git_version_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.stripped_op_list_ != nullptr) {
    delete _impl_.stripped_op_list_;
  }
  _impl_.stripped_op_list_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.any_info_ != nullptr) {
    delete _impl_.any_info_;
  }
  _impl_.any_info_ = nullptr;
  _impl_.stripped_default_attrs_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MetaGraphDef_MetaInfoDef::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string meta_graph_version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_meta_graph_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.MetaGraphDef.MetaInfoDef.meta_graph_version"));
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.OpList stripped_op_list = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_stripped_op_list(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Any any_info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_any_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string tags = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_tags();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "tensorflow.MetaGraphDef.MetaInfoDef.tags"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string tensorflow_version = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_tensorflow_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.MetaGraphDef.MetaInfoDef.tensorflow_version"));
        } else
          goto handle_unusual;
        continue;
      // string tensorflow_git_version = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_tensorflow_git_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.MetaGraphDef.MetaInfoDef.tensorflow_git_version"));
        } else
          goto handle_unusual;
        continue;
      // bool stripped_default_attrs = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.stripped_default_attrs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> function_aliases = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.function_aliases_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MetaGraphDef_MetaInfoDef::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.MetaGraphDef.MetaInfoDef)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string meta_graph_version = 1;
  if (!this->_internal_meta_graph_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_meta_graph_version().data(), static_cast<int>(this->_internal_meta_graph_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.MetaGraphDef.MetaInfoDef.meta_graph_version");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_meta_graph_version(), target);
  }

  // .tensorflow.OpList stripped_op_list = 2;
  if (this->_internal_has_stripped_op_list()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::stripped_op_list(this),
        _Internal::stripped_op_list(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Any any_info = 3;
  if (this->_internal_has_any_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::any_info(this),
        _Internal::any_info(this).GetCachedSize(), target, stream);
  }

  // repeated string tags = 4;
  for (int i = 0, n = this->_internal_tags_size(); i < n; i++) {
    const auto& s = this->_internal_tags(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.MetaGraphDef.MetaInfoDef.tags");
    target = stream->WriteString(4, s, target);
  }

  // string tensorflow_version = 5;
  if (!this->_internal_tensorflow_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tensorflow_version().data(), static_cast<int>(this->_internal_tensorflow_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.MetaGraphDef.MetaInfoDef.tensorflow_version");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_tensorflow_version(), target);
  }

  // string tensorflow_git_version = 6;
  if (!this->_internal_tensorflow_git_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tensorflow_git_version().data(), static_cast<int>(this->_internal_tensorflow_git_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.MetaGraphDef.MetaInfoDef.tensorflow_git_version");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_tensorflow_git_version(), target);
  }

  // bool stripped_default_attrs = 7;
  if (this->_internal_stripped_default_attrs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(7, this->_internal_stripped_default_attrs(), target);
  }

  // map<string, string> function_aliases = 8;
  if (!this->_internal_function_aliases().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_function_aliases();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "tensorflow.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "tensorflow.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(8, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(8, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.MetaGraphDef.MetaInfoDef)
  return target;
}

size_t MetaGraphDef_MetaInfoDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.MetaGraphDef.MetaInfoDef)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.tags_.size());
  for (int i = 0, n = _impl_.tags_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.tags_.Get(i));
  }

  // map<string, string> function_aliases = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_function_aliases_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_function_aliases().begin();
      it != this->_internal_function_aliases().end(); ++it) {
    total_size += MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string meta_graph_version = 1;
  if (!this->_internal_meta_graph_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_meta_graph_version());
  }

  // string tensorflow_version = 5;
  if (!this->_internal_tensorflow_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tensorflow_version());
  }

  // string tensorflow_git_version = 6;
  if (!this->_internal_tensorflow_git_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tensorflow_git_version());
  }

  // .tensorflow.OpList stripped_op_list = 2;
  if (this->_internal_has_stripped_op_list()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.stripped_op_list_);
  }

  // .google.protobuf.Any any_info = 3;
  if (this->_internal_has_any_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.any_info_);
  }

  // bool stripped_default_attrs = 7;
  if (this->_internal_stripped_default_attrs() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MetaGraphDef_MetaInfoDef::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MetaGraphDef_MetaInfoDef::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MetaGraphDef_MetaInfoDef::GetClassData() const { return &_class_data_; }


void MetaGraphDef_MetaInfoDef::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MetaGraphDef_MetaInfoDef*>(&to_msg);
  auto& from = static_cast<const MetaGraphDef_MetaInfoDef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.MetaGraphDef.MetaInfoDef)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tags_.MergeFrom(from._impl_.tags_);
  _this->_impl_.function_aliases_.MergeFrom(from._impl_.function_aliases_);
  if (!from._internal_meta_graph_version().empty()) {
    _this->_internal_set_meta_graph_version(from._internal_meta_graph_version());
  }
  if (!from._internal_tensorflow_version().empty()) {
    _this->_internal_set_tensorflow_version(from._internal_tensorflow_version());
  }
  if (!from._internal_tensorflow_git_version().empty()) {
    _this->_internal_set_tensorflow_git_version(from._internal_tensorflow_git_version());
  }
  if (from._internal_has_stripped_op_list()) {
    _this->_internal_mutable_stripped_op_list()->::tensorflow::OpList::MergeFrom(
        from._internal_stripped_op_list());
  }
  if (from._internal_has_any_info()) {
    _this->_internal_mutable_any_info()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
        from._internal_any_info());
  }
  if (from._internal_stripped_default_attrs() != 0) {
    _this->_internal_set_stripped_default_attrs(from._internal_stripped_default_attrs());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MetaGraphDef_MetaInfoDef::CopyFrom(const MetaGraphDef_MetaInfoDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.MetaGraphDef.MetaInfoDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetaGraphDef_MetaInfoDef::IsInitialized() const {
  return true;
}

void MetaGraphDef_MetaInfoDef::InternalSwap(MetaGraphDef_MetaInfoDef* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  _impl_.function_aliases_.InternalSwap(&other->_impl_.function_aliases_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.meta_graph_version_, lhs_arena,
      &other->_impl_.meta_graph_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tensorflow_version_, lhs_arena,
      &other->_impl_.tensorflow_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tensorflow_git_version_, lhs_arena,
      &other->_impl_.tensorflow_git_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MetaGraphDef_MetaInfoDef, _impl_.stripped_default_attrs_)
      + sizeof(MetaGraphDef_MetaInfoDef::_impl_.stripped_default_attrs_)
      - PROTOBUF_FIELD_OFFSET(MetaGraphDef_MetaInfoDef, _impl_.stripped_op_list_)>(
          reinterpret_cast<char*>(&_impl_.stripped_op_list_),
          reinterpret_cast<char*>(&other->_impl_.stripped_op_list_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MetaGraphDef_MetaInfoDef::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[1]);
}

// ===================================================================

MetaGraphDef_CollectionDefEntry_DoNotUse::MetaGraphDef_CollectionDefEntry_DoNotUse() {}
MetaGraphDef_CollectionDefEntry_DoNotUse::MetaGraphDef_CollectionDefEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MetaGraphDef_CollectionDefEntry_DoNotUse::MergeFrom(const MetaGraphDef_CollectionDefEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MetaGraphDef_CollectionDefEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[2]);
}

// ===================================================================

MetaGraphDef_SignatureDefEntry_DoNotUse::MetaGraphDef_SignatureDefEntry_DoNotUse() {}
MetaGraphDef_SignatureDefEntry_DoNotUse::MetaGraphDef_SignatureDefEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MetaGraphDef_SignatureDefEntry_DoNotUse::MergeFrom(const MetaGraphDef_SignatureDefEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MetaGraphDef_SignatureDefEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[3]);
}

// ===================================================================

class MetaGraphDef::_Internal {
 public:
  static const ::tensorflow::MetaGraphDef_MetaInfoDef& meta_info_def(const MetaGraphDef* msg);
  static const ::tensorflow::GraphDef& graph_def(const MetaGraphDef* msg);
  static const ::tensorflow::SaverDef& saver_def(const MetaGraphDef* msg);
  static const ::tensorflow::SavedObjectGraph& object_graph_def(const MetaGraphDef* msg);
};

const ::tensorflow::MetaGraphDef_MetaInfoDef&
MetaGraphDef::_Internal::meta_info_def(const MetaGraphDef* msg) {
  return *msg->_impl_.meta_info_def_;
}
const ::tensorflow::GraphDef&
MetaGraphDef::_Internal::graph_def(const MetaGraphDef* msg) {
  return *msg->_impl_.graph_def_;
}
const ::tensorflow::SaverDef&
MetaGraphDef::_Internal::saver_def(const MetaGraphDef* msg) {
  return *msg->_impl_.saver_def_;
}
const ::tensorflow::SavedObjectGraph&
MetaGraphDef::_Internal::object_graph_def(const MetaGraphDef* msg) {
  return *msg->_impl_.object_graph_def_;
}
void MetaGraphDef::clear_graph_def() {
  if (GetArenaForAllocation() == nullptr && _impl_.graph_def_ != nullptr) {
    delete _impl_.graph_def_;
  }
  _impl_.graph_def_ = nullptr;
}
void MetaGraphDef::clear_saver_def() {
  if (GetArenaForAllocation() == nullptr && _impl_.saver_def_ != nullptr) {
    delete _impl_.saver_def_;
  }
  _impl_.saver_def_ = nullptr;
}
void MetaGraphDef::clear_object_graph_def() {
  if (GetArenaForAllocation() == nullptr && _impl_.object_graph_def_ != nullptr) {
    delete _impl_.object_graph_def_;
  }
  _impl_.object_graph_def_ = nullptr;
}
MetaGraphDef::MetaGraphDef(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &MetaGraphDef::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:tensorflow.MetaGraphDef)
}
MetaGraphDef::MetaGraphDef(const MetaGraphDef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MetaGraphDef* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.collection_def_)*/{}
    , /*decltype(_impl_.signature_def_)*/{}
    , decltype(_impl_.asset_file_def_){from._impl_.asset_file_def_}
    , decltype(_impl_.meta_info_def_){nullptr}
    , decltype(_impl_.graph_def_){nullptr}
    , decltype(_impl_.saver_def_){nullptr}
    , decltype(_impl_.object_graph_def_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.collection_def_.MergeFrom(from._impl_.collection_def_);
  _this->_impl_.signature_def_.MergeFrom(from._impl_.signature_def_);
  if (from._internal_has_meta_info_def()) {
    _this->_impl_.meta_info_def_ = new ::tensorflow::MetaGraphDef_MetaInfoDef(*from._impl_.meta_info_def_);
  }
  if (from._internal_has_graph_def()) {
    _this->_impl_.graph_def_ = new ::tensorflow::GraphDef(*from._impl_.graph_def_);
  }
  if (from._internal_has_saver_def()) {
    _this->_impl_.saver_def_ = new ::tensorflow::SaverDef(*from._impl_.saver_def_);
  }
  if (from._internal_has_object_graph_def()) {
    _this->_impl_.object_graph_def_ = new ::tensorflow::SavedObjectGraph(*from._impl_.object_graph_def_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.MetaGraphDef)
}

inline void MetaGraphDef::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.collection_def_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.signature_def_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.asset_file_def_){arena}
    , decltype(_impl_.meta_info_def_){nullptr}
    , decltype(_impl_.graph_def_){nullptr}
    , decltype(_impl_.saver_def_){nullptr}
    , decltype(_impl_.object_graph_def_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MetaGraphDef::~MetaGraphDef() {
  // @@protoc_insertion_point(destructor:tensorflow.MetaGraphDef)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void MetaGraphDef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.collection_def_.Destruct();
  _impl_.collection_def_.~MapField();
  _impl_.signature_def_.Destruct();
  _impl_.signature_def_.~MapField();
  _impl_.asset_file_def_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.meta_info_def_;
  if (this != internal_default_instance()) delete _impl_.graph_def_;
  if (this != internal_default_instance()) delete _impl_.saver_def_;
  if (this != internal_default_instance()) delete _impl_.object_graph_def_;
}

void MetaGraphDef::ArenaDtor(void* object) {
  MetaGraphDef* _this = reinterpret_cast< MetaGraphDef* >(object);
  _this->_impl_.collection_def_.Destruct();
  _this->_impl_.signature_def_.Destruct();
}
void MetaGraphDef::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MetaGraphDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.MetaGraphDef)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.collection_def_.Clear();
  _impl_.signature_def_.Clear();
  _impl_.asset_file_def_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.meta_info_def_ != nullptr) {
    delete _impl_.meta_info_def_;
  }
  _impl_.meta_info_def_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.graph_def_ != nullptr) {
    delete _impl_.graph_def_;
  }
  _impl_.graph_def_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.saver_def_ != nullptr) {
    delete _impl_.saver_def_;
  }
  _impl_.saver_def_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.object_graph_def_ != nullptr) {
    delete _impl_.object_graph_def_;
  }
  _impl_.object_graph_def_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MetaGraphDef::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tensorflow.MetaGraphDef.MetaInfoDef meta_info_def = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta_info_def(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.GraphDef graph_def = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_graph_def(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.SaverDef saver_def = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_saver_def(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, .tensorflow.CollectionDef> collection_def = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.collection_def_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, .tensorflow.SignatureDef> signature_def = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.signature_def_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .tensorflow.AssetFileDef asset_file_def = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_asset_file_def(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.SavedObjectGraph object_graph_def = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_object_graph_def(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MetaGraphDef::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.MetaGraphDef)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.MetaGraphDef.MetaInfoDef meta_info_def = 1;
  if (this->_internal_has_meta_info_def()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::meta_info_def(this),
        _Internal::meta_info_def(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.GraphDef graph_def = 2;
  if (this->_internal_has_graph_def()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::graph_def(this),
        _Internal::graph_def(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.SaverDef saver_def = 3;
  if (this->_internal_has_saver_def()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::saver_def(this),
        _Internal::saver_def(this).GetCachedSize(), target, stream);
  }

  // map<string, .tensorflow.CollectionDef> collection_def = 4;
  if (!this->_internal_collection_def().empty()) {
    using MapType = ::_pb::Map<std::string, ::tensorflow::CollectionDef>;
    using WireHelper = MetaGraphDef_CollectionDefEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_collection_def();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "tensorflow.MetaGraphDef.CollectionDefEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, .tensorflow.SignatureDef> signature_def = 5;
  if (!this->_internal_signature_def().empty()) {
    using MapType = ::_pb::Map<std::string, ::tensorflow::SignatureDef>;
    using WireHelper = MetaGraphDef_SignatureDefEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_signature_def();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "tensorflow.MetaGraphDef.SignatureDefEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(5, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(5, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // repeated .tensorflow.AssetFileDef asset_file_def = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_asset_file_def_size()); i < n; i++) {
    const auto& repfield = this->_internal_asset_file_def(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .tensorflow.SavedObjectGraph object_graph_def = 7;
  if (this->_internal_has_object_graph_def()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::object_graph_def(this),
        _Internal::object_graph_def(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.MetaGraphDef)
  return target;
}

size_t MetaGraphDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.MetaGraphDef)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .tensorflow.CollectionDef> collection_def = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_collection_def_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::CollectionDef >::const_iterator
      it = this->_internal_collection_def().begin();
      it != this->_internal_collection_def().end(); ++it) {
    total_size += MetaGraphDef_CollectionDefEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, .tensorflow.SignatureDef> signature_def = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_signature_def_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::SignatureDef >::const_iterator
      it = this->_internal_signature_def().begin();
      it != this->_internal_signature_def().end(); ++it) {
    total_size += MetaGraphDef_SignatureDefEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .tensorflow.AssetFileDef asset_file_def = 6;
  total_size += 1UL * this->_internal_asset_file_def_size();
  for (const auto& msg : this->_impl_.asset_file_def_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .tensorflow.MetaGraphDef.MetaInfoDef meta_info_def = 1;
  if (this->_internal_has_meta_info_def()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.meta_info_def_);
  }

  // .tensorflow.GraphDef graph_def = 2;
  if (this->_internal_has_graph_def()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.graph_def_);
  }

  // .tensorflow.SaverDef saver_def = 3;
  if (this->_internal_has_saver_def()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.saver_def_);
  }

  // .tensorflow.SavedObjectGraph object_graph_def = 7;
  if (this->_internal_has_object_graph_def()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.object_graph_def_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MetaGraphDef::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MetaGraphDef::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MetaGraphDef::GetClassData() const { return &_class_data_; }


void MetaGraphDef::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MetaGraphDef*>(&to_msg);
  auto& from = static_cast<const MetaGraphDef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.MetaGraphDef)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.collection_def_.MergeFrom(from._impl_.collection_def_);
  _this->_impl_.signature_def_.MergeFrom(from._impl_.signature_def_);
  _this->_impl_.asset_file_def_.MergeFrom(from._impl_.asset_file_def_);
  if (from._internal_has_meta_info_def()) {
    _this->_internal_mutable_meta_info_def()->::tensorflow::MetaGraphDef_MetaInfoDef::MergeFrom(
        from._internal_meta_info_def());
  }
  if (from._internal_has_graph_def()) {
    _this->_internal_mutable_graph_def()->::tensorflow::GraphDef::MergeFrom(
        from._internal_graph_def());
  }
  if (from._internal_has_saver_def()) {
    _this->_internal_mutable_saver_def()->::tensorflow::SaverDef::MergeFrom(
        from._internal_saver_def());
  }
  if (from._internal_has_object_graph_def()) {
    _this->_internal_mutable_object_graph_def()->::tensorflow::SavedObjectGraph::MergeFrom(
        from._internal_object_graph_def());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MetaGraphDef::CopyFrom(const MetaGraphDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.MetaGraphDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetaGraphDef::IsInitialized() const {
  return true;
}

void MetaGraphDef::InternalSwap(MetaGraphDef* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.collection_def_.InternalSwap(&other->_impl_.collection_def_);
  _impl_.signature_def_.InternalSwap(&other->_impl_.signature_def_);
  _impl_.asset_file_def_.InternalSwap(&other->_impl_.asset_file_def_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MetaGraphDef, _impl_.object_graph_def_)
      + sizeof(MetaGraphDef::_impl_.object_graph_def_)
      - PROTOBUF_FIELD_OFFSET(MetaGraphDef, _impl_.meta_info_def_)>(
          reinterpret_cast<char*>(&_impl_.meta_info_def_),
          reinterpret_cast<char*>(&other->_impl_.meta_info_def_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MetaGraphDef::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[4]);
}

// ===================================================================

class CollectionDef_NodeList::_Internal {
 public:
};

CollectionDef_NodeList::CollectionDef_NodeList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CollectionDef.NodeList)
}
CollectionDef_NodeList::CollectionDef_NodeList(const CollectionDef_NodeList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CollectionDef_NodeList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){from._impl_.value_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CollectionDef.NodeList)
}

inline void CollectionDef_NodeList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CollectionDef_NodeList::~CollectionDef_NodeList() {
  // @@protoc_insertion_point(destructor:tensorflow.CollectionDef.NodeList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CollectionDef_NodeList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.~RepeatedPtrField();
}

void CollectionDef_NodeList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CollectionDef_NodeList::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CollectionDef.NodeList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CollectionDef_NodeList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_value();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "tensorflow.CollectionDef.NodeList.value"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CollectionDef_NodeList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CollectionDef.NodeList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string value = 1;
  for (int i = 0, n = this->_internal_value_size(); i < n; i++) {
    const auto& s = this->_internal_value(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CollectionDef.NodeList.value");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CollectionDef.NodeList)
  return target;
}

size_t CollectionDef_NodeList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CollectionDef.NodeList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string value = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.value_.size());
  for (int i = 0, n = _impl_.value_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.value_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CollectionDef_NodeList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CollectionDef_NodeList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CollectionDef_NodeList::GetClassData() const { return &_class_data_; }


void CollectionDef_NodeList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CollectionDef_NodeList*>(&to_msg);
  auto& from = static_cast<const CollectionDef_NodeList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CollectionDef.NodeList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.value_.MergeFrom(from._impl_.value_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CollectionDef_NodeList::CopyFrom(const CollectionDef_NodeList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CollectionDef.NodeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectionDef_NodeList::IsInitialized() const {
  return true;
}

void CollectionDef_NodeList::InternalSwap(CollectionDef_NodeList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.value_.InternalSwap(&other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CollectionDef_NodeList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[5]);
}

// ===================================================================

class CollectionDef_BytesList::_Internal {
 public:
};

CollectionDef_BytesList::CollectionDef_BytesList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CollectionDef.BytesList)
}
CollectionDef_BytesList::CollectionDef_BytesList(const CollectionDef_BytesList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CollectionDef_BytesList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){from._impl_.value_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CollectionDef.BytesList)
}

inline void CollectionDef_BytesList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CollectionDef_BytesList::~CollectionDef_BytesList() {
  // @@protoc_insertion_point(destructor:tensorflow.CollectionDef.BytesList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CollectionDef_BytesList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.~RepeatedPtrField();
}

void CollectionDef_BytesList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CollectionDef_BytesList::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CollectionDef.BytesList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CollectionDef_BytesList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated bytes value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_value();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CollectionDef_BytesList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CollectionDef.BytesList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes value = 1;
  for (int i = 0, n = this->_internal_value_size(); i < n; i++) {
    const auto& s = this->_internal_value(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CollectionDef.BytesList)
  return target;
}

size_t CollectionDef_BytesList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CollectionDef.BytesList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes value = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.value_.size());
  for (int i = 0, n = _impl_.value_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      _impl_.value_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CollectionDef_BytesList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CollectionDef_BytesList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CollectionDef_BytesList::GetClassData() const { return &_class_data_; }


void CollectionDef_BytesList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CollectionDef_BytesList*>(&to_msg);
  auto& from = static_cast<const CollectionDef_BytesList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CollectionDef.BytesList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.value_.MergeFrom(from._impl_.value_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CollectionDef_BytesList::CopyFrom(const CollectionDef_BytesList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CollectionDef.BytesList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectionDef_BytesList::IsInitialized() const {
  return true;
}

void CollectionDef_BytesList::InternalSwap(CollectionDef_BytesList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.value_.InternalSwap(&other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CollectionDef_BytesList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[6]);
}

// ===================================================================

class CollectionDef_Int64List::_Internal {
 public:
};

CollectionDef_Int64List::CollectionDef_Int64List(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CollectionDef.Int64List)
}
CollectionDef_Int64List::CollectionDef_Int64List(const CollectionDef_Int64List& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CollectionDef_Int64List* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){from._impl_.value_}
    , /*decltype(_impl_._value_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CollectionDef.Int64List)
}

inline void CollectionDef_Int64List::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){arena}
    , /*decltype(_impl_._value_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CollectionDef_Int64List::~CollectionDef_Int64List() {
  // @@protoc_insertion_point(destructor:tensorflow.CollectionDef.Int64List)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CollectionDef_Int64List::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.~RepeatedField();
}

void CollectionDef_Int64List::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CollectionDef_Int64List::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CollectionDef.Int64List)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CollectionDef_Int64List::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 value = 1 [packed = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_value(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CollectionDef_Int64List::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CollectionDef.Int64List)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 value = 1 [packed = true];
  {
    int byte_size = _impl_._value_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          1, _internal_value(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CollectionDef.Int64List)
  return target;
}

size_t CollectionDef_Int64List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CollectionDef.Int64List)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 value = 1 [packed = true];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.value_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._value_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CollectionDef_Int64List::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CollectionDef_Int64List::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CollectionDef_Int64List::GetClassData() const { return &_class_data_; }


void CollectionDef_Int64List::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CollectionDef_Int64List*>(&to_msg);
  auto& from = static_cast<const CollectionDef_Int64List&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CollectionDef.Int64List)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.value_.MergeFrom(from._impl_.value_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CollectionDef_Int64List::CopyFrom(const CollectionDef_Int64List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CollectionDef.Int64List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectionDef_Int64List::IsInitialized() const {
  return true;
}

void CollectionDef_Int64List::InternalSwap(CollectionDef_Int64List* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.value_.InternalSwap(&other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CollectionDef_Int64List::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[7]);
}

// ===================================================================

class CollectionDef_FloatList::_Internal {
 public:
};

CollectionDef_FloatList::CollectionDef_FloatList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CollectionDef.FloatList)
}
CollectionDef_FloatList::CollectionDef_FloatList(const CollectionDef_FloatList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CollectionDef_FloatList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){from._impl_.value_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CollectionDef.FloatList)
}

inline void CollectionDef_FloatList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CollectionDef_FloatList::~CollectionDef_FloatList() {
  // @@protoc_insertion_point(destructor:tensorflow.CollectionDef.FloatList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CollectionDef_FloatList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.~RepeatedField();
}

void CollectionDef_FloatList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CollectionDef_FloatList::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CollectionDef.FloatList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CollectionDef_FloatList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated float value = 1 [packed = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_value(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 13) {
          _internal_add_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CollectionDef_FloatList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CollectionDef.FloatList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float value = 1 [packed = true];
  if (this->_internal_value_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CollectionDef.FloatList)
  return target;
}

size_t CollectionDef_FloatList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CollectionDef.FloatList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float value = 1 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_value_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CollectionDef_FloatList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CollectionDef_FloatList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CollectionDef_FloatList::GetClassData() const { return &_class_data_; }


void CollectionDef_FloatList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CollectionDef_FloatList*>(&to_msg);
  auto& from = static_cast<const CollectionDef_FloatList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CollectionDef.FloatList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.value_.MergeFrom(from._impl_.value_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CollectionDef_FloatList::CopyFrom(const CollectionDef_FloatList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CollectionDef.FloatList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectionDef_FloatList::IsInitialized() const {
  return true;
}

void CollectionDef_FloatList::InternalSwap(CollectionDef_FloatList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.value_.InternalSwap(&other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CollectionDef_FloatList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[8]);
}

// ===================================================================

class CollectionDef_AnyList::_Internal {
 public:
};

void CollectionDef_AnyList::clear_value() {
  _impl_.value_.Clear();
}
CollectionDef_AnyList::CollectionDef_AnyList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CollectionDef.AnyList)
}
CollectionDef_AnyList::CollectionDef_AnyList(const CollectionDef_AnyList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CollectionDef_AnyList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){from._impl_.value_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CollectionDef.AnyList)
}

inline void CollectionDef_AnyList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CollectionDef_AnyList::~CollectionDef_AnyList() {
  // @@protoc_insertion_point(destructor:tensorflow.CollectionDef.AnyList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CollectionDef_AnyList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.~RepeatedPtrField();
}

void CollectionDef_AnyList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CollectionDef_AnyList::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CollectionDef.AnyList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CollectionDef_AnyList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .google.protobuf.Any value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_value(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CollectionDef_AnyList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CollectionDef.AnyList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.Any value = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_value_size()); i < n; i++) {
    const auto& repfield = this->_internal_value(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CollectionDef.AnyList)
  return target;
}

size_t CollectionDef_AnyList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CollectionDef.AnyList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.protobuf.Any value = 1;
  total_size += 1UL * this->_internal_value_size();
  for (const auto& msg : this->_impl_.value_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CollectionDef_AnyList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CollectionDef_AnyList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CollectionDef_AnyList::GetClassData() const { return &_class_data_; }


void CollectionDef_AnyList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CollectionDef_AnyList*>(&to_msg);
  auto& from = static_cast<const CollectionDef_AnyList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CollectionDef.AnyList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.value_.MergeFrom(from._impl_.value_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CollectionDef_AnyList::CopyFrom(const CollectionDef_AnyList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CollectionDef.AnyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectionDef_AnyList::IsInitialized() const {
  return true;
}

void CollectionDef_AnyList::InternalSwap(CollectionDef_AnyList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.value_.InternalSwap(&other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CollectionDef_AnyList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[9]);
}

// ===================================================================

class CollectionDef::_Internal {
 public:
  static const ::tensorflow::CollectionDef_NodeList& node_list(const CollectionDef* msg);
  static const ::tensorflow::CollectionDef_BytesList& bytes_list(const CollectionDef* msg);
  static const ::tensorflow::CollectionDef_Int64List& int64_list(const CollectionDef* msg);
  static const ::tensorflow::CollectionDef_FloatList& float_list(const CollectionDef* msg);
  static const ::tensorflow::CollectionDef_AnyList& any_list(const CollectionDef* msg);
};

const ::tensorflow::CollectionDef_NodeList&
CollectionDef::_Internal::node_list(const CollectionDef* msg) {
  return *msg->_impl_.kind_.node_list_;
}
const ::tensorflow::CollectionDef_BytesList&
CollectionDef::_Internal::bytes_list(const CollectionDef* msg) {
  return *msg->_impl_.kind_.bytes_list_;
}
const ::tensorflow::CollectionDef_Int64List&
CollectionDef::_Internal::int64_list(const CollectionDef* msg) {
  return *msg->_impl_.kind_.int64_list_;
}
const ::tensorflow::CollectionDef_FloatList&
CollectionDef::_Internal::float_list(const CollectionDef* msg) {
  return *msg->_impl_.kind_.float_list_;
}
const ::tensorflow::CollectionDef_AnyList&
CollectionDef::_Internal::any_list(const CollectionDef* msg) {
  return *msg->_impl_.kind_.any_list_;
}
void CollectionDef::set_allocated_node_list(::tensorflow::CollectionDef_NodeList* node_list) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (node_list) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(node_list);
    if (message_arena != submessage_arena) {
      node_list = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, node_list, submessage_arena);
    }
    set_has_node_list();
    _impl_.kind_.node_list_ = node_list;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CollectionDef.node_list)
}
void CollectionDef::set_allocated_bytes_list(::tensorflow::CollectionDef_BytesList* bytes_list) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (bytes_list) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(bytes_list);
    if (message_arena != submessage_arena) {
      bytes_list = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bytes_list, submessage_arena);
    }
    set_has_bytes_list();
    _impl_.kind_.bytes_list_ = bytes_list;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CollectionDef.bytes_list)
}
void CollectionDef::set_allocated_int64_list(::tensorflow::CollectionDef_Int64List* int64_list) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (int64_list) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(int64_list);
    if (message_arena != submessage_arena) {
      int64_list = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, int64_list, submessage_arena);
    }
    set_has_int64_list();
    _impl_.kind_.int64_list_ = int64_list;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CollectionDef.int64_list)
}
void CollectionDef::set_allocated_float_list(::tensorflow::CollectionDef_FloatList* float_list) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (float_list) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(float_list);
    if (message_arena != submessage_arena) {
      float_list = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, float_list, submessage_arena);
    }
    set_has_float_list();
    _impl_.kind_.float_list_ = float_list;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CollectionDef.float_list)
}
void CollectionDef::set_allocated_any_list(::tensorflow::CollectionDef_AnyList* any_list) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (any_list) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(any_list);
    if (message_arena != submessage_arena) {
      any_list = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, any_list, submessage_arena);
    }
    set_has_any_list();
    _impl_.kind_.any_list_ = any_list;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CollectionDef.any_list)
}
CollectionDef::CollectionDef(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CollectionDef)
}
CollectionDef::CollectionDef(const CollectionDef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CollectionDef* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.kind_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_kind();
  switch (from.kind_case()) {
    case kNodeList: {
      _this->_internal_mutable_node_list()->::tensorflow::CollectionDef_NodeList::MergeFrom(
          from._internal_node_list());
      break;
    }
    case kBytesList: {
      _this->_internal_mutable_bytes_list()->::tensorflow::CollectionDef_BytesList::MergeFrom(
          from._internal_bytes_list());
      break;
    }
    case kInt64List: {
      _this->_internal_mutable_int64_list()->::tensorflow::CollectionDef_Int64List::MergeFrom(
          from._internal_int64_list());
      break;
    }
    case kFloatList: {
      _this->_internal_mutable_float_list()->::tensorflow::CollectionDef_FloatList::MergeFrom(
          from._internal_float_list());
      break;
    }
    case kAnyList: {
      _this->_internal_mutable_any_list()->::tensorflow::CollectionDef_AnyList::MergeFrom(
          from._internal_any_list());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.CollectionDef)
}

inline void CollectionDef::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.kind_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_kind();
}

CollectionDef::~CollectionDef() {
  // @@protoc_insertion_point(destructor:tensorflow.CollectionDef)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CollectionDef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_kind()) {
    clear_kind();
  }
}

void CollectionDef::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CollectionDef::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.CollectionDef)
  switch (kind_case()) {
    case kNodeList: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.node_list_;
      }
      break;
    }
    case kBytesList: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.bytes_list_;
      }
      break;
    }
    case kInt64List: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.int64_list_;
      }
      break;
    }
    case kFloatList: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.float_list_;
      }
      break;
    }
    case kAnyList: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.any_list_;
      }
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = KIND_NOT_SET;
}


void CollectionDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CollectionDef)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_kind();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CollectionDef::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tensorflow.CollectionDef.NodeList node_list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_node_list(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.CollectionDef.BytesList bytes_list = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_bytes_list(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.CollectionDef.Int64List int64_list = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_int64_list(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.CollectionDef.FloatList float_list = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_float_list(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.CollectionDef.AnyList any_list = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_any_list(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CollectionDef::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CollectionDef)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.CollectionDef.NodeList node_list = 1;
  if (_internal_has_node_list()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::node_list(this),
        _Internal::node_list(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.CollectionDef.BytesList bytes_list = 2;
  if (_internal_has_bytes_list()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::bytes_list(this),
        _Internal::bytes_list(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.CollectionDef.Int64List int64_list = 3;
  if (_internal_has_int64_list()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::int64_list(this),
        _Internal::int64_list(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.CollectionDef.FloatList float_list = 4;
  if (_internal_has_float_list()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::float_list(this),
        _Internal::float_list(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.CollectionDef.AnyList any_list = 5;
  if (_internal_has_any_list()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::any_list(this),
        _Internal::any_list(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CollectionDef)
  return target;
}

size_t CollectionDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CollectionDef)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (kind_case()) {
    // .tensorflow.CollectionDef.NodeList node_list = 1;
    case kNodeList: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.node_list_);
      break;
    }
    // .tensorflow.CollectionDef.BytesList bytes_list = 2;
    case kBytesList: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.bytes_list_);
      break;
    }
    // .tensorflow.CollectionDef.Int64List int64_list = 3;
    case kInt64List: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.int64_list_);
      break;
    }
    // .tensorflow.CollectionDef.FloatList float_list = 4;
    case kFloatList: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.float_list_);
      break;
    }
    // .tensorflow.CollectionDef.AnyList any_list = 5;
    case kAnyList: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.any_list_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CollectionDef::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CollectionDef::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CollectionDef::GetClassData() const { return &_class_data_; }


void CollectionDef::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CollectionDef*>(&to_msg);
  auto& from = static_cast<const CollectionDef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CollectionDef)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.kind_case()) {
    case kNodeList: {
      _this->_internal_mutable_node_list()->::tensorflow::CollectionDef_NodeList::MergeFrom(
          from._internal_node_list());
      break;
    }
    case kBytesList: {
      _this->_internal_mutable_bytes_list()->::tensorflow::CollectionDef_BytesList::MergeFrom(
          from._internal_bytes_list());
      break;
    }
    case kInt64List: {
      _this->_internal_mutable_int64_list()->::tensorflow::CollectionDef_Int64List::MergeFrom(
          from._internal_int64_list());
      break;
    }
    case kFloatList: {
      _this->_internal_mutable_float_list()->::tensorflow::CollectionDef_FloatList::MergeFrom(
          from._internal_float_list());
      break;
    }
    case kAnyList: {
      _this->_internal_mutable_any_list()->::tensorflow::CollectionDef_AnyList::MergeFrom(
          from._internal_any_list());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CollectionDef::CopyFrom(const CollectionDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CollectionDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectionDef::IsInitialized() const {
  return true;
}

void CollectionDef::InternalSwap(CollectionDef* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.kind_, other->_impl_.kind_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CollectionDef::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[10]);
}

// ===================================================================

class TensorInfo_CooSparse::_Internal {
 public:
};

TensorInfo_CooSparse::TensorInfo_CooSparse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.TensorInfo.CooSparse)
}
TensorInfo_CooSparse::TensorInfo_CooSparse(const TensorInfo_CooSparse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TensorInfo_CooSparse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.values_tensor_name_){}
    , decltype(_impl_.indices_tensor_name_){}
    , decltype(_impl_.dense_shape_tensor_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.values_tensor_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.values_tensor_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_values_tensor_name().empty()) {
    _this->_impl_.values_tensor_name_.Set(from._internal_values_tensor_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.indices_tensor_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.indices_tensor_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_indices_tensor_name().empty()) {
    _this->_impl_.indices_tensor_name_.Set(from._internal_indices_tensor_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.dense_shape_tensor_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dense_shape_tensor_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dense_shape_tensor_name().empty()) {
    _this->_impl_.dense_shape_tensor_name_.Set(from._internal_dense_shape_tensor_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.TensorInfo.CooSparse)
}

inline void TensorInfo_CooSparse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.values_tensor_name_){}
    , decltype(_impl_.indices_tensor_name_){}
    , decltype(_impl_.dense_shape_tensor_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.values_tensor_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.values_tensor_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.indices_tensor_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.indices_tensor_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.dense_shape_tensor_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dense_shape_tensor_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TensorInfo_CooSparse::~TensorInfo_CooSparse() {
  // @@protoc_insertion_point(destructor:tensorflow.TensorInfo.CooSparse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TensorInfo_CooSparse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.values_tensor_name_.Destroy();
  _impl_.indices_tensor_name_.Destroy();
  _impl_.dense_shape_tensor_name_.Destroy();
}

void TensorInfo_CooSparse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TensorInfo_CooSparse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.TensorInfo.CooSparse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_tensor_name_.ClearToEmpty();
  _impl_.indices_tensor_name_.ClearToEmpty();
  _impl_.dense_shape_tensor_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TensorInfo_CooSparse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string values_tensor_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_values_tensor_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.TensorInfo.CooSparse.values_tensor_name"));
        } else
          goto handle_unusual;
        continue;
      // string indices_tensor_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_indices_tensor_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.TensorInfo.CooSparse.indices_tensor_name"));
        } else
          goto handle_unusual;
        continue;
      // string dense_shape_tensor_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_dense_shape_tensor_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.TensorInfo.CooSparse.dense_shape_tensor_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TensorInfo_CooSparse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.TensorInfo.CooSparse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string values_tensor_name = 1;
  if (!this->_internal_values_tensor_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_values_tensor_name().data(), static_cast<int>(this->_internal_values_tensor_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.TensorInfo.CooSparse.values_tensor_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_values_tensor_name(), target);
  }

  // string indices_tensor_name = 2;
  if (!this->_internal_indices_tensor_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_indices_tensor_name().data(), static_cast<int>(this->_internal_indices_tensor_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.TensorInfo.CooSparse.indices_tensor_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_indices_tensor_name(), target);
  }

  // string dense_shape_tensor_name = 3;
  if (!this->_internal_dense_shape_tensor_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dense_shape_tensor_name().data(), static_cast<int>(this->_internal_dense_shape_tensor_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.TensorInfo.CooSparse.dense_shape_tensor_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_dense_shape_tensor_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.TensorInfo.CooSparse)
  return target;
}

size_t TensorInfo_CooSparse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.TensorInfo.CooSparse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string values_tensor_name = 1;
  if (!this->_internal_values_tensor_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_values_tensor_name());
  }

  // string indices_tensor_name = 2;
  if (!this->_internal_indices_tensor_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_indices_tensor_name());
  }

  // string dense_shape_tensor_name = 3;
  if (!this->_internal_dense_shape_tensor_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dense_shape_tensor_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TensorInfo_CooSparse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TensorInfo_CooSparse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TensorInfo_CooSparse::GetClassData() const { return &_class_data_; }


void TensorInfo_CooSparse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TensorInfo_CooSparse*>(&to_msg);
  auto& from = static_cast<const TensorInfo_CooSparse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.TensorInfo.CooSparse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_values_tensor_name().empty()) {
    _this->_internal_set_values_tensor_name(from._internal_values_tensor_name());
  }
  if (!from._internal_indices_tensor_name().empty()) {
    _this->_internal_set_indices_tensor_name(from._internal_indices_tensor_name());
  }
  if (!from._internal_dense_shape_tensor_name().empty()) {
    _this->_internal_set_dense_shape_tensor_name(from._internal_dense_shape_tensor_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TensorInfo_CooSparse::CopyFrom(const TensorInfo_CooSparse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.TensorInfo.CooSparse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorInfo_CooSparse::IsInitialized() const {
  return true;
}

void TensorInfo_CooSparse::InternalSwap(TensorInfo_CooSparse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.values_tensor_name_, lhs_arena,
      &other->_impl_.values_tensor_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.indices_tensor_name_, lhs_arena,
      &other->_impl_.indices_tensor_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.dense_shape_tensor_name_, lhs_arena,
      &other->_impl_.dense_shape_tensor_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata TensorInfo_CooSparse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[11]);
}

// ===================================================================

class TensorInfo_CompositeTensor::_Internal {
 public:
  static const ::tensorflow::TypeSpecProto& type_spec(const TensorInfo_CompositeTensor* msg);
};

const ::tensorflow::TypeSpecProto&
TensorInfo_CompositeTensor::_Internal::type_spec(const TensorInfo_CompositeTensor* msg) {
  return *msg->_impl_.type_spec_;
}
void TensorInfo_CompositeTensor::clear_type_spec() {
  if (GetArenaForAllocation() == nullptr && _impl_.type_spec_ != nullptr) {
    delete _impl_.type_spec_;
  }
  _impl_.type_spec_ = nullptr;
}
TensorInfo_CompositeTensor::TensorInfo_CompositeTensor(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.TensorInfo.CompositeTensor)
}
TensorInfo_CompositeTensor::TensorInfo_CompositeTensor(const TensorInfo_CompositeTensor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TensorInfo_CompositeTensor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.components_){from._impl_.components_}
    , decltype(_impl_.type_spec_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_type_spec()) {
    _this->_impl_.type_spec_ = new ::tensorflow::TypeSpecProto(*from._impl_.type_spec_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.TensorInfo.CompositeTensor)
}

inline void TensorInfo_CompositeTensor::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.components_){arena}
    , decltype(_impl_.type_spec_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TensorInfo_CompositeTensor::~TensorInfo_CompositeTensor() {
  // @@protoc_insertion_point(destructor:tensorflow.TensorInfo.CompositeTensor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TensorInfo_CompositeTensor::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.components_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.type_spec_;
}

void TensorInfo_CompositeTensor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TensorInfo_CompositeTensor::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.TensorInfo.CompositeTensor)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.components_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.type_spec_ != nullptr) {
    delete _impl_.type_spec_;
  }
  _impl_.type_spec_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TensorInfo_CompositeTensor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tensorflow.TypeSpecProto type_spec = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_type_spec(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .tensorflow.TensorInfo components = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_components(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TensorInfo_CompositeTensor::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.TensorInfo.CompositeTensor)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.TypeSpecProto type_spec = 1;
  if (this->_internal_has_type_spec()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::type_spec(this),
        _Internal::type_spec(this).GetCachedSize(), target, stream);
  }

  // repeated .tensorflow.TensorInfo components = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_components_size()); i < n; i++) {
    const auto& repfield = this->_internal_components(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.TensorInfo.CompositeTensor)
  return target;
}

size_t TensorInfo_CompositeTensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.TensorInfo.CompositeTensor)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.TensorInfo components = 2;
  total_size += 1UL * this->_internal_components_size();
  for (const auto& msg : this->_impl_.components_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .tensorflow.TypeSpecProto type_spec = 1;
  if (this->_internal_has_type_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.type_spec_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TensorInfo_CompositeTensor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TensorInfo_CompositeTensor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TensorInfo_CompositeTensor::GetClassData() const { return &_class_data_; }


void TensorInfo_CompositeTensor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TensorInfo_CompositeTensor*>(&to_msg);
  auto& from = static_cast<const TensorInfo_CompositeTensor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.TensorInfo.CompositeTensor)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.components_.MergeFrom(from._impl_.components_);
  if (from._internal_has_type_spec()) {
    _this->_internal_mutable_type_spec()->::tensorflow::TypeSpecProto::MergeFrom(
        from._internal_type_spec());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TensorInfo_CompositeTensor::CopyFrom(const TensorInfo_CompositeTensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.TensorInfo.CompositeTensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorInfo_CompositeTensor::IsInitialized() const {
  return true;
}

void TensorInfo_CompositeTensor::InternalSwap(TensorInfo_CompositeTensor* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.components_.InternalSwap(&other->_impl_.components_);
  swap(_impl_.type_spec_, other->_impl_.type_spec_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TensorInfo_CompositeTensor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[12]);
}

// ===================================================================

class TensorInfo::_Internal {
 public:
  static const ::tensorflow::TensorInfo_CooSparse& coo_sparse(const TensorInfo* msg);
  static const ::tensorflow::TensorInfo_CompositeTensor& composite_tensor(const TensorInfo* msg);
  static const ::tensorflow::TensorShapeProto& tensor_shape(const TensorInfo* msg);
};

const ::tensorflow::TensorInfo_CooSparse&
TensorInfo::_Internal::coo_sparse(const TensorInfo* msg) {
  return *msg->_impl_.encoding_.coo_sparse_;
}
const ::tensorflow::TensorInfo_CompositeTensor&
TensorInfo::_Internal::composite_tensor(const TensorInfo* msg) {
  return *msg->_impl_.encoding_.composite_tensor_;
}
const ::tensorflow::TensorShapeProto&
TensorInfo::_Internal::tensor_shape(const TensorInfo* msg) {
  return *msg->_impl_.tensor_shape_;
}
void TensorInfo::set_allocated_coo_sparse(::tensorflow::TensorInfo_CooSparse* coo_sparse) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_encoding();
  if (coo_sparse) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(coo_sparse);
    if (message_arena != submessage_arena) {
      coo_sparse = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, coo_sparse, submessage_arena);
    }
    set_has_coo_sparse();
    _impl_.encoding_.coo_sparse_ = coo_sparse;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.TensorInfo.coo_sparse)
}
void TensorInfo::set_allocated_composite_tensor(::tensorflow::TensorInfo_CompositeTensor* composite_tensor) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_encoding();
  if (composite_tensor) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(composite_tensor);
    if (message_arena != submessage_arena) {
      composite_tensor = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, composite_tensor, submessage_arena);
    }
    set_has_composite_tensor();
    _impl_.encoding_.composite_tensor_ = composite_tensor;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.TensorInfo.composite_tensor)
}
void TensorInfo::clear_tensor_shape() {
  if (GetArenaForAllocation() == nullptr && _impl_.tensor_shape_ != nullptr) {
    delete _impl_.tensor_shape_;
  }
  _impl_.tensor_shape_ = nullptr;
}
TensorInfo::TensorInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.TensorInfo)
}
TensorInfo::TensorInfo(const TensorInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TensorInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tensor_shape_){nullptr}
    , decltype(_impl_.dtype_){}
    , decltype(_impl_.encoding_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tensor_shape()) {
    _this->_impl_.tensor_shape_ = new ::tensorflow::TensorShapeProto(*from._impl_.tensor_shape_);
  }
  _this->_impl_.dtype_ = from._impl_.dtype_;
  clear_has_encoding();
  switch (from.encoding_case()) {
    case kName: {
      _this->_internal_set_name(from._internal_name());
      break;
    }
    case kCooSparse: {
      _this->_internal_mutable_coo_sparse()->::tensorflow::TensorInfo_CooSparse::MergeFrom(
          from._internal_coo_sparse());
      break;
    }
    case kCompositeTensor: {
      _this->_internal_mutable_composite_tensor()->::tensorflow::TensorInfo_CompositeTensor::MergeFrom(
          from._internal_composite_tensor());
      break;
    }
    case ENCODING_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.TensorInfo)
}

inline void TensorInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tensor_shape_){nullptr}
    , decltype(_impl_.dtype_){0}
    , decltype(_impl_.encoding_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_encoding();
}

TensorInfo::~TensorInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.TensorInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TensorInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.tensor_shape_;
  if (has_encoding()) {
    clear_encoding();
  }
}

void TensorInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TensorInfo::clear_encoding() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.TensorInfo)
  switch (encoding_case()) {
    case kName: {
      _impl_.encoding_.name_.Destroy();
      break;
    }
    case kCooSparse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.encoding_.coo_sparse_;
      }
      break;
    }
    case kCompositeTensor: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.encoding_.composite_tensor_;
      }
      break;
    }
    case ENCODING_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ENCODING_NOT_SET;
}


void TensorInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.TensorInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.tensor_shape_ != nullptr) {
    delete _impl_.tensor_shape_;
  }
  _impl_.tensor_shape_ = nullptr;
  _impl_.dtype_ = 0;
  clear_encoding();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TensorInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.TensorInfo.name"));
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.DataType dtype = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_dtype(static_cast<::tensorflow::DataType>(val));
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.TensorShapeProto tensor_shape = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_tensor_shape(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.TensorInfo.CooSparse coo_sparse = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_coo_sparse(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.TensorInfo.CompositeTensor composite_tensor = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_composite_tensor(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TensorInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.TensorInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.TensorInfo.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .tensorflow.DataType dtype = 2;
  if (this->_internal_dtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_dtype(), target);
  }

  // .tensorflow.TensorShapeProto tensor_shape = 3;
  if (this->_internal_has_tensor_shape()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::tensor_shape(this),
        _Internal::tensor_shape(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.TensorInfo.CooSparse coo_sparse = 4;
  if (_internal_has_coo_sparse()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::coo_sparse(this),
        _Internal::coo_sparse(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.TensorInfo.CompositeTensor composite_tensor = 5;
  if (_internal_has_composite_tensor()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::composite_tensor(this),
        _Internal::composite_tensor(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.TensorInfo)
  return target;
}

size_t TensorInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.TensorInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .tensorflow.TensorShapeProto tensor_shape = 3;
  if (this->_internal_has_tensor_shape()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.tensor_shape_);
  }

  // .tensorflow.DataType dtype = 2;
  if (this->_internal_dtype() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_dtype());
  }

  switch (encoding_case()) {
    // string name = 1;
    case kName: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
      break;
    }
    // .tensorflow.TensorInfo.CooSparse coo_sparse = 4;
    case kCooSparse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.encoding_.coo_sparse_);
      break;
    }
    // .tensorflow.TensorInfo.CompositeTensor composite_tensor = 5;
    case kCompositeTensor: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.encoding_.composite_tensor_);
      break;
    }
    case ENCODING_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TensorInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TensorInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TensorInfo::GetClassData() const { return &_class_data_; }


void TensorInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TensorInfo*>(&to_msg);
  auto& from = static_cast<const TensorInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.TensorInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_tensor_shape()) {
    _this->_internal_mutable_tensor_shape()->::tensorflow::TensorShapeProto::MergeFrom(
        from._internal_tensor_shape());
  }
  if (from._internal_dtype() != 0) {
    _this->_internal_set_dtype(from._internal_dtype());
  }
  switch (from.encoding_case()) {
    case kName: {
      _this->_internal_set_name(from._internal_name());
      break;
    }
    case kCooSparse: {
      _this->_internal_mutable_coo_sparse()->::tensorflow::TensorInfo_CooSparse::MergeFrom(
          from._internal_coo_sparse());
      break;
    }
    case kCompositeTensor: {
      _this->_internal_mutable_composite_tensor()->::tensorflow::TensorInfo_CompositeTensor::MergeFrom(
          from._internal_composite_tensor());
      break;
    }
    case ENCODING_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TensorInfo::CopyFrom(const TensorInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.TensorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorInfo::IsInitialized() const {
  return true;
}

void TensorInfo::InternalSwap(TensorInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TensorInfo, _impl_.dtype_)
      + sizeof(TensorInfo::_impl_.dtype_)
      - PROTOBUF_FIELD_OFFSET(TensorInfo, _impl_.tensor_shape_)>(
          reinterpret_cast<char*>(&_impl_.tensor_shape_),
          reinterpret_cast<char*>(&other->_impl_.tensor_shape_));
  swap(_impl_.encoding_, other->_impl_.encoding_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata TensorInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[13]);
}

// ===================================================================

SignatureDef_InputsEntry_DoNotUse::SignatureDef_InputsEntry_DoNotUse() {}
SignatureDef_InputsEntry_DoNotUse::SignatureDef_InputsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SignatureDef_InputsEntry_DoNotUse::MergeFrom(const SignatureDef_InputsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SignatureDef_InputsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[14]);
}

// ===================================================================

SignatureDef_OutputsEntry_DoNotUse::SignatureDef_OutputsEntry_DoNotUse() {}
SignatureDef_OutputsEntry_DoNotUse::SignatureDef_OutputsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SignatureDef_OutputsEntry_DoNotUse::MergeFrom(const SignatureDef_OutputsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SignatureDef_OutputsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[15]);
}

// ===================================================================

SignatureDef_DefaultsEntry_DoNotUse::SignatureDef_DefaultsEntry_DoNotUse() {}
SignatureDef_DefaultsEntry_DoNotUse::SignatureDef_DefaultsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SignatureDef_DefaultsEntry_DoNotUse::MergeFrom(const SignatureDef_DefaultsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SignatureDef_DefaultsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[16]);
}

// ===================================================================

class SignatureDef::_Internal {
 public:
};

void SignatureDef::clear_defaults() {
  _impl_.defaults_.Clear();
}
SignatureDef::SignatureDef(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &SignatureDef::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:tensorflow.SignatureDef)
}
SignatureDef::SignatureDef(const SignatureDef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SignatureDef* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.inputs_)*/{}
    , /*decltype(_impl_.outputs_)*/{}
    , /*decltype(_impl_.defaults_)*/{}
    , decltype(_impl_.method_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.inputs_.MergeFrom(from._impl_.inputs_);
  _this->_impl_.outputs_.MergeFrom(from._impl_.outputs_);
  _this->_impl_.defaults_.MergeFrom(from._impl_.defaults_);
  _impl_.method_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.method_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_method_name().empty()) {
    _this->_impl_.method_name_.Set(from._internal_method_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.SignatureDef)
}

inline void SignatureDef::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.inputs_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.outputs_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_.defaults_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.method_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.method_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.method_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SignatureDef::~SignatureDef() {
  // @@protoc_insertion_point(destructor:tensorflow.SignatureDef)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void SignatureDef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.inputs_.Destruct();
  _impl_.inputs_.~MapField();
  _impl_.outputs_.Destruct();
  _impl_.outputs_.~MapField();
  _impl_.defaults_.Destruct();
  _impl_.defaults_.~MapField();
  _impl_.method_name_.Destroy();
}

void SignatureDef::ArenaDtor(void* object) {
  SignatureDef* _this = reinterpret_cast< SignatureDef* >(object);
  _this->_impl_.inputs_.Destruct();
  _this->_impl_.outputs_.Destruct();
  _this->_impl_.defaults_.Destruct();
}
void SignatureDef::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SignatureDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SignatureDef)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inputs_.Clear();
  _impl_.outputs_.Clear();
  _impl_.defaults_.Clear();
  _impl_.method_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SignatureDef::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .tensorflow.TensorInfo> inputs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.inputs_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, .tensorflow.TensorInfo> outputs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.outputs_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string method_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_method_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.SignatureDef.method_name"));
        } else
          goto handle_unusual;
        continue;
      // map<string, .tensorflow.TensorProto> defaults = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.defaults_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SignatureDef::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SignatureDef)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .tensorflow.TensorInfo> inputs = 1;
  if (!this->_internal_inputs().empty()) {
    using MapType = ::_pb::Map<std::string, ::tensorflow::TensorInfo>;
    using WireHelper = SignatureDef_InputsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_inputs();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "tensorflow.SignatureDef.InputsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // map<string, .tensorflow.TensorInfo> outputs = 2;
  if (!this->_internal_outputs().empty()) {
    using MapType = ::_pb::Map<std::string, ::tensorflow::TensorInfo>;
    using WireHelper = SignatureDef_OutputsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_outputs();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "tensorflow.SignatureDef.OutputsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // string method_name = 3;
  if (!this->_internal_method_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method_name().data(), static_cast<int>(this->_internal_method_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SignatureDef.method_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_method_name(), target);
  }

  // map<string, .tensorflow.TensorProto> defaults = 4;
  if (!this->_internal_defaults().empty()) {
    using MapType = ::_pb::Map<std::string, ::tensorflow::TensorProto>;
    using WireHelper = SignatureDef_DefaultsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_defaults();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "tensorflow.SignatureDef.DefaultsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SignatureDef)
  return target;
}

size_t SignatureDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SignatureDef)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .tensorflow.TensorInfo> inputs = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_inputs_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::TensorInfo >::const_iterator
      it = this->_internal_inputs().begin();
      it != this->_internal_inputs().end(); ++it) {
    total_size += SignatureDef_InputsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, .tensorflow.TensorInfo> outputs = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_outputs_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::TensorInfo >::const_iterator
      it = this->_internal_outputs().begin();
      it != this->_internal_outputs().end(); ++it) {
    total_size += SignatureDef_OutputsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, .tensorflow.TensorProto> defaults = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_defaults_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::TensorProto >::const_iterator
      it = this->_internal_defaults().begin();
      it != this->_internal_defaults().end(); ++it) {
    total_size += SignatureDef_DefaultsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string method_name = 3;
  if (!this->_internal_method_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SignatureDef::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SignatureDef::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SignatureDef::GetClassData() const { return &_class_data_; }


void SignatureDef::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SignatureDef*>(&to_msg);
  auto& from = static_cast<const SignatureDef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SignatureDef)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.inputs_.MergeFrom(from._impl_.inputs_);
  _this->_impl_.outputs_.MergeFrom(from._impl_.outputs_);
  _this->_impl_.defaults_.MergeFrom(from._impl_.defaults_);
  if (!from._internal_method_name().empty()) {
    _this->_internal_set_method_name(from._internal_method_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SignatureDef::CopyFrom(const SignatureDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SignatureDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignatureDef::IsInitialized() const {
  return true;
}

void SignatureDef::InternalSwap(SignatureDef* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.inputs_.InternalSwap(&other->_impl_.inputs_);
  _impl_.outputs_.InternalSwap(&other->_impl_.outputs_);
  _impl_.defaults_.InternalSwap(&other->_impl_.defaults_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.method_name_, lhs_arena,
      &other->_impl_.method_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SignatureDef::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[17]);
}

// ===================================================================

class AssetFileDef::_Internal {
 public:
  static const ::tensorflow::TensorInfo& tensor_info(const AssetFileDef* msg);
};

const ::tensorflow::TensorInfo&
AssetFileDef::_Internal::tensor_info(const AssetFileDef* msg) {
  return *msg->_impl_.tensor_info_;
}
AssetFileDef::AssetFileDef(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.AssetFileDef)
}
AssetFileDef::AssetFileDef(const AssetFileDef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AssetFileDef* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.filename_){}
    , decltype(_impl_.tensor_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.filename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_filename().empty()) {
    _this->_impl_.filename_.Set(from._internal_filename(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_tensor_info()) {
    _this->_impl_.tensor_info_ = new ::tensorflow::TensorInfo(*from._impl_.tensor_info_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.AssetFileDef)
}

inline void AssetFileDef::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.filename_){}
    , decltype(_impl_.tensor_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.filename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AssetFileDef::~AssetFileDef() {
  // @@protoc_insertion_point(destructor:tensorflow.AssetFileDef)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AssetFileDef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.filename_.Destroy();
  if (this != internal_default_instance()) delete _impl_.tensor_info_;
}

void AssetFileDef::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AssetFileDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.AssetFileDef)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.filename_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.tensor_info_ != nullptr) {
    delete _impl_.tensor_info_;
  }
  _impl_.tensor_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AssetFileDef::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tensorflow.TensorInfo tensor_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_tensor_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string filename = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_filename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.AssetFileDef.filename"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AssetFileDef::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.AssetFileDef)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.TensorInfo tensor_info = 1;
  if (this->_internal_has_tensor_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::tensor_info(this),
        _Internal::tensor_info(this).GetCachedSize(), target, stream);
  }

  // string filename = 2;
  if (!this->_internal_filename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filename().data(), static_cast<int>(this->_internal_filename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.AssetFileDef.filename");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_filename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.AssetFileDef)
  return target;
}

size_t AssetFileDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.AssetFileDef)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string filename = 2;
  if (!this->_internal_filename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filename());
  }

  // .tensorflow.TensorInfo tensor_info = 1;
  if (this->_internal_has_tensor_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.tensor_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AssetFileDef::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AssetFileDef::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AssetFileDef::GetClassData() const { return &_class_data_; }


void AssetFileDef::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AssetFileDef*>(&to_msg);
  auto& from = static_cast<const AssetFileDef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.AssetFileDef)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_filename().empty()) {
    _this->_internal_set_filename(from._internal_filename());
  }
  if (from._internal_has_tensor_info()) {
    _this->_internal_mutable_tensor_info()->::tensorflow::TensorInfo::MergeFrom(
        from._internal_tensor_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AssetFileDef::CopyFrom(const AssetFileDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.AssetFileDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetFileDef::IsInitialized() const {
  return true;
}

void AssetFileDef::InternalSwap(AssetFileDef* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.filename_, lhs_arena,
      &other->_impl_.filename_, rhs_arena
  );
  swap(_impl_.tensor_info_, other->_impl_.tensor_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AssetFileDef::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto[18]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tensorflow::MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse*
Arena::CreateMaybeMessage< ::tensorflow::MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::MetaGraphDef_MetaInfoDef_FunctionAliasesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::MetaGraphDef_MetaInfoDef*
Arena::CreateMaybeMessage< ::tensorflow::MetaGraphDef_MetaInfoDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::MetaGraphDef_MetaInfoDef >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::MetaGraphDef_CollectionDefEntry_DoNotUse*
Arena::CreateMaybeMessage< ::tensorflow::MetaGraphDef_CollectionDefEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::MetaGraphDef_CollectionDefEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::MetaGraphDef_SignatureDefEntry_DoNotUse*
Arena::CreateMaybeMessage< ::tensorflow::MetaGraphDef_SignatureDefEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::MetaGraphDef_SignatureDefEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::MetaGraphDef*
Arena::CreateMaybeMessage< ::tensorflow::MetaGraphDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::MetaGraphDef >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::CollectionDef_NodeList*
Arena::CreateMaybeMessage< ::tensorflow::CollectionDef_NodeList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::CollectionDef_NodeList >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::CollectionDef_BytesList*
Arena::CreateMaybeMessage< ::tensorflow::CollectionDef_BytesList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::CollectionDef_BytesList >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::CollectionDef_Int64List*
Arena::CreateMaybeMessage< ::tensorflow::CollectionDef_Int64List >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::CollectionDef_Int64List >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::CollectionDef_FloatList*
Arena::CreateMaybeMessage< ::tensorflow::CollectionDef_FloatList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::CollectionDef_FloatList >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::CollectionDef_AnyList*
Arena::CreateMaybeMessage< ::tensorflow::CollectionDef_AnyList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::CollectionDef_AnyList >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::CollectionDef*
Arena::CreateMaybeMessage< ::tensorflow::CollectionDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::CollectionDef >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::TensorInfo_CooSparse*
Arena::CreateMaybeMessage< ::tensorflow::TensorInfo_CooSparse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::TensorInfo_CooSparse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::TensorInfo_CompositeTensor*
Arena::CreateMaybeMessage< ::tensorflow::TensorInfo_CompositeTensor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::TensorInfo_CompositeTensor >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::TensorInfo*
Arena::CreateMaybeMessage< ::tensorflow::TensorInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::TensorInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SignatureDef_InputsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::tensorflow::SignatureDef_InputsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SignatureDef_InputsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SignatureDef_OutputsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::tensorflow::SignatureDef_OutputsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SignatureDef_OutputsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SignatureDef_DefaultsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::tensorflow::SignatureDef_DefaultsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SignatureDef_DefaultsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SignatureDef*
Arena::CreateMaybeMessage< ::tensorflow::SignatureDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SignatureDef >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::AssetFileDef*
Arena::CreateMaybeMessage< ::tensorflow::AssetFileDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::AssetFileDef >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
