// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/saved_object_graph.proto

#include "tensorflow/core/protobuf/saved_object_graph.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace tensorflow {
PROTOBUF_CONSTEXPR SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct SavedObjectGraph_ConcreteFunctionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SavedObjectGraph_ConcreteFunctionsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SavedObjectGraph_ConcreteFunctionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SavedObjectGraph_ConcreteFunctionsEntry_DoNotUseDefaultTypeInternal _SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR SavedObjectGraph::SavedObjectGraph(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nodes_)*/{}
  , /*decltype(_impl_.concrete_functions_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SavedObjectGraphDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SavedObjectGraphDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SavedObjectGraphDefaultTypeInternal() {}
  union {
    SavedObjectGraph _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SavedObjectGraphDefaultTypeInternal _SavedObjectGraph_default_instance_;
PROTOBUF_CONSTEXPR SavedObject_SaveableObjectsEntry_DoNotUse::SavedObject_SaveableObjectsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct SavedObject_SaveableObjectsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SavedObject_SaveableObjectsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SavedObject_SaveableObjectsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SavedObject_SaveableObjectsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SavedObject_SaveableObjectsEntry_DoNotUseDefaultTypeInternal _SavedObject_SaveableObjectsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR SavedObject::SavedObject(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.children_)*/{}
  , /*decltype(_impl_.slot_variables_)*/{}
  , /*decltype(_impl_.saveable_objects_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.dependencies_)*/{}
  , /*decltype(_impl_.registered_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.registered_saver_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.serialized_user_proto_)*/nullptr
  , /*decltype(_impl_.kind_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct SavedObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SavedObjectDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SavedObjectDefaultTypeInternal() {}
  union {
    SavedObject _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SavedObjectDefaultTypeInternal _SavedObject_default_instance_;
PROTOBUF_CONSTEXPR SavedUserObject::SavedUserObject(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.identifier_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metadata_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.version_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SavedUserObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SavedUserObjectDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SavedUserObjectDefaultTypeInternal() {}
  union {
    SavedUserObject _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SavedUserObjectDefaultTypeInternal _SavedUserObject_default_instance_;
PROTOBUF_CONSTEXPR SavedAsset::SavedAsset(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.asset_file_def_index_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SavedAssetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SavedAssetDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SavedAssetDefaultTypeInternal() {}
  union {
    SavedAsset _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SavedAssetDefaultTypeInternal _SavedAsset_default_instance_;
PROTOBUF_CONSTEXPR SavedFunction::SavedFunction(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.concrete_functions_)*/{}
  , /*decltype(_impl_.function_spec_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SavedFunctionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SavedFunctionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SavedFunctionDefaultTypeInternal() {}
  union {
    SavedFunction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SavedFunctionDefaultTypeInternal _SavedFunction_default_instance_;
PROTOBUF_CONSTEXPR CapturedTensor::CapturedTensor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.concrete_function_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CapturedTensorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CapturedTensorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CapturedTensorDefaultTypeInternal() {}
  union {
    CapturedTensor _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CapturedTensorDefaultTypeInternal _CapturedTensor_default_instance_;
PROTOBUF_CONSTEXPR SavedConcreteFunction::SavedConcreteFunction(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bound_inputs_)*/{}
  , /*decltype(_impl_._bound_inputs_cached_byte_size_)*/{0}
  , /*decltype(_impl_.canonicalized_input_signature_)*/nullptr
  , /*decltype(_impl_.output_signature_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SavedConcreteFunctionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SavedConcreteFunctionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SavedConcreteFunctionDefaultTypeInternal() {}
  union {
    SavedConcreteFunction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SavedConcreteFunctionDefaultTypeInternal _SavedConcreteFunction_default_instance_;
PROTOBUF_CONSTEXPR SavedBareConcreteFunction::SavedBareConcreteFunction(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.argument_keywords_)*/{}
  , /*decltype(_impl_.concrete_function_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.function_spec_)*/nullptr
  , /*decltype(_impl_.allowed_positional_arguments_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SavedBareConcreteFunctionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SavedBareConcreteFunctionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SavedBareConcreteFunctionDefaultTypeInternal() {}
  union {
    SavedBareConcreteFunction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SavedBareConcreteFunctionDefaultTypeInternal _SavedBareConcreteFunction_default_instance_;
PROTOBUF_CONSTEXPR SavedConstant::SavedConstant(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.operation_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SavedConstantDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SavedConstantDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SavedConstantDefaultTypeInternal() {}
  union {
    SavedConstant _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SavedConstantDefaultTypeInternal _SavedConstant_default_instance_;
PROTOBUF_CONSTEXPR SavedVariable::SavedVariable(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.experimental_distributed_variable_components_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.device_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.shape_)*/nullptr
  , /*decltype(_impl_.dtype_)*/0
  , /*decltype(_impl_.trainable_)*/false
  , /*decltype(_impl_.synchronization_)*/0
  , /*decltype(_impl_.aggregation_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SavedVariableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SavedVariableDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SavedVariableDefaultTypeInternal() {}
  union {
    SavedVariable _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SavedVariableDefaultTypeInternal _SavedVariable_default_instance_;
PROTOBUF_CONSTEXPR FunctionSpec::FunctionSpec(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.fullargspec_)*/nullptr
  , /*decltype(_impl_.input_signature_)*/nullptr
  , /*decltype(_impl_.is_method_)*/false
  , /*decltype(_impl_.jit_compile_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FunctionSpecDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FunctionSpecDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FunctionSpecDefaultTypeInternal() {}
  union {
    FunctionSpec _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FunctionSpecDefaultTypeInternal _FunctionSpec_default_instance_;
PROTOBUF_CONSTEXPR SavedResource::SavedResource(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.device_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SavedResourceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SavedResourceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SavedResourceDefaultTypeInternal() {}
  union {
    SavedResource _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SavedResourceDefaultTypeInternal _SavedResource_default_instance_;
PROTOBUF_CONSTEXPR SaveableObject::SaveableObject(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.save_function_)*/0
  , /*decltype(_impl_.restore_function_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SaveableObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SaveableObjectDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SaveableObjectDefaultTypeInternal() {}
  union {
    SaveableObject _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SaveableObjectDefaultTypeInternal _SaveableObject_default_instance_;
}  // namespace tensorflow
static ::_pb::Metadata file_level_metadata_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[15];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto = nullptr;

const uint32_t TableStruct_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObjectGraph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObjectGraph, _impl_.nodes_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObjectGraph, _impl_.concrete_functions_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObject_SaveableObjectsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObject_SaveableObjectsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObject_SaveableObjectsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObject_SaveableObjectsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObject, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObject, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObject, _impl_.children_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObject, _impl_.dependencies_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObject, _impl_.slot_variables_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObject, _impl_.saveable_objects_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObject, _impl_.registered_name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObject, _impl_.serialized_user_proto_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObject, _impl_.registered_saver_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObject, _impl_.kind_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedUserObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedUserObject, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedUserObject, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedUserObject, _impl_.metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedAsset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedAsset, _impl_.asset_file_def_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedFunction, _impl_.concrete_functions_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedFunction, _impl_.function_spec_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::CapturedTensor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::CapturedTensor, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::CapturedTensor, _impl_.concrete_function_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedConcreteFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedConcreteFunction, _impl_.bound_inputs_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedConcreteFunction, _impl_.canonicalized_input_signature_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedConcreteFunction, _impl_.output_signature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedBareConcreteFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedBareConcreteFunction, _impl_.concrete_function_name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedBareConcreteFunction, _impl_.argument_keywords_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedBareConcreteFunction, _impl_.allowed_positional_arguments_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedBareConcreteFunction, _impl_.function_spec_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedConstant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedConstant, _impl_.operation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedVariable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedVariable, _impl_.dtype_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedVariable, _impl_.shape_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedVariable, _impl_.trainable_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedVariable, _impl_.synchronization_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedVariable, _impl_.aggregation_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedVariable, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedVariable, _impl_.device_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedVariable, _impl_.experimental_distributed_variable_components_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionSpec, _impl_.fullargspec_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionSpec, _impl_.is_method_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionSpec, _impl_.input_signature_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionSpec, _impl_.jit_compile_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedResource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedResource, _impl_.device_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SaveableObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SaveableObject, _impl_.save_function_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SaveableObject, _impl_.restore_function_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::tensorflow::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse)},
  { 10, -1, -1, sizeof(::tensorflow::SavedObjectGraph)},
  { 18, 26, -1, sizeof(::tensorflow::SavedObject_SaveableObjectsEntry_DoNotUse)},
  { 28, -1, -1, sizeof(::tensorflow::SavedObject)},
  { 50, -1, -1, sizeof(::tensorflow::SavedUserObject)},
  { 59, -1, -1, sizeof(::tensorflow::SavedAsset)},
  { 66, -1, -1, sizeof(::tensorflow::SavedFunction)},
  { 74, -1, -1, sizeof(::tensorflow::CapturedTensor)},
  { 82, -1, -1, sizeof(::tensorflow::SavedConcreteFunction)},
  { 91, -1, -1, sizeof(::tensorflow::SavedBareConcreteFunction)},
  { 101, -1, -1, sizeof(::tensorflow::SavedConstant)},
  { 108, -1, -1, sizeof(::tensorflow::SavedVariable)},
  { 122, -1, -1, sizeof(::tensorflow::FunctionSpec)},
  { 132, -1, -1, sizeof(::tensorflow::SavedResource)},
  { 139, -1, -1, sizeof(::tensorflow::SaveableObject)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::tensorflow::_SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse_default_instance_._instance,
  &::tensorflow::_SavedObjectGraph_default_instance_._instance,
  &::tensorflow::_SavedObject_SaveableObjectsEntry_DoNotUse_default_instance_._instance,
  &::tensorflow::_SavedObject_default_instance_._instance,
  &::tensorflow::_SavedUserObject_default_instance_._instance,
  &::tensorflow::_SavedAsset_default_instance_._instance,
  &::tensorflow::_SavedFunction_default_instance_._instance,
  &::tensorflow::_CapturedTensor_default_instance_._instance,
  &::tensorflow::_SavedConcreteFunction_default_instance_._instance,
  &::tensorflow::_SavedBareConcreteFunction_default_instance_._instance,
  &::tensorflow::_SavedConstant_default_instance_._instance,
  &::tensorflow::_SavedVariable_default_instance_._instance,
  &::tensorflow::_FunctionSpec_default_instance_._instance,
  &::tensorflow::_SavedResource_default_instance_._instance,
  &::tensorflow::_SaveableObject_default_instance_._instance,
};

const char descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n1tensorflow/core/protobuf/saved_object_"
  "graph.proto\022\ntensorflow\032\031google/protobuf"
  "/any.proto\032,tensorflow/core/framework/te"
  "nsor_shape.proto\032%tensorflow/core/framew"
  "ork/types.proto\032(tensorflow/core/framewo"
  "rk/variable.proto\032(tensorflow/core/frame"
  "work/versions.proto\032%tensorflow/core/pro"
  "tobuf/struct.proto\0325tensorflow/core/prot"
  "obuf/trackable_object_graph.proto\"\350\001\n\020Sa"
  "vedObjectGraph\022&\n\005nodes\030\001 \003(\0132\027.tensorfl"
  "ow.SavedObject\022O\n\022concrete_functions\030\002 \003"
  "(\01323.tensorflow.SavedObjectGraph.Concret"
  "eFunctionsEntry\032[\n\026ConcreteFunctionsEntr"
  "y\022\013\n\003key\030\001 \001(\t\0220\n\005value\030\002 \001(\0132!.tensorfl"
  "ow.SavedConcreteFunction:\0028\001\"\320\007\n\013SavedOb"
  "ject\022R\n\010children\030\001 \003(\0132@.tensorflow.Trac"
  "kableObjectGraph.TrackableObject.ObjectR"
  "eference\022V\n\014dependencies\030\017 \003(\0132@.tensorf"
  "low.TrackableObjectGraph.TrackableObject"
  ".ObjectReference\022^\n\016slot_variables\030\003 \003(\013"
  "2F.tensorflow.TrackableObjectGraph.Track"
  "ableObject.SlotVariableReference\0222\n\013user"
  "_object\030\004 \001(\0132\033.tensorflow.SavedUserObje"
  "ctH\000\022\'\n\005asset\030\005 \001(\0132\026.tensorflow.SavedAs"
  "setH\000\022-\n\010function\030\006 \001(\0132\031.tensorflow.Sav"
  "edFunctionH\000\022-\n\010variable\030\007 \001(\0132\031.tensorf"
  "low.SavedVariableH\000\022G\n\026bare_concrete_fun"
  "ction\030\010 \001(\0132%.tensorflow.SavedBareConcre"
  "teFunctionH\000\022-\n\010constant\030\t \001(\0132\031.tensorf"
  "low.SavedConstantH\000\022-\n\010resource\030\n \001(\0132\031."
  "tensorflow.SavedResourceH\000\0225\n\017captured_t"
  "ensor\030\014 \001(\0132\032.tensorflow.CapturedTensorH"
  "\000\022F\n\020saveable_objects\030\013 \003(\0132,.tensorflow"
  ".SavedObject.SaveableObjectsEntry\022\027\n\017reg"
  "istered_name\030\r \001(\t\0223\n\025serialized_user_pr"
  "oto\030\016 \001(\0132\024.google.protobuf.Any\022\030\n\020regis"
  "tered_saver\030\020 \001(\t\032R\n\024SaveableObjectsEntr"
  "y\022\013\n\003key\030\001 \001(\t\022)\n\005value\030\002 \001(\0132\032.tensorfl"
  "ow.SaveableObject:\0028\001B\006\n\004kindJ\004\010\002\020\003R\natt"
  "ributes\"d\n\017SavedUserObject\022\022\n\nidentifier"
  "\030\001 \001(\t\022\'\n\007version\030\002 \001(\0132\026.tensorflow.Ver"
  "sionDef\022\024\n\010metadata\030\003 \001(\tB\002\030\001\"*\n\nSavedAs"
  "set\022\034\n\024asset_file_def_index\030\001 \001(\005\"\\\n\rSav"
  "edFunction\022\032\n\022concrete_functions\030\001 \003(\t\022/"
  "\n\rfunction_spec\030\002 \001(\0132\030.tensorflow.Funct"
  "ionSpec\"9\n\016CapturedTensor\022\014\n\004name\030\001 \001(\t\022"
  "\031\n\021concrete_function\030\002 \001(\t\"\250\001\n\025SavedConc"
  "reteFunction\022\024\n\014bound_inputs\030\002 \003(\005\022B\n\035ca"
  "nonicalized_input_signature\030\003 \001(\0132\033.tens"
  "orflow.StructuredValue\0225\n\020output_signatu"
  "re\030\004 \001(\0132\033.tensorflow.StructuredValue\"\255\001"
  "\n\031SavedBareConcreteFunction\022\036\n\026concrete_"
  "function_name\030\001 \001(\t\022\031\n\021argument_keywords"
  "\030\002 \003(\t\022$\n\034allowed_positional_arguments\030\003"
  " \001(\003\022/\n\rfunction_spec\030\004 \001(\0132\030.tensorflow"
  ".FunctionSpec\"\"\n\rSavedConstant\022\021\n\toperat"
  "ion\030\001 \001(\t\"\327\002\n\rSavedVariable\022#\n\005dtype\030\001 \001"
  "(\0162\024.tensorflow.DataType\022+\n\005shape\030\002 \001(\0132"
  "\034.tensorflow.TensorShapeProto\022\021\n\ttrainab"
  "le\030\003 \001(\010\022<\n\017synchronization\030\004 \001(\0162#.tens"
  "orflow.VariableSynchronization\0224\n\013aggreg"
  "ation\030\005 \001(\0162\037.tensorflow.VariableAggrega"
  "tion\022\014\n\004name\030\006 \001(\t\022\016\n\006device\030\007 \001(\t\022O\n,ex"
  "perimental_distributed_variable_componen"
  "ts\030\010 \003(\0132\031.tensorflow.SavedVariable\"\373\001\n\014"
  "FunctionSpec\0220\n\013fullargspec\030\001 \001(\0132\033.tens"
  "orflow.StructuredValue\022\021\n\tis_method\030\002 \001("
  "\010\0224\n\017input_signature\030\005 \001(\0132\033.tensorflow."
  "StructuredValue\0228\n\013jit_compile\030\006 \001(\0162#.t"
  "ensorflow.FunctionSpec.JitCompile\"*\n\nJit"
  "Compile\022\013\n\007DEFAULT\020\000\022\006\n\002ON\020\001\022\007\n\003OFF\020\002J\004\010"
  "\003\020\004J\004\010\004\020\005\"\037\n\rSavedResource\022\016\n\006device\030\001 \001"
  "(\t\"A\n\016SaveableObject\022\025\n\rsave_function\030\002 "
  "\001(\005\022\030\n\020restore_function\030\003 \001(\005BZZUgithub."
  "com/tensorflow/tensorflow/tensorflow/go/"
  "core/protobuf/for_core_protos_go_proto\370\001"
  "\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_deps[7] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fframework_2ftypes_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fframework_2fvariable_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fframework_2fversions_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto,
};
static ::_pbi::once_flag descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto = {
    false, false, 3049, descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto,
    "tensorflow/core/protobuf/saved_object_graph.proto",
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_once, descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_deps, 7, 15,
    schemas, file_default_instances, TableStruct_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto::offsets,
    file_level_metadata_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto, file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_getter() {
  return &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto(&descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto);
namespace tensorflow {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* FunctionSpec_JitCompile_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto);
  return file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[0];
}
bool FunctionSpec_JitCompile_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr FunctionSpec_JitCompile FunctionSpec::DEFAULT;
constexpr FunctionSpec_JitCompile FunctionSpec::ON;
constexpr FunctionSpec_JitCompile FunctionSpec::OFF;
constexpr FunctionSpec_JitCompile FunctionSpec::JitCompile_MIN;
constexpr FunctionSpec_JitCompile FunctionSpec::JitCompile_MAX;
constexpr int FunctionSpec::JitCompile_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse() {}
SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse::MergeFrom(const SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[0]);
}

// ===================================================================

class SavedObjectGraph::_Internal {
 public:
};

SavedObjectGraph::SavedObjectGraph(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &SavedObjectGraph::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedObjectGraph)
}
SavedObjectGraph::SavedObjectGraph(const SavedObjectGraph& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SavedObjectGraph* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nodes_){from._impl_.nodes_}
    , /*decltype(_impl_.concrete_functions_)*/{}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.concrete_functions_.MergeFrom(from._impl_.concrete_functions_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedObjectGraph)
}

inline void SavedObjectGraph::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nodes_){arena}
    , /*decltype(_impl_.concrete_functions_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SavedObjectGraph::~SavedObjectGraph() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedObjectGraph)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void SavedObjectGraph::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nodes_.~RepeatedPtrField();
  _impl_.concrete_functions_.Destruct();
  _impl_.concrete_functions_.~MapField();
}

void SavedObjectGraph::ArenaDtor(void* object) {
  SavedObjectGraph* _this = reinterpret_cast< SavedObjectGraph* >(object);
  _this->_impl_.concrete_functions_.Destruct();
}
void SavedObjectGraph::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SavedObjectGraph::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedObjectGraph)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nodes_.Clear();
  _impl_.concrete_functions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SavedObjectGraph::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .tensorflow.SavedObject nodes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_nodes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, .tensorflow.SavedConcreteFunction> concrete_functions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.concrete_functions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SavedObjectGraph::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedObjectGraph)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.SavedObject nodes = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_nodes_size()); i < n; i++) {
    const auto& repfield = this->_internal_nodes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // map<string, .tensorflow.SavedConcreteFunction> concrete_functions = 2;
  if (!this->_internal_concrete_functions().empty()) {
    using MapType = ::_pb::Map<std::string, ::tensorflow::SavedConcreteFunction>;
    using WireHelper = SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_concrete_functions();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "tensorflow.SavedObjectGraph.ConcreteFunctionsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedObjectGraph)
  return target;
}

size_t SavedObjectGraph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedObjectGraph)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.SavedObject nodes = 1;
  total_size += 1UL * this->_internal_nodes_size();
  for (const auto& msg : this->_impl_.nodes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<string, .tensorflow.SavedConcreteFunction> concrete_functions = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_concrete_functions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::SavedConcreteFunction >::const_iterator
      it = this->_internal_concrete_functions().begin();
      it != this->_internal_concrete_functions().end(); ++it) {
    total_size += SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SavedObjectGraph::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SavedObjectGraph::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SavedObjectGraph::GetClassData() const { return &_class_data_; }


void SavedObjectGraph::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SavedObjectGraph*>(&to_msg);
  auto& from = static_cast<const SavedObjectGraph&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedObjectGraph)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.nodes_.MergeFrom(from._impl_.nodes_);
  _this->_impl_.concrete_functions_.MergeFrom(from._impl_.concrete_functions_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SavedObjectGraph::CopyFrom(const SavedObjectGraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedObjectGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedObjectGraph::IsInitialized() const {
  return true;
}

void SavedObjectGraph::InternalSwap(SavedObjectGraph* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.nodes_.InternalSwap(&other->_impl_.nodes_);
  _impl_.concrete_functions_.InternalSwap(&other->_impl_.concrete_functions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedObjectGraph::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[1]);
}

// ===================================================================

SavedObject_SaveableObjectsEntry_DoNotUse::SavedObject_SaveableObjectsEntry_DoNotUse() {}
SavedObject_SaveableObjectsEntry_DoNotUse::SavedObject_SaveableObjectsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SavedObject_SaveableObjectsEntry_DoNotUse::MergeFrom(const SavedObject_SaveableObjectsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SavedObject_SaveableObjectsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[2]);
}

// ===================================================================

class SavedObject::_Internal {
 public:
  static const ::tensorflow::SavedUserObject& user_object(const SavedObject* msg);
  static const ::tensorflow::SavedAsset& asset(const SavedObject* msg);
  static const ::tensorflow::SavedFunction& function(const SavedObject* msg);
  static const ::tensorflow::SavedVariable& variable(const SavedObject* msg);
  static const ::tensorflow::SavedBareConcreteFunction& bare_concrete_function(const SavedObject* msg);
  static const ::tensorflow::SavedConstant& constant(const SavedObject* msg);
  static const ::tensorflow::SavedResource& resource(const SavedObject* msg);
  static const ::tensorflow::CapturedTensor& captured_tensor(const SavedObject* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Any& serialized_user_proto(const SavedObject* msg);
};

const ::tensorflow::SavedUserObject&
SavedObject::_Internal::user_object(const SavedObject* msg) {
  return *msg->_impl_.kind_.user_object_;
}
const ::tensorflow::SavedAsset&
SavedObject::_Internal::asset(const SavedObject* msg) {
  return *msg->_impl_.kind_.asset_;
}
const ::tensorflow::SavedFunction&
SavedObject::_Internal::function(const SavedObject* msg) {
  return *msg->_impl_.kind_.function_;
}
const ::tensorflow::SavedVariable&
SavedObject::_Internal::variable(const SavedObject* msg) {
  return *msg->_impl_.kind_.variable_;
}
const ::tensorflow::SavedBareConcreteFunction&
SavedObject::_Internal::bare_concrete_function(const SavedObject* msg) {
  return *msg->_impl_.kind_.bare_concrete_function_;
}
const ::tensorflow::SavedConstant&
SavedObject::_Internal::constant(const SavedObject* msg) {
  return *msg->_impl_.kind_.constant_;
}
const ::tensorflow::SavedResource&
SavedObject::_Internal::resource(const SavedObject* msg) {
  return *msg->_impl_.kind_.resource_;
}
const ::tensorflow::CapturedTensor&
SavedObject::_Internal::captured_tensor(const SavedObject* msg) {
  return *msg->_impl_.kind_.captured_tensor_;
}
const ::PROTOBUF_NAMESPACE_ID::Any&
SavedObject::_Internal::serialized_user_proto(const SavedObject* msg) {
  return *msg->_impl_.serialized_user_proto_;
}
void SavedObject::clear_children() {
  _impl_.children_.Clear();
}
void SavedObject::clear_dependencies() {
  _impl_.dependencies_.Clear();
}
void SavedObject::clear_slot_variables() {
  _impl_.slot_variables_.Clear();
}
void SavedObject::set_allocated_user_object(::tensorflow::SavedUserObject* user_object) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (user_object) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(user_object);
    if (message_arena != submessage_arena) {
      user_object = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user_object, submessage_arena);
    }
    set_has_user_object();
    _impl_.kind_.user_object_ = user_object;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.user_object)
}
void SavedObject::set_allocated_asset(::tensorflow::SavedAsset* asset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (asset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(asset);
    if (message_arena != submessage_arena) {
      asset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, asset, submessage_arena);
    }
    set_has_asset();
    _impl_.kind_.asset_ = asset;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.asset)
}
void SavedObject::set_allocated_function(::tensorflow::SavedFunction* function) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (function) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(function);
    if (message_arena != submessage_arena) {
      function = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, function, submessage_arena);
    }
    set_has_function();
    _impl_.kind_.function_ = function;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.function)
}
void SavedObject::set_allocated_variable(::tensorflow::SavedVariable* variable) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (variable) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(variable);
    if (message_arena != submessage_arena) {
      variable = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, variable, submessage_arena);
    }
    set_has_variable();
    _impl_.kind_.variable_ = variable;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.variable)
}
void SavedObject::set_allocated_bare_concrete_function(::tensorflow::SavedBareConcreteFunction* bare_concrete_function) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (bare_concrete_function) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(bare_concrete_function);
    if (message_arena != submessage_arena) {
      bare_concrete_function = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bare_concrete_function, submessage_arena);
    }
    set_has_bare_concrete_function();
    _impl_.kind_.bare_concrete_function_ = bare_concrete_function;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.bare_concrete_function)
}
void SavedObject::set_allocated_constant(::tensorflow::SavedConstant* constant) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (constant) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(constant);
    if (message_arena != submessage_arena) {
      constant = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, constant, submessage_arena);
    }
    set_has_constant();
    _impl_.kind_.constant_ = constant;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.constant)
}
void SavedObject::set_allocated_resource(::tensorflow::SavedResource* resource) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (resource) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(resource);
    if (message_arena != submessage_arena) {
      resource = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, resource, submessage_arena);
    }
    set_has_resource();
    _impl_.kind_.resource_ = resource;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.resource)
}
void SavedObject::set_allocated_captured_tensor(::tensorflow::CapturedTensor* captured_tensor) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_kind();
  if (captured_tensor) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(captured_tensor);
    if (message_arena != submessage_arena) {
      captured_tensor = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, captured_tensor, submessage_arena);
    }
    set_has_captured_tensor();
    _impl_.kind_.captured_tensor_ = captured_tensor;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.captured_tensor)
}
void SavedObject::clear_serialized_user_proto() {
  if (GetArenaForAllocation() == nullptr && _impl_.serialized_user_proto_ != nullptr) {
    delete _impl_.serialized_user_proto_;
  }
  _impl_.serialized_user_proto_ = nullptr;
}
SavedObject::SavedObject(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &SavedObject::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedObject)
}
SavedObject::SavedObject(const SavedObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SavedObject* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.children_){from._impl_.children_}
    , decltype(_impl_.slot_variables_){from._impl_.slot_variables_}
    , /*decltype(_impl_.saveable_objects_)*/{}
    , decltype(_impl_.dependencies_){from._impl_.dependencies_}
    , decltype(_impl_.registered_name_){}
    , decltype(_impl_.registered_saver_){}
    , decltype(_impl_.serialized_user_proto_){nullptr}
    , decltype(_impl_.kind_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.saveable_objects_.MergeFrom(from._impl_.saveable_objects_);
  _impl_.registered_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.registered_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_registered_name().empty()) {
    _this->_impl_.registered_name_.Set(from._internal_registered_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.registered_saver_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.registered_saver_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_registered_saver().empty()) {
    _this->_impl_.registered_saver_.Set(from._internal_registered_saver(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_serialized_user_proto()) {
    _this->_impl_.serialized_user_proto_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.serialized_user_proto_);
  }
  clear_has_kind();
  switch (from.kind_case()) {
    case kUserObject: {
      _this->_internal_mutable_user_object()->::tensorflow::SavedUserObject::MergeFrom(
          from._internal_user_object());
      break;
    }
    case kAsset: {
      _this->_internal_mutable_asset()->::tensorflow::SavedAsset::MergeFrom(
          from._internal_asset());
      break;
    }
    case kFunction: {
      _this->_internal_mutable_function()->::tensorflow::SavedFunction::MergeFrom(
          from._internal_function());
      break;
    }
    case kVariable: {
      _this->_internal_mutable_variable()->::tensorflow::SavedVariable::MergeFrom(
          from._internal_variable());
      break;
    }
    case kBareConcreteFunction: {
      _this->_internal_mutable_bare_concrete_function()->::tensorflow::SavedBareConcreteFunction::MergeFrom(
          from._internal_bare_concrete_function());
      break;
    }
    case kConstant: {
      _this->_internal_mutable_constant()->::tensorflow::SavedConstant::MergeFrom(
          from._internal_constant());
      break;
    }
    case kResource: {
      _this->_internal_mutable_resource()->::tensorflow::SavedResource::MergeFrom(
          from._internal_resource());
      break;
    }
    case kCapturedTensor: {
      _this->_internal_mutable_captured_tensor()->::tensorflow::CapturedTensor::MergeFrom(
          from._internal_captured_tensor());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedObject)
}

inline void SavedObject::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.children_){arena}
    , decltype(_impl_.slot_variables_){arena}
    , /*decltype(_impl_.saveable_objects_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.dependencies_){arena}
    , decltype(_impl_.registered_name_){}
    , decltype(_impl_.registered_saver_){}
    , decltype(_impl_.serialized_user_proto_){nullptr}
    , decltype(_impl_.kind_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.registered_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.registered_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.registered_saver_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.registered_saver_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_kind();
}

SavedObject::~SavedObject() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedObject)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void SavedObject::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.children_.~RepeatedPtrField();
  _impl_.slot_variables_.~RepeatedPtrField();
  _impl_.saveable_objects_.Destruct();
  _impl_.saveable_objects_.~MapField();
  _impl_.dependencies_.~RepeatedPtrField();
  _impl_.registered_name_.Destroy();
  _impl_.registered_saver_.Destroy();
  if (this != internal_default_instance()) delete _impl_.serialized_user_proto_;
  if (has_kind()) {
    clear_kind();
  }
}

void SavedObject::ArenaDtor(void* object) {
  SavedObject* _this = reinterpret_cast< SavedObject* >(object);
  _this->_impl_.saveable_objects_.Destruct();
}
void SavedObject::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SavedObject::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.SavedObject)
  switch (kind_case()) {
    case kUserObject: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.user_object_;
      }
      break;
    }
    case kAsset: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.asset_;
      }
      break;
    }
    case kFunction: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.function_;
      }
      break;
    }
    case kVariable: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.variable_;
      }
      break;
    }
    case kBareConcreteFunction: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.bare_concrete_function_;
      }
      break;
    }
    case kConstant: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.constant_;
      }
      break;
    }
    case kResource: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.resource_;
      }
      break;
    }
    case kCapturedTensor: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.kind_.captured_tensor_;
      }
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = KIND_NOT_SET;
}


void SavedObject::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedObject)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.children_.Clear();
  _impl_.slot_variables_.Clear();
  _impl_.saveable_objects_.Clear();
  _impl_.dependencies_.Clear();
  _impl_.registered_name_.ClearToEmpty();
  _impl_.registered_saver_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.serialized_user_proto_ != nullptr) {
    delete _impl_.serialized_user_proto_;
  }
  _impl_.serialized_user_proto_ = nullptr;
  clear_kind();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SavedObject::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference children = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_children(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference slot_variables = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_slot_variables(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.SavedUserObject user_object = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_user_object(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.SavedAsset asset = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_asset(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.SavedFunction function = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_function(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.SavedVariable variable = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_variable(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.SavedBareConcreteFunction bare_concrete_function = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_bare_concrete_function(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.SavedConstant constant = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_constant(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.SavedResource resource = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_resource(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, .tensorflow.SaveableObject> saveable_objects = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.saveable_objects_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.CapturedTensor captured_tensor = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_captured_tensor(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string registered_name = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          auto str = _internal_mutable_registered_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.SavedObject.registered_name"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Any serialized_user_proto = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_serialized_user_proto(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference dependencies = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_dependencies(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string registered_saver = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          auto str = _internal_mutable_registered_saver();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.SavedObject.registered_saver"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SavedObject::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedObject)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference children = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_children_size()); i < n; i++) {
    const auto& repfield = this->_internal_children(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference slot_variables = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_slot_variables_size()); i < n; i++) {
    const auto& repfield = this->_internal_slot_variables(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .tensorflow.SavedUserObject user_object = 4;
  if (_internal_has_user_object()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::user_object(this),
        _Internal::user_object(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.SavedAsset asset = 5;
  if (_internal_has_asset()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::asset(this),
        _Internal::asset(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.SavedFunction function = 6;
  if (_internal_has_function()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::function(this),
        _Internal::function(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.SavedVariable variable = 7;
  if (_internal_has_variable()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::variable(this),
        _Internal::variable(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.SavedBareConcreteFunction bare_concrete_function = 8;
  if (_internal_has_bare_concrete_function()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::bare_concrete_function(this),
        _Internal::bare_concrete_function(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.SavedConstant constant = 9;
  if (_internal_has_constant()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::constant(this),
        _Internal::constant(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.SavedResource resource = 10;
  if (_internal_has_resource()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::resource(this),
        _Internal::resource(this).GetCachedSize(), target, stream);
  }

  // map<string, .tensorflow.SaveableObject> saveable_objects = 11;
  if (!this->_internal_saveable_objects().empty()) {
    using MapType = ::_pb::Map<std::string, ::tensorflow::SaveableObject>;
    using WireHelper = SavedObject_SaveableObjectsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_saveable_objects();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "tensorflow.SavedObject.SaveableObjectsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(11, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(11, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // .tensorflow.CapturedTensor captured_tensor = 12;
  if (_internal_has_captured_tensor()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::captured_tensor(this),
        _Internal::captured_tensor(this).GetCachedSize(), target, stream);
  }

  // string registered_name = 13;
  if (!this->_internal_registered_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_registered_name().data(), static_cast<int>(this->_internal_registered_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedObject.registered_name");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_registered_name(), target);
  }

  // .google.protobuf.Any serialized_user_proto = 14;
  if (this->_internal_has_serialized_user_proto()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::serialized_user_proto(this),
        _Internal::serialized_user_proto(this).GetCachedSize(), target, stream);
  }

  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference dependencies = 15;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_dependencies_size()); i < n; i++) {
    const auto& repfield = this->_internal_dependencies(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(15, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string registered_saver = 16;
  if (!this->_internal_registered_saver().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_registered_saver().data(), static_cast<int>(this->_internal_registered_saver().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedObject.registered_saver");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_registered_saver(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedObject)
  return target;
}

size_t SavedObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedObject)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference children = 1;
  total_size += 1UL * this->_internal_children_size();
  for (const auto& msg : this->_impl_.children_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference slot_variables = 3;
  total_size += 1UL * this->_internal_slot_variables_size();
  for (const auto& msg : this->_impl_.slot_variables_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<string, .tensorflow.SaveableObject> saveable_objects = 11;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_saveable_objects_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::SaveableObject >::const_iterator
      it = this->_internal_saveable_objects().begin();
      it != this->_internal_saveable_objects().end(); ++it) {
    total_size += SavedObject_SaveableObjectsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference dependencies = 15;
  total_size += 1UL * this->_internal_dependencies_size();
  for (const auto& msg : this->_impl_.dependencies_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string registered_name = 13;
  if (!this->_internal_registered_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_registered_name());
  }

  // string registered_saver = 16;
  if (!this->_internal_registered_saver().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_registered_saver());
  }

  // .google.protobuf.Any serialized_user_proto = 14;
  if (this->_internal_has_serialized_user_proto()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.serialized_user_proto_);
  }

  switch (kind_case()) {
    // .tensorflow.SavedUserObject user_object = 4;
    case kUserObject: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.user_object_);
      break;
    }
    // .tensorflow.SavedAsset asset = 5;
    case kAsset: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.asset_);
      break;
    }
    // .tensorflow.SavedFunction function = 6;
    case kFunction: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.function_);
      break;
    }
    // .tensorflow.SavedVariable variable = 7;
    case kVariable: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.variable_);
      break;
    }
    // .tensorflow.SavedBareConcreteFunction bare_concrete_function = 8;
    case kBareConcreteFunction: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.bare_concrete_function_);
      break;
    }
    // .tensorflow.SavedConstant constant = 9;
    case kConstant: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.constant_);
      break;
    }
    // .tensorflow.SavedResource resource = 10;
    case kResource: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.resource_);
      break;
    }
    // .tensorflow.CapturedTensor captured_tensor = 12;
    case kCapturedTensor: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.kind_.captured_tensor_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SavedObject::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SavedObject::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SavedObject::GetClassData() const { return &_class_data_; }


void SavedObject::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SavedObject*>(&to_msg);
  auto& from = static_cast<const SavedObject&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedObject)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.children_.MergeFrom(from._impl_.children_);
  _this->_impl_.slot_variables_.MergeFrom(from._impl_.slot_variables_);
  _this->_impl_.saveable_objects_.MergeFrom(from._impl_.saveable_objects_);
  _this->_impl_.dependencies_.MergeFrom(from._impl_.dependencies_);
  if (!from._internal_registered_name().empty()) {
    _this->_internal_set_registered_name(from._internal_registered_name());
  }
  if (!from._internal_registered_saver().empty()) {
    _this->_internal_set_registered_saver(from._internal_registered_saver());
  }
  if (from._internal_has_serialized_user_proto()) {
    _this->_internal_mutable_serialized_user_proto()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
        from._internal_serialized_user_proto());
  }
  switch (from.kind_case()) {
    case kUserObject: {
      _this->_internal_mutable_user_object()->::tensorflow::SavedUserObject::MergeFrom(
          from._internal_user_object());
      break;
    }
    case kAsset: {
      _this->_internal_mutable_asset()->::tensorflow::SavedAsset::MergeFrom(
          from._internal_asset());
      break;
    }
    case kFunction: {
      _this->_internal_mutable_function()->::tensorflow::SavedFunction::MergeFrom(
          from._internal_function());
      break;
    }
    case kVariable: {
      _this->_internal_mutable_variable()->::tensorflow::SavedVariable::MergeFrom(
          from._internal_variable());
      break;
    }
    case kBareConcreteFunction: {
      _this->_internal_mutable_bare_concrete_function()->::tensorflow::SavedBareConcreteFunction::MergeFrom(
          from._internal_bare_concrete_function());
      break;
    }
    case kConstant: {
      _this->_internal_mutable_constant()->::tensorflow::SavedConstant::MergeFrom(
          from._internal_constant());
      break;
    }
    case kResource: {
      _this->_internal_mutable_resource()->::tensorflow::SavedResource::MergeFrom(
          from._internal_resource());
      break;
    }
    case kCapturedTensor: {
      _this->_internal_mutable_captured_tensor()->::tensorflow::CapturedTensor::MergeFrom(
          from._internal_captured_tensor());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SavedObject::CopyFrom(const SavedObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedObject::IsInitialized() const {
  return true;
}

void SavedObject::InternalSwap(SavedObject* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.children_.InternalSwap(&other->_impl_.children_);
  _impl_.slot_variables_.InternalSwap(&other->_impl_.slot_variables_);
  _impl_.saveable_objects_.InternalSwap(&other->_impl_.saveable_objects_);
  _impl_.dependencies_.InternalSwap(&other->_impl_.dependencies_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.registered_name_, lhs_arena,
      &other->_impl_.registered_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.registered_saver_, lhs_arena,
      &other->_impl_.registered_saver_, rhs_arena
  );
  swap(_impl_.serialized_user_proto_, other->_impl_.serialized_user_proto_);
  swap(_impl_.kind_, other->_impl_.kind_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedObject::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[3]);
}

// ===================================================================

class SavedUserObject::_Internal {
 public:
  static const ::tensorflow::VersionDef& version(const SavedUserObject* msg);
};

const ::tensorflow::VersionDef&
SavedUserObject::_Internal::version(const SavedUserObject* msg) {
  return *msg->_impl_.version_;
}
void SavedUserObject::clear_version() {
  if (GetArenaForAllocation() == nullptr && _impl_.version_ != nullptr) {
    delete _impl_.version_;
  }
  _impl_.version_ = nullptr;
}
SavedUserObject::SavedUserObject(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedUserObject)
}
SavedUserObject::SavedUserObject(const SavedUserObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SavedUserObject* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.identifier_){}
    , decltype(_impl_.metadata_){}
    , decltype(_impl_.version_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.identifier_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.identifier_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_identifier().empty()) {
    _this->_impl_.identifier_.Set(from._internal_identifier(), 
      _this->GetArenaForAllocation());
  }
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_metadata().empty()) {
    _this->_impl_.metadata_.Set(from._internal_metadata(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_version()) {
    _this->_impl_.version_ = new ::tensorflow::VersionDef(*from._impl_.version_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedUserObject)
}

inline void SavedUserObject::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.identifier_){}
    , decltype(_impl_.metadata_){}
    , decltype(_impl_.version_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.identifier_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.identifier_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SavedUserObject::~SavedUserObject() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedUserObject)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SavedUserObject::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.identifier_.Destroy();
  _impl_.metadata_.Destroy();
  if (this != internal_default_instance()) delete _impl_.version_;
}

void SavedUserObject::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SavedUserObject::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedUserObject)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.identifier_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.version_ != nullptr) {
    delete _impl_.version_;
  }
  _impl_.version_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SavedUserObject::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_identifier();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.SavedUserObject.identifier"));
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.VersionDef version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_version(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string metadata = 3 [deprecated = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_metadata();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.SavedUserObject.metadata"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SavedUserObject::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedUserObject)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string identifier = 1;
  if (!this->_internal_identifier().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_identifier().data(), static_cast<int>(this->_internal_identifier().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedUserObject.identifier");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_identifier(), target);
  }

  // .tensorflow.VersionDef version = 2;
  if (this->_internal_has_version()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::version(this),
        _Internal::version(this).GetCachedSize(), target, stream);
  }

  // string metadata = 3 [deprecated = true];
  if (!this->_internal_metadata().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_metadata().data(), static_cast<int>(this->_internal_metadata().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedUserObject.metadata");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_metadata(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedUserObject)
  return target;
}

size_t SavedUserObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedUserObject)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identifier = 1;
  if (!this->_internal_identifier().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_identifier());
  }

  // string metadata = 3 [deprecated = true];
  if (!this->_internal_metadata().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_metadata());
  }

  // .tensorflow.VersionDef version = 2;
  if (this->_internal_has_version()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.version_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SavedUserObject::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SavedUserObject::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SavedUserObject::GetClassData() const { return &_class_data_; }


void SavedUserObject::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SavedUserObject*>(&to_msg);
  auto& from = static_cast<const SavedUserObject&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedUserObject)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_identifier().empty()) {
    _this->_internal_set_identifier(from._internal_identifier());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  if (from._internal_has_version()) {
    _this->_internal_mutable_version()->::tensorflow::VersionDef::MergeFrom(
        from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SavedUserObject::CopyFrom(const SavedUserObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedUserObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedUserObject::IsInitialized() const {
  return true;
}

void SavedUserObject::InternalSwap(SavedUserObject* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.identifier_, lhs_arena,
      &other->_impl_.identifier_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.metadata_, lhs_arena,
      &other->_impl_.metadata_, rhs_arena
  );
  swap(_impl_.version_, other->_impl_.version_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedUserObject::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[4]);
}

// ===================================================================

class SavedAsset::_Internal {
 public:
};

SavedAsset::SavedAsset(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedAsset)
}
SavedAsset::SavedAsset(const SavedAsset& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SavedAsset* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.asset_file_def_index_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.asset_file_def_index_ = from._impl_.asset_file_def_index_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedAsset)
}

inline void SavedAsset::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.asset_file_def_index_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SavedAsset::~SavedAsset() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedAsset)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SavedAsset::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SavedAsset::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SavedAsset::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedAsset)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.asset_file_def_index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SavedAsset::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 asset_file_def_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.asset_file_def_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SavedAsset::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedAsset)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 asset_file_def_index = 1;
  if (this->_internal_asset_file_def_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_asset_file_def_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedAsset)
  return target;
}

size_t SavedAsset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedAsset)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 asset_file_def_index = 1;
  if (this->_internal_asset_file_def_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_asset_file_def_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SavedAsset::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SavedAsset::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SavedAsset::GetClassData() const { return &_class_data_; }


void SavedAsset::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SavedAsset*>(&to_msg);
  auto& from = static_cast<const SavedAsset&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedAsset)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_asset_file_def_index() != 0) {
    _this->_internal_set_asset_file_def_index(from._internal_asset_file_def_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SavedAsset::CopyFrom(const SavedAsset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedAsset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedAsset::IsInitialized() const {
  return true;
}

void SavedAsset::InternalSwap(SavedAsset* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.asset_file_def_index_, other->_impl_.asset_file_def_index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedAsset::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[5]);
}

// ===================================================================

class SavedFunction::_Internal {
 public:
  static const ::tensorflow::FunctionSpec& function_spec(const SavedFunction* msg);
};

const ::tensorflow::FunctionSpec&
SavedFunction::_Internal::function_spec(const SavedFunction* msg) {
  return *msg->_impl_.function_spec_;
}
SavedFunction::SavedFunction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedFunction)
}
SavedFunction::SavedFunction(const SavedFunction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SavedFunction* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.concrete_functions_){from._impl_.concrete_functions_}
    , decltype(_impl_.function_spec_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_function_spec()) {
    _this->_impl_.function_spec_ = new ::tensorflow::FunctionSpec(*from._impl_.function_spec_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedFunction)
}

inline void SavedFunction::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.concrete_functions_){arena}
    , decltype(_impl_.function_spec_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SavedFunction::~SavedFunction() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedFunction)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SavedFunction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.concrete_functions_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.function_spec_;
}

void SavedFunction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SavedFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedFunction)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.concrete_functions_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.function_spec_ != nullptr) {
    delete _impl_.function_spec_;
  }
  _impl_.function_spec_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SavedFunction::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string concrete_functions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_concrete_functions();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "tensorflow.SavedFunction.concrete_functions"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.FunctionSpec function_spec = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_function_spec(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SavedFunction::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedFunction)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string concrete_functions = 1;
  for (int i = 0, n = this->_internal_concrete_functions_size(); i < n; i++) {
    const auto& s = this->_internal_concrete_functions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedFunction.concrete_functions");
    target = stream->WriteString(1, s, target);
  }

  // .tensorflow.FunctionSpec function_spec = 2;
  if (this->_internal_has_function_spec()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::function_spec(this),
        _Internal::function_spec(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedFunction)
  return target;
}

size_t SavedFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedFunction)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string concrete_functions = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.concrete_functions_.size());
  for (int i = 0, n = _impl_.concrete_functions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.concrete_functions_.Get(i));
  }

  // .tensorflow.FunctionSpec function_spec = 2;
  if (this->_internal_has_function_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.function_spec_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SavedFunction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SavedFunction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SavedFunction::GetClassData() const { return &_class_data_; }


void SavedFunction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SavedFunction*>(&to_msg);
  auto& from = static_cast<const SavedFunction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedFunction)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.concrete_functions_.MergeFrom(from._impl_.concrete_functions_);
  if (from._internal_has_function_spec()) {
    _this->_internal_mutable_function_spec()->::tensorflow::FunctionSpec::MergeFrom(
        from._internal_function_spec());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SavedFunction::CopyFrom(const SavedFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedFunction::IsInitialized() const {
  return true;
}

void SavedFunction::InternalSwap(SavedFunction* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.concrete_functions_.InternalSwap(&other->_impl_.concrete_functions_);
  swap(_impl_.function_spec_, other->_impl_.function_spec_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedFunction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[6]);
}

// ===================================================================

class CapturedTensor::_Internal {
 public:
};

CapturedTensor::CapturedTensor(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CapturedTensor)
}
CapturedTensor::CapturedTensor(const CapturedTensor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CapturedTensor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.concrete_function_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.concrete_function_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.concrete_function_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_concrete_function().empty()) {
    _this->_impl_.concrete_function_.Set(from._internal_concrete_function(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.CapturedTensor)
}

inline void CapturedTensor::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.concrete_function_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.concrete_function_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.concrete_function_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CapturedTensor::~CapturedTensor() {
  // @@protoc_insertion_point(destructor:tensorflow.CapturedTensor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CapturedTensor::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.concrete_function_.Destroy();
}

void CapturedTensor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CapturedTensor::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CapturedTensor)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.concrete_function_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CapturedTensor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.CapturedTensor.name"));
        } else
          goto handle_unusual;
        continue;
      // string concrete_function = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_concrete_function();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.CapturedTensor.concrete_function"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CapturedTensor::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CapturedTensor)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CapturedTensor.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string concrete_function = 2;
  if (!this->_internal_concrete_function().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_concrete_function().data(), static_cast<int>(this->_internal_concrete_function().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CapturedTensor.concrete_function");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_concrete_function(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CapturedTensor)
  return target;
}

size_t CapturedTensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CapturedTensor)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string concrete_function = 2;
  if (!this->_internal_concrete_function().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_concrete_function());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CapturedTensor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CapturedTensor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CapturedTensor::GetClassData() const { return &_class_data_; }


void CapturedTensor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CapturedTensor*>(&to_msg);
  auto& from = static_cast<const CapturedTensor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CapturedTensor)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_concrete_function().empty()) {
    _this->_internal_set_concrete_function(from._internal_concrete_function());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CapturedTensor::CopyFrom(const CapturedTensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CapturedTensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CapturedTensor::IsInitialized() const {
  return true;
}

void CapturedTensor::InternalSwap(CapturedTensor* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.concrete_function_, lhs_arena,
      &other->_impl_.concrete_function_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CapturedTensor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[7]);
}

// ===================================================================

class SavedConcreteFunction::_Internal {
 public:
  static const ::tensorflow::StructuredValue& canonicalized_input_signature(const SavedConcreteFunction* msg);
  static const ::tensorflow::StructuredValue& output_signature(const SavedConcreteFunction* msg);
};

const ::tensorflow::StructuredValue&
SavedConcreteFunction::_Internal::canonicalized_input_signature(const SavedConcreteFunction* msg) {
  return *msg->_impl_.canonicalized_input_signature_;
}
const ::tensorflow::StructuredValue&
SavedConcreteFunction::_Internal::output_signature(const SavedConcreteFunction* msg) {
  return *msg->_impl_.output_signature_;
}
void SavedConcreteFunction::clear_canonicalized_input_signature() {
  if (GetArenaForAllocation() == nullptr && _impl_.canonicalized_input_signature_ != nullptr) {
    delete _impl_.canonicalized_input_signature_;
  }
  _impl_.canonicalized_input_signature_ = nullptr;
}
void SavedConcreteFunction::clear_output_signature() {
  if (GetArenaForAllocation() == nullptr && _impl_.output_signature_ != nullptr) {
    delete _impl_.output_signature_;
  }
  _impl_.output_signature_ = nullptr;
}
SavedConcreteFunction::SavedConcreteFunction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedConcreteFunction)
}
SavedConcreteFunction::SavedConcreteFunction(const SavedConcreteFunction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SavedConcreteFunction* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bound_inputs_){from._impl_.bound_inputs_}
    , /*decltype(_impl_._bound_inputs_cached_byte_size_)*/{0}
    , decltype(_impl_.canonicalized_input_signature_){nullptr}
    , decltype(_impl_.output_signature_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_canonicalized_input_signature()) {
    _this->_impl_.canonicalized_input_signature_ = new ::tensorflow::StructuredValue(*from._impl_.canonicalized_input_signature_);
  }
  if (from._internal_has_output_signature()) {
    _this->_impl_.output_signature_ = new ::tensorflow::StructuredValue(*from._impl_.output_signature_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedConcreteFunction)
}

inline void SavedConcreteFunction::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bound_inputs_){arena}
    , /*decltype(_impl_._bound_inputs_cached_byte_size_)*/{0}
    , decltype(_impl_.canonicalized_input_signature_){nullptr}
    , decltype(_impl_.output_signature_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SavedConcreteFunction::~SavedConcreteFunction() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedConcreteFunction)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SavedConcreteFunction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bound_inputs_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.canonicalized_input_signature_;
  if (this != internal_default_instance()) delete _impl_.output_signature_;
}

void SavedConcreteFunction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SavedConcreteFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedConcreteFunction)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bound_inputs_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.canonicalized_input_signature_ != nullptr) {
    delete _impl_.canonicalized_input_signature_;
  }
  _impl_.canonicalized_input_signature_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.output_signature_ != nullptr) {
    delete _impl_.output_signature_;
  }
  _impl_.output_signature_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SavedConcreteFunction::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 bound_inputs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_bound_inputs(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_bound_inputs(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.StructuredValue canonicalized_input_signature = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_canonicalized_input_signature(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.StructuredValue output_signature = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_output_signature(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SavedConcreteFunction::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedConcreteFunction)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 bound_inputs = 2;
  {
    int byte_size = _impl_._bound_inputs_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_bound_inputs(), byte_size, target);
    }
  }

  // .tensorflow.StructuredValue canonicalized_input_signature = 3;
  if (this->_internal_has_canonicalized_input_signature()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::canonicalized_input_signature(this),
        _Internal::canonicalized_input_signature(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.StructuredValue output_signature = 4;
  if (this->_internal_has_output_signature()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::output_signature(this),
        _Internal::output_signature(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedConcreteFunction)
  return target;
}

size_t SavedConcreteFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedConcreteFunction)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 bound_inputs = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.bound_inputs_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._bound_inputs_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .tensorflow.StructuredValue canonicalized_input_signature = 3;
  if (this->_internal_has_canonicalized_input_signature()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.canonicalized_input_signature_);
  }

  // .tensorflow.StructuredValue output_signature = 4;
  if (this->_internal_has_output_signature()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.output_signature_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SavedConcreteFunction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SavedConcreteFunction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SavedConcreteFunction::GetClassData() const { return &_class_data_; }


void SavedConcreteFunction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SavedConcreteFunction*>(&to_msg);
  auto& from = static_cast<const SavedConcreteFunction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedConcreteFunction)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.bound_inputs_.MergeFrom(from._impl_.bound_inputs_);
  if (from._internal_has_canonicalized_input_signature()) {
    _this->_internal_mutable_canonicalized_input_signature()->::tensorflow::StructuredValue::MergeFrom(
        from._internal_canonicalized_input_signature());
  }
  if (from._internal_has_output_signature()) {
    _this->_internal_mutable_output_signature()->::tensorflow::StructuredValue::MergeFrom(
        from._internal_output_signature());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SavedConcreteFunction::CopyFrom(const SavedConcreteFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedConcreteFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedConcreteFunction::IsInitialized() const {
  return true;
}

void SavedConcreteFunction::InternalSwap(SavedConcreteFunction* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bound_inputs_.InternalSwap(&other->_impl_.bound_inputs_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SavedConcreteFunction, _impl_.output_signature_)
      + sizeof(SavedConcreteFunction::_impl_.output_signature_)
      - PROTOBUF_FIELD_OFFSET(SavedConcreteFunction, _impl_.canonicalized_input_signature_)>(
          reinterpret_cast<char*>(&_impl_.canonicalized_input_signature_),
          reinterpret_cast<char*>(&other->_impl_.canonicalized_input_signature_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedConcreteFunction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[8]);
}

// ===================================================================

class SavedBareConcreteFunction::_Internal {
 public:
  static const ::tensorflow::FunctionSpec& function_spec(const SavedBareConcreteFunction* msg);
};

const ::tensorflow::FunctionSpec&
SavedBareConcreteFunction::_Internal::function_spec(const SavedBareConcreteFunction* msg) {
  return *msg->_impl_.function_spec_;
}
SavedBareConcreteFunction::SavedBareConcreteFunction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedBareConcreteFunction)
}
SavedBareConcreteFunction::SavedBareConcreteFunction(const SavedBareConcreteFunction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SavedBareConcreteFunction* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.argument_keywords_){from._impl_.argument_keywords_}
    , decltype(_impl_.concrete_function_name_){}
    , decltype(_impl_.function_spec_){nullptr}
    , decltype(_impl_.allowed_positional_arguments_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.concrete_function_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.concrete_function_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_concrete_function_name().empty()) {
    _this->_impl_.concrete_function_name_.Set(from._internal_concrete_function_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_function_spec()) {
    _this->_impl_.function_spec_ = new ::tensorflow::FunctionSpec(*from._impl_.function_spec_);
  }
  _this->_impl_.allowed_positional_arguments_ = from._impl_.allowed_positional_arguments_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedBareConcreteFunction)
}

inline void SavedBareConcreteFunction::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.argument_keywords_){arena}
    , decltype(_impl_.concrete_function_name_){}
    , decltype(_impl_.function_spec_){nullptr}
    , decltype(_impl_.allowed_positional_arguments_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.concrete_function_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.concrete_function_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SavedBareConcreteFunction::~SavedBareConcreteFunction() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedBareConcreteFunction)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SavedBareConcreteFunction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.argument_keywords_.~RepeatedPtrField();
  _impl_.concrete_function_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.function_spec_;
}

void SavedBareConcreteFunction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SavedBareConcreteFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedBareConcreteFunction)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.argument_keywords_.Clear();
  _impl_.concrete_function_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.function_spec_ != nullptr) {
    delete _impl_.function_spec_;
  }
  _impl_.function_spec_ = nullptr;
  _impl_.allowed_positional_arguments_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SavedBareConcreteFunction::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string concrete_function_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_concrete_function_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.SavedBareConcreteFunction.concrete_function_name"));
        } else
          goto handle_unusual;
        continue;
      // repeated string argument_keywords = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_argument_keywords();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "tensorflow.SavedBareConcreteFunction.argument_keywords"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int64 allowed_positional_arguments = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.allowed_positional_arguments_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.FunctionSpec function_spec = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_function_spec(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SavedBareConcreteFunction::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedBareConcreteFunction)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string concrete_function_name = 1;
  if (!this->_internal_concrete_function_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_concrete_function_name().data(), static_cast<int>(this->_internal_concrete_function_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedBareConcreteFunction.concrete_function_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_concrete_function_name(), target);
  }

  // repeated string argument_keywords = 2;
  for (int i = 0, n = this->_internal_argument_keywords_size(); i < n; i++) {
    const auto& s = this->_internal_argument_keywords(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedBareConcreteFunction.argument_keywords");
    target = stream->WriteString(2, s, target);
  }

  // int64 allowed_positional_arguments = 3;
  if (this->_internal_allowed_positional_arguments() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_allowed_positional_arguments(), target);
  }

  // .tensorflow.FunctionSpec function_spec = 4;
  if (this->_internal_has_function_spec()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::function_spec(this),
        _Internal::function_spec(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedBareConcreteFunction)
  return target;
}

size_t SavedBareConcreteFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedBareConcreteFunction)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string argument_keywords = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.argument_keywords_.size());
  for (int i = 0, n = _impl_.argument_keywords_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.argument_keywords_.Get(i));
  }

  // string concrete_function_name = 1;
  if (!this->_internal_concrete_function_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_concrete_function_name());
  }

  // .tensorflow.FunctionSpec function_spec = 4;
  if (this->_internal_has_function_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.function_spec_);
  }

  // int64 allowed_positional_arguments = 3;
  if (this->_internal_allowed_positional_arguments() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_allowed_positional_arguments());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SavedBareConcreteFunction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SavedBareConcreteFunction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SavedBareConcreteFunction::GetClassData() const { return &_class_data_; }


void SavedBareConcreteFunction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SavedBareConcreteFunction*>(&to_msg);
  auto& from = static_cast<const SavedBareConcreteFunction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedBareConcreteFunction)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.argument_keywords_.MergeFrom(from._impl_.argument_keywords_);
  if (!from._internal_concrete_function_name().empty()) {
    _this->_internal_set_concrete_function_name(from._internal_concrete_function_name());
  }
  if (from._internal_has_function_spec()) {
    _this->_internal_mutable_function_spec()->::tensorflow::FunctionSpec::MergeFrom(
        from._internal_function_spec());
  }
  if (from._internal_allowed_positional_arguments() != 0) {
    _this->_internal_set_allowed_positional_arguments(from._internal_allowed_positional_arguments());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SavedBareConcreteFunction::CopyFrom(const SavedBareConcreteFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedBareConcreteFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedBareConcreteFunction::IsInitialized() const {
  return true;
}

void SavedBareConcreteFunction::InternalSwap(SavedBareConcreteFunction* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.argument_keywords_.InternalSwap(&other->_impl_.argument_keywords_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.concrete_function_name_, lhs_arena,
      &other->_impl_.concrete_function_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SavedBareConcreteFunction, _impl_.allowed_positional_arguments_)
      + sizeof(SavedBareConcreteFunction::_impl_.allowed_positional_arguments_)
      - PROTOBUF_FIELD_OFFSET(SavedBareConcreteFunction, _impl_.function_spec_)>(
          reinterpret_cast<char*>(&_impl_.function_spec_),
          reinterpret_cast<char*>(&other->_impl_.function_spec_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedBareConcreteFunction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[9]);
}

// ===================================================================

class SavedConstant::_Internal {
 public:
};

SavedConstant::SavedConstant(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedConstant)
}
SavedConstant::SavedConstant(const SavedConstant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SavedConstant* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.operation_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.operation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.operation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_operation().empty()) {
    _this->_impl_.operation_.Set(from._internal_operation(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedConstant)
}

inline void SavedConstant::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.operation_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.operation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.operation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SavedConstant::~SavedConstant() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedConstant)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SavedConstant::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.operation_.Destroy();
}

void SavedConstant::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SavedConstant::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedConstant)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.operation_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SavedConstant::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string operation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_operation();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.SavedConstant.operation"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SavedConstant::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedConstant)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string operation = 1;
  if (!this->_internal_operation().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_operation().data(), static_cast<int>(this->_internal_operation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedConstant.operation");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_operation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedConstant)
  return target;
}

size_t SavedConstant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedConstant)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string operation = 1;
  if (!this->_internal_operation().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_operation());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SavedConstant::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SavedConstant::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SavedConstant::GetClassData() const { return &_class_data_; }


void SavedConstant::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SavedConstant*>(&to_msg);
  auto& from = static_cast<const SavedConstant&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedConstant)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_operation().empty()) {
    _this->_internal_set_operation(from._internal_operation());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SavedConstant::CopyFrom(const SavedConstant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedConstant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedConstant::IsInitialized() const {
  return true;
}

void SavedConstant::InternalSwap(SavedConstant* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.operation_, lhs_arena,
      &other->_impl_.operation_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedConstant::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[10]);
}

// ===================================================================

class SavedVariable::_Internal {
 public:
  static const ::tensorflow::TensorShapeProto& shape(const SavedVariable* msg);
};

const ::tensorflow::TensorShapeProto&
SavedVariable::_Internal::shape(const SavedVariable* msg) {
  return *msg->_impl_.shape_;
}
void SavedVariable::clear_shape() {
  if (GetArenaForAllocation() == nullptr && _impl_.shape_ != nullptr) {
    delete _impl_.shape_;
  }
  _impl_.shape_ = nullptr;
}
SavedVariable::SavedVariable(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedVariable)
}
SavedVariable::SavedVariable(const SavedVariable& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SavedVariable* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.experimental_distributed_variable_components_){from._impl_.experimental_distributed_variable_components_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.device_){}
    , decltype(_impl_.shape_){nullptr}
    , decltype(_impl_.dtype_){}
    , decltype(_impl_.trainable_){}
    , decltype(_impl_.synchronization_){}
    , decltype(_impl_.aggregation_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.device_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.device_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_device().empty()) {
    _this->_impl_.device_.Set(from._internal_device(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_shape()) {
    _this->_impl_.shape_ = new ::tensorflow::TensorShapeProto(*from._impl_.shape_);
  }
  ::memcpy(&_impl_.dtype_, &from._impl_.dtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.aggregation_) -
    reinterpret_cast<char*>(&_impl_.dtype_)) + sizeof(_impl_.aggregation_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedVariable)
}

inline void SavedVariable::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.experimental_distributed_variable_components_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.device_){}
    , decltype(_impl_.shape_){nullptr}
    , decltype(_impl_.dtype_){0}
    , decltype(_impl_.trainable_){false}
    , decltype(_impl_.synchronization_){0}
    , decltype(_impl_.aggregation_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.device_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.device_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SavedVariable::~SavedVariable() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedVariable)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SavedVariable::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.experimental_distributed_variable_components_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.device_.Destroy();
  if (this != internal_default_instance()) delete _impl_.shape_;
}

void SavedVariable::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SavedVariable::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedVariable)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.experimental_distributed_variable_components_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.device_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.shape_ != nullptr) {
    delete _impl_.shape_;
  }
  _impl_.shape_ = nullptr;
  ::memset(&_impl_.dtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.aggregation_) -
      reinterpret_cast<char*>(&_impl_.dtype_)) + sizeof(_impl_.aggregation_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SavedVariable::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tensorflow.DataType dtype = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_dtype(static_cast<::tensorflow::DataType>(val));
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.TensorShapeProto shape = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_shape(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool trainable = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.trainable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.VariableSynchronization synchronization = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_synchronization(static_cast<::tensorflow::VariableSynchronization>(val));
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.VariableAggregation aggregation = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_aggregation(static_cast<::tensorflow::VariableAggregation>(val));
        } else
          goto handle_unusual;
        continue;
      // string name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.SavedVariable.name"));
        } else
          goto handle_unusual;
        continue;
      // string device = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_device();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.SavedVariable.device"));
        } else
          goto handle_unusual;
        continue;
      // repeated .tensorflow.SavedVariable experimental_distributed_variable_components = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_experimental_distributed_variable_components(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SavedVariable::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedVariable)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.DataType dtype = 1;
  if (this->_internal_dtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_dtype(), target);
  }

  // .tensorflow.TensorShapeProto shape = 2;
  if (this->_internal_has_shape()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::shape(this),
        _Internal::shape(this).GetCachedSize(), target, stream);
  }

  // bool trainable = 3;
  if (this->_internal_trainable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_trainable(), target);
  }

  // .tensorflow.VariableSynchronization synchronization = 4;
  if (this->_internal_synchronization() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_synchronization(), target);
  }

  // .tensorflow.VariableAggregation aggregation = 5;
  if (this->_internal_aggregation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      5, this->_internal_aggregation(), target);
  }

  // string name = 6;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedVariable.name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_name(), target);
  }

  // string device = 7;
  if (!this->_internal_device().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_device().data(), static_cast<int>(this->_internal_device().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedVariable.device");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_device(), target);
  }

  // repeated .tensorflow.SavedVariable experimental_distributed_variable_components = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_experimental_distributed_variable_components_size()); i < n; i++) {
    const auto& repfield = this->_internal_experimental_distributed_variable_components(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedVariable)
  return target;
}

size_t SavedVariable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedVariable)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.SavedVariable experimental_distributed_variable_components = 8;
  total_size += 1UL * this->_internal_experimental_distributed_variable_components_size();
  for (const auto& msg : this->_impl_.experimental_distributed_variable_components_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 6;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string device = 7;
  if (!this->_internal_device().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_device());
  }

  // .tensorflow.TensorShapeProto shape = 2;
  if (this->_internal_has_shape()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.shape_);
  }

  // .tensorflow.DataType dtype = 1;
  if (this->_internal_dtype() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_dtype());
  }

  // bool trainable = 3;
  if (this->_internal_trainable() != 0) {
    total_size += 1 + 1;
  }

  // .tensorflow.VariableSynchronization synchronization = 4;
  if (this->_internal_synchronization() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_synchronization());
  }

  // .tensorflow.VariableAggregation aggregation = 5;
  if (this->_internal_aggregation() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_aggregation());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SavedVariable::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SavedVariable::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SavedVariable::GetClassData() const { return &_class_data_; }


void SavedVariable::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SavedVariable*>(&to_msg);
  auto& from = static_cast<const SavedVariable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedVariable)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.experimental_distributed_variable_components_.MergeFrom(from._impl_.experimental_distributed_variable_components_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_device().empty()) {
    _this->_internal_set_device(from._internal_device());
  }
  if (from._internal_has_shape()) {
    _this->_internal_mutable_shape()->::tensorflow::TensorShapeProto::MergeFrom(
        from._internal_shape());
  }
  if (from._internal_dtype() != 0) {
    _this->_internal_set_dtype(from._internal_dtype());
  }
  if (from._internal_trainable() != 0) {
    _this->_internal_set_trainable(from._internal_trainable());
  }
  if (from._internal_synchronization() != 0) {
    _this->_internal_set_synchronization(from._internal_synchronization());
  }
  if (from._internal_aggregation() != 0) {
    _this->_internal_set_aggregation(from._internal_aggregation());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SavedVariable::CopyFrom(const SavedVariable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedVariable::IsInitialized() const {
  return true;
}

void SavedVariable::InternalSwap(SavedVariable* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.experimental_distributed_variable_components_.InternalSwap(&other->_impl_.experimental_distributed_variable_components_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.device_, lhs_arena,
      &other->_impl_.device_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SavedVariable, _impl_.aggregation_)
      + sizeof(SavedVariable::_impl_.aggregation_)
      - PROTOBUF_FIELD_OFFSET(SavedVariable, _impl_.shape_)>(
          reinterpret_cast<char*>(&_impl_.shape_),
          reinterpret_cast<char*>(&other->_impl_.shape_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedVariable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[11]);
}

// ===================================================================

class FunctionSpec::_Internal {
 public:
  static const ::tensorflow::StructuredValue& fullargspec(const FunctionSpec* msg);
  static const ::tensorflow::StructuredValue& input_signature(const FunctionSpec* msg);
};

const ::tensorflow::StructuredValue&
FunctionSpec::_Internal::fullargspec(const FunctionSpec* msg) {
  return *msg->_impl_.fullargspec_;
}
const ::tensorflow::StructuredValue&
FunctionSpec::_Internal::input_signature(const FunctionSpec* msg) {
  return *msg->_impl_.input_signature_;
}
void FunctionSpec::clear_fullargspec() {
  if (GetArenaForAllocation() == nullptr && _impl_.fullargspec_ != nullptr) {
    delete _impl_.fullargspec_;
  }
  _impl_.fullargspec_ = nullptr;
}
void FunctionSpec::clear_input_signature() {
  if (GetArenaForAllocation() == nullptr && _impl_.input_signature_ != nullptr) {
    delete _impl_.input_signature_;
  }
  _impl_.input_signature_ = nullptr;
}
FunctionSpec::FunctionSpec(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.FunctionSpec)
}
FunctionSpec::FunctionSpec(const FunctionSpec& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FunctionSpec* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.fullargspec_){nullptr}
    , decltype(_impl_.input_signature_){nullptr}
    , decltype(_impl_.is_method_){}
    , decltype(_impl_.jit_compile_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_fullargspec()) {
    _this->_impl_.fullargspec_ = new ::tensorflow::StructuredValue(*from._impl_.fullargspec_);
  }
  if (from._internal_has_input_signature()) {
    _this->_impl_.input_signature_ = new ::tensorflow::StructuredValue(*from._impl_.input_signature_);
  }
  ::memcpy(&_impl_.is_method_, &from._impl_.is_method_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.jit_compile_) -
    reinterpret_cast<char*>(&_impl_.is_method_)) + sizeof(_impl_.jit_compile_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.FunctionSpec)
}

inline void FunctionSpec::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.fullargspec_){nullptr}
    , decltype(_impl_.input_signature_){nullptr}
    , decltype(_impl_.is_method_){false}
    , decltype(_impl_.jit_compile_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FunctionSpec::~FunctionSpec() {
  // @@protoc_insertion_point(destructor:tensorflow.FunctionSpec)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FunctionSpec::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.fullargspec_;
  if (this != internal_default_instance()) delete _impl_.input_signature_;
}

void FunctionSpec::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FunctionSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.FunctionSpec)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.fullargspec_ != nullptr) {
    delete _impl_.fullargspec_;
  }
  _impl_.fullargspec_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.input_signature_ != nullptr) {
    delete _impl_.input_signature_;
  }
  _impl_.input_signature_ = nullptr;
  ::memset(&_impl_.is_method_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.jit_compile_) -
      reinterpret_cast<char*>(&_impl_.is_method_)) + sizeof(_impl_.jit_compile_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FunctionSpec::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tensorflow.StructuredValue fullargspec = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_fullargspec(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_method = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.is_method_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.StructuredValue input_signature = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_input_signature(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.FunctionSpec.JitCompile jit_compile = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_jit_compile(static_cast<::tensorflow::FunctionSpec_JitCompile>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FunctionSpec::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.FunctionSpec)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.StructuredValue fullargspec = 1;
  if (this->_internal_has_fullargspec()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::fullargspec(this),
        _Internal::fullargspec(this).GetCachedSize(), target, stream);
  }

  // bool is_method = 2;
  if (this->_internal_is_method() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_is_method(), target);
  }

  // .tensorflow.StructuredValue input_signature = 5;
  if (this->_internal_has_input_signature()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::input_signature(this),
        _Internal::input_signature(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.FunctionSpec.JitCompile jit_compile = 6;
  if (this->_internal_jit_compile() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      6, this->_internal_jit_compile(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.FunctionSpec)
  return target;
}

size_t FunctionSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.FunctionSpec)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .tensorflow.StructuredValue fullargspec = 1;
  if (this->_internal_has_fullargspec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.fullargspec_);
  }

  // .tensorflow.StructuredValue input_signature = 5;
  if (this->_internal_has_input_signature()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.input_signature_);
  }

  // bool is_method = 2;
  if (this->_internal_is_method() != 0) {
    total_size += 1 + 1;
  }

  // .tensorflow.FunctionSpec.JitCompile jit_compile = 6;
  if (this->_internal_jit_compile() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_jit_compile());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FunctionSpec::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FunctionSpec::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FunctionSpec::GetClassData() const { return &_class_data_; }


void FunctionSpec::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FunctionSpec*>(&to_msg);
  auto& from = static_cast<const FunctionSpec&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.FunctionSpec)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_fullargspec()) {
    _this->_internal_mutable_fullargspec()->::tensorflow::StructuredValue::MergeFrom(
        from._internal_fullargspec());
  }
  if (from._internal_has_input_signature()) {
    _this->_internal_mutable_input_signature()->::tensorflow::StructuredValue::MergeFrom(
        from._internal_input_signature());
  }
  if (from._internal_is_method() != 0) {
    _this->_internal_set_is_method(from._internal_is_method());
  }
  if (from._internal_jit_compile() != 0) {
    _this->_internal_set_jit_compile(from._internal_jit_compile());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FunctionSpec::CopyFrom(const FunctionSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.FunctionSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionSpec::IsInitialized() const {
  return true;
}

void FunctionSpec::InternalSwap(FunctionSpec* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FunctionSpec, _impl_.jit_compile_)
      + sizeof(FunctionSpec::_impl_.jit_compile_)
      - PROTOBUF_FIELD_OFFSET(FunctionSpec, _impl_.fullargspec_)>(
          reinterpret_cast<char*>(&_impl_.fullargspec_),
          reinterpret_cast<char*>(&other->_impl_.fullargspec_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FunctionSpec::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[12]);
}

// ===================================================================

class SavedResource::_Internal {
 public:
};

SavedResource::SavedResource(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedResource)
}
SavedResource::SavedResource(const SavedResource& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SavedResource* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.device_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.device_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.device_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_device().empty()) {
    _this->_impl_.device_.Set(from._internal_device(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedResource)
}

inline void SavedResource::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.device_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.device_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.device_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SavedResource::~SavedResource() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedResource)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SavedResource::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.device_.Destroy();
}

void SavedResource::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SavedResource::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedResource)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SavedResource::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string device = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_device();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.SavedResource.device"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SavedResource::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedResource)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string device = 1;
  if (!this->_internal_device().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_device().data(), static_cast<int>(this->_internal_device().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedResource.device");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_device(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedResource)
  return target;
}

size_t SavedResource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedResource)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string device = 1;
  if (!this->_internal_device().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_device());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SavedResource::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SavedResource::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SavedResource::GetClassData() const { return &_class_data_; }


void SavedResource::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SavedResource*>(&to_msg);
  auto& from = static_cast<const SavedResource&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedResource)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_device().empty()) {
    _this->_internal_set_device(from._internal_device());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SavedResource::CopyFrom(const SavedResource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedResource::IsInitialized() const {
  return true;
}

void SavedResource::InternalSwap(SavedResource* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.device_, lhs_arena,
      &other->_impl_.device_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedResource::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[13]);
}

// ===================================================================

class SaveableObject::_Internal {
 public:
};

SaveableObject::SaveableObject(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SaveableObject)
}
SaveableObject::SaveableObject(const SaveableObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SaveableObject* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.save_function_){}
    , decltype(_impl_.restore_function_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.save_function_, &from._impl_.save_function_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.restore_function_) -
    reinterpret_cast<char*>(&_impl_.save_function_)) + sizeof(_impl_.restore_function_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.SaveableObject)
}

inline void SaveableObject::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.save_function_){0}
    , decltype(_impl_.restore_function_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SaveableObject::~SaveableObject() {
  // @@protoc_insertion_point(destructor:tensorflow.SaveableObject)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SaveableObject::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SaveableObject::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SaveableObject::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SaveableObject)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.save_function_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.restore_function_) -
      reinterpret_cast<char*>(&_impl_.save_function_)) + sizeof(_impl_.restore_function_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SaveableObject::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 save_function = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.save_function_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 restore_function = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.restore_function_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SaveableObject::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SaveableObject)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 save_function = 2;
  if (this->_internal_save_function() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_save_function(), target);
  }

  // int32 restore_function = 3;
  if (this->_internal_restore_function() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_restore_function(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SaveableObject)
  return target;
}

size_t SaveableObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SaveableObject)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 save_function = 2;
  if (this->_internal_save_function() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_save_function());
  }

  // int32 restore_function = 3;
  if (this->_internal_restore_function() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_restore_function());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SaveableObject::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SaveableObject::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SaveableObject::GetClassData() const { return &_class_data_; }


void SaveableObject::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SaveableObject*>(&to_msg);
  auto& from = static_cast<const SaveableObject&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SaveableObject)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_save_function() != 0) {
    _this->_internal_set_save_function(from._internal_save_function());
  }
  if (from._internal_restore_function() != 0) {
    _this->_internal_set_restore_function(from._internal_restore_function());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SaveableObject::CopyFrom(const SaveableObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SaveableObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveableObject::IsInitialized() const {
  return true;
}

void SaveableObject::InternalSwap(SaveableObject* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SaveableObject, _impl_.restore_function_)
      + sizeof(SaveableObject::_impl_.restore_function_)
      - PROTOBUF_FIELD_OFFSET(SaveableObject, _impl_.save_function_)>(
          reinterpret_cast<char*>(&_impl_.save_function_),
          reinterpret_cast<char*>(&other->_impl_.save_function_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveableObject::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[14]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tensorflow::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::tensorflow::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedObjectGraph*
Arena::CreateMaybeMessage< ::tensorflow::SavedObjectGraph >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedObjectGraph >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedObject_SaveableObjectsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::tensorflow::SavedObject_SaveableObjectsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedObject_SaveableObjectsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedObject*
Arena::CreateMaybeMessage< ::tensorflow::SavedObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedObject >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedUserObject*
Arena::CreateMaybeMessage< ::tensorflow::SavedUserObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedUserObject >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedAsset*
Arena::CreateMaybeMessage< ::tensorflow::SavedAsset >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedAsset >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedFunction*
Arena::CreateMaybeMessage< ::tensorflow::SavedFunction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedFunction >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::CapturedTensor*
Arena::CreateMaybeMessage< ::tensorflow::CapturedTensor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::CapturedTensor >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedConcreteFunction*
Arena::CreateMaybeMessage< ::tensorflow::SavedConcreteFunction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedConcreteFunction >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedBareConcreteFunction*
Arena::CreateMaybeMessage< ::tensorflow::SavedBareConcreteFunction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedBareConcreteFunction >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedConstant*
Arena::CreateMaybeMessage< ::tensorflow::SavedConstant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedConstant >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedVariable*
Arena::CreateMaybeMessage< ::tensorflow::SavedVariable >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedVariable >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::FunctionSpec*
Arena::CreateMaybeMessage< ::tensorflow::FunctionSpec >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::FunctionSpec >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedResource*
Arena::CreateMaybeMessage< ::tensorflow::SavedResource >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedResource >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SaveableObject*
Arena::CreateMaybeMessage< ::tensorflow::SaveableObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SaveableObject >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
