// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/protobuf/xplane.proto

#include "tensorflow/core/profiler/protobuf/xplane.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace tensorflow {
namespace profiler {
namespace empty {
}  // namespace empty
}  // namespace profiler
}  // namespace tensorflow
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_tensorflow_2fcore_2fprofiler_2fprotobuf_2fxplane_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_tensorflow_2fcore_2fprofiler_2fprotobuf_2fxplane_2eproto = nullptr;
const uint32_t TableStruct_tensorflow_2fcore_2fprofiler_2fprotobuf_2fxplane_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_tensorflow_2fcore_2fprofiler_2fprotobuf_2fxplane_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n.tensorflow/core/profiler/protobuf/xpla"
  "ne.proto\022\031tensorflow.profiler.empty\032\"tsl"
  "/profiler/protobuf/xplane.protoP\000b\006proto"
  "3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fxplane_2eproto_deps[1] = {
  &::descriptor_table_tsl_2fprofiler_2fprotobuf_2fxplane_2eproto,
};
static ::_pbi::once_flag descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fxplane_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fxplane_2eproto = {
    false, false, 121, descriptor_table_protodef_tensorflow_2fcore_2fprofiler_2fprotobuf_2fxplane_2eproto,
    "tensorflow/core/profiler/protobuf/xplane.proto",
    &descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fxplane_2eproto_once, descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fxplane_2eproto_deps, 1, 0,
    schemas, file_default_instances, TableStruct_tensorflow_2fcore_2fprofiler_2fprotobuf_2fxplane_2eproto::offsets,
    nullptr, file_level_enum_descriptors_tensorflow_2fcore_2fprofiler_2fprotobuf_2fxplane_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fprofiler_2fprotobuf_2fxplane_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fxplane_2eproto_getter() {
  return &descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fxplane_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_tensorflow_2fcore_2fprofiler_2fprotobuf_2fxplane_2eproto(&descriptor_table_tensorflow_2fcore_2fprofiler_2fprotobuf_2fxplane_2eproto);
namespace tensorflow {
namespace profiler {
namespace empty {

// @@protoc_insertion_point(namespace_scope)
}  // namespace empty
}  // namespace profiler
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
