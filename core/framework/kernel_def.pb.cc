// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/kernel_def.proto

#include "tensorflow/core/framework/kernel_def.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace tensorflow {
PROTOBUF_CONSTEXPR KernelDef_AttrConstraint::KernelDef_AttrConstraint(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.allowed_values_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct KernelDef_AttrConstraintDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KernelDef_AttrConstraintDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~KernelDef_AttrConstraintDefaultTypeInternal() {}
  union {
    KernelDef_AttrConstraint _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KernelDef_AttrConstraintDefaultTypeInternal _KernelDef_AttrConstraint_default_instance_;
PROTOBUF_CONSTEXPR KernelDef::KernelDef(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.constraint_)*/{}
  , /*decltype(_impl_.host_memory_arg_)*/{}
  , /*decltype(_impl_.op_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.device_type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.label_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.priority_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct KernelDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KernelDefDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~KernelDefDefaultTypeInternal() {}
  union {
    KernelDef _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KernelDefDefaultTypeInternal _KernelDef_default_instance_;
PROTOBUF_CONSTEXPR KernelList::KernelList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.kernel_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct KernelListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KernelListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~KernelListDefaultTypeInternal() {}
  union {
    KernelList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KernelListDefaultTypeInternal _KernelList_default_instance_;
}  // namespace tensorflow
static ::_pb::Metadata file_level_metadata_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto[3];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto = nullptr;

const uint32_t TableStruct_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::KernelDef_AttrConstraint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::KernelDef_AttrConstraint, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::KernelDef_AttrConstraint, _impl_.allowed_values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::KernelDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::KernelDef, _impl_.op_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::KernelDef, _impl_.device_type_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::KernelDef, _impl_.constraint_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::KernelDef, _impl_.host_memory_arg_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::KernelDef, _impl_.label_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::KernelDef, _impl_.priority_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::KernelList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::KernelList, _impl_.kernel_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::tensorflow::KernelDef_AttrConstraint)},
  { 8, -1, -1, sizeof(::tensorflow::KernelDef)},
  { 20, -1, -1, sizeof(::tensorflow::KernelList)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::tensorflow::_KernelDef_AttrConstraint_default_instance_._instance,
  &::tensorflow::_KernelDef_default_instance_._instance,
  &::tensorflow::_KernelList_default_instance_._instance,
};

const char descriptor_table_protodef_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n*tensorflow/core/framework/kernel_def.p"
  "roto\022\ntensorflow\032*tensorflow/core/framew"
  "ork/attr_value.proto\"\357\001\n\tKernelDef\022\n\n\002op"
  "\030\001 \001(\t\022\023\n\013device_type\030\002 \001(\t\0228\n\nconstrain"
  "t\030\003 \003(\0132$.tensorflow.KernelDef.AttrConst"
  "raint\022\027\n\017host_memory_arg\030\004 \003(\t\022\r\n\005label\030"
  "\005 \001(\t\022\020\n\010priority\030\006 \001(\005\032M\n\016AttrConstrain"
  "t\022\014\n\004name\030\001 \001(\t\022-\n\016allowed_values\030\002 \001(\0132"
  "\025.tensorflow.AttrValue\"3\n\nKernelList\022%\n\006"
  "kernel\030\001 \003(\0132\025.tensorflow.KernelDefB\203\001\n\030"
  "org.tensorflow.frameworkB\017KernelDefProto"
  "sP\001ZQgithub.com/tensorflow/tensorflow/te"
  "nsorflow/go/core/framework/kernel_def_go"
  "_proto\370\001\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_deps[1] = {
  &::descriptor_table_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto,
};
static ::_pbi::once_flag descriptor_table_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto = {
    false, false, 537, descriptor_table_protodef_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto,
    "tensorflow/core/framework/kernel_def.proto",
    &descriptor_table_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_once, descriptor_table_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_deps, 1, 3,
    schemas, file_default_instances, TableStruct_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::offsets,
    file_level_metadata_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto, file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_getter() {
  return &descriptor_table_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto(&descriptor_table_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto);
namespace tensorflow {

// ===================================================================

class KernelDef_AttrConstraint::_Internal {
 public:
  static const ::tensorflow::AttrValue& allowed_values(const KernelDef_AttrConstraint* msg);
};

const ::tensorflow::AttrValue&
KernelDef_AttrConstraint::_Internal::allowed_values(const KernelDef_AttrConstraint* msg) {
  return *msg->_impl_.allowed_values_;
}
void KernelDef_AttrConstraint::clear_allowed_values() {
  if (GetArenaForAllocation() == nullptr && _impl_.allowed_values_ != nullptr) {
    delete _impl_.allowed_values_;
  }
  _impl_.allowed_values_ = nullptr;
}
KernelDef_AttrConstraint::KernelDef_AttrConstraint(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.KernelDef.AttrConstraint)
}
KernelDef_AttrConstraint::KernelDef_AttrConstraint(const KernelDef_AttrConstraint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  KernelDef_AttrConstraint* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.allowed_values_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_allowed_values()) {
    _this->_impl_.allowed_values_ = new ::tensorflow::AttrValue(*from._impl_.allowed_values_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.KernelDef.AttrConstraint)
}

inline void KernelDef_AttrConstraint::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.allowed_values_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

KernelDef_AttrConstraint::~KernelDef_AttrConstraint() {
  // @@protoc_insertion_point(destructor:tensorflow.KernelDef.AttrConstraint)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KernelDef_AttrConstraint::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.allowed_values_;
}

void KernelDef_AttrConstraint::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KernelDef_AttrConstraint::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.KernelDef.AttrConstraint)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.allowed_values_ != nullptr) {
    delete _impl_.allowed_values_;
  }
  _impl_.allowed_values_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KernelDef_AttrConstraint::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.KernelDef.AttrConstraint.name"));
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.AttrValue allowed_values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_allowed_values(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* KernelDef_AttrConstraint::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.KernelDef.AttrConstraint)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.KernelDef.AttrConstraint.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .tensorflow.AttrValue allowed_values = 2;
  if (this->_internal_has_allowed_values()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::allowed_values(this),
        _Internal::allowed_values(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.KernelDef.AttrConstraint)
  return target;
}

size_t KernelDef_AttrConstraint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.KernelDef.AttrConstraint)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .tensorflow.AttrValue allowed_values = 2;
  if (this->_internal_has_allowed_values()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.allowed_values_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KernelDef_AttrConstraint::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    KernelDef_AttrConstraint::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KernelDef_AttrConstraint::GetClassData() const { return &_class_data_; }


void KernelDef_AttrConstraint::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<KernelDef_AttrConstraint*>(&to_msg);
  auto& from = static_cast<const KernelDef_AttrConstraint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.KernelDef.AttrConstraint)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_has_allowed_values()) {
    _this->_internal_mutable_allowed_values()->::tensorflow::AttrValue::MergeFrom(
        from._internal_allowed_values());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KernelDef_AttrConstraint::CopyFrom(const KernelDef_AttrConstraint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.KernelDef.AttrConstraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KernelDef_AttrConstraint::IsInitialized() const {
  return true;
}

void KernelDef_AttrConstraint::InternalSwap(KernelDef_AttrConstraint* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.allowed_values_, other->_impl_.allowed_values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KernelDef_AttrConstraint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto[0]);
}

// ===================================================================

class KernelDef::_Internal {
 public:
};

KernelDef::KernelDef(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.KernelDef)
}
KernelDef::KernelDef(const KernelDef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  KernelDef* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.constraint_){from._impl_.constraint_}
    , decltype(_impl_.host_memory_arg_){from._impl_.host_memory_arg_}
    , decltype(_impl_.op_){}
    , decltype(_impl_.device_type_){}
    , decltype(_impl_.label_){}
    , decltype(_impl_.priority_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.op_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.op_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_op().empty()) {
    _this->_impl_.op_.Set(from._internal_op(), 
      _this->GetArenaForAllocation());
  }
  _impl_.device_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.device_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_device_type().empty()) {
    _this->_impl_.device_type_.Set(from._internal_device_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.label_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.label_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_label().empty()) {
    _this->_impl_.label_.Set(from._internal_label(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.priority_ = from._impl_.priority_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.KernelDef)
}

inline void KernelDef::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.constraint_){arena}
    , decltype(_impl_.host_memory_arg_){arena}
    , decltype(_impl_.op_){}
    , decltype(_impl_.device_type_){}
    , decltype(_impl_.label_){}
    , decltype(_impl_.priority_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.op_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.op_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.device_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.device_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.label_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.label_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

KernelDef::~KernelDef() {
  // @@protoc_insertion_point(destructor:tensorflow.KernelDef)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KernelDef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.constraint_.~RepeatedPtrField();
  _impl_.host_memory_arg_.~RepeatedPtrField();
  _impl_.op_.Destroy();
  _impl_.device_type_.Destroy();
  _impl_.label_.Destroy();
}

void KernelDef::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KernelDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.KernelDef)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.constraint_.Clear();
  _impl_.host_memory_arg_.Clear();
  _impl_.op_.ClearToEmpty();
  _impl_.device_type_.ClearToEmpty();
  _impl_.label_.ClearToEmpty();
  _impl_.priority_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KernelDef::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string op = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_op();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.KernelDef.op"));
        } else
          goto handle_unusual;
        continue;
      // string device_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_device_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.KernelDef.device_type"));
        } else
          goto handle_unusual;
        continue;
      // repeated .tensorflow.KernelDef.AttrConstraint constraint = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_constraint(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string host_memory_arg = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_host_memory_arg();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "tensorflow.KernelDef.host_memory_arg"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string label = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_label();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.KernelDef.label"));
        } else
          goto handle_unusual;
        continue;
      // int32 priority = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.priority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* KernelDef::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.KernelDef)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string op = 1;
  if (!this->_internal_op().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_op().data(), static_cast<int>(this->_internal_op().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.KernelDef.op");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_op(), target);
  }

  // string device_type = 2;
  if (!this->_internal_device_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_device_type().data(), static_cast<int>(this->_internal_device_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.KernelDef.device_type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_device_type(), target);
  }

  // repeated .tensorflow.KernelDef.AttrConstraint constraint = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_constraint_size()); i < n; i++) {
    const auto& repfield = this->_internal_constraint(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated string host_memory_arg = 4;
  for (int i = 0, n = this->_internal_host_memory_arg_size(); i < n; i++) {
    const auto& s = this->_internal_host_memory_arg(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.KernelDef.host_memory_arg");
    target = stream->WriteString(4, s, target);
  }

  // string label = 5;
  if (!this->_internal_label().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_label().data(), static_cast<int>(this->_internal_label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.KernelDef.label");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_label(), target);
  }

  // int32 priority = 6;
  if (this->_internal_priority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_priority(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.KernelDef)
  return target;
}

size_t KernelDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.KernelDef)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.KernelDef.AttrConstraint constraint = 3;
  total_size += 1UL * this->_internal_constraint_size();
  for (const auto& msg : this->_impl_.constraint_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string host_memory_arg = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.host_memory_arg_.size());
  for (int i = 0, n = _impl_.host_memory_arg_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.host_memory_arg_.Get(i));
  }

  // string op = 1;
  if (!this->_internal_op().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_op());
  }

  // string device_type = 2;
  if (!this->_internal_device_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_device_type());
  }

  // string label = 5;
  if (!this->_internal_label().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_label());
  }

  // int32 priority = 6;
  if (this->_internal_priority() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_priority());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KernelDef::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    KernelDef::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KernelDef::GetClassData() const { return &_class_data_; }


void KernelDef::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<KernelDef*>(&to_msg);
  auto& from = static_cast<const KernelDef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.KernelDef)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.constraint_.MergeFrom(from._impl_.constraint_);
  _this->_impl_.host_memory_arg_.MergeFrom(from._impl_.host_memory_arg_);
  if (!from._internal_op().empty()) {
    _this->_internal_set_op(from._internal_op());
  }
  if (!from._internal_device_type().empty()) {
    _this->_internal_set_device_type(from._internal_device_type());
  }
  if (!from._internal_label().empty()) {
    _this->_internal_set_label(from._internal_label());
  }
  if (from._internal_priority() != 0) {
    _this->_internal_set_priority(from._internal_priority());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KernelDef::CopyFrom(const KernelDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.KernelDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KernelDef::IsInitialized() const {
  return true;
}

void KernelDef::InternalSwap(KernelDef* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.constraint_.InternalSwap(&other->_impl_.constraint_);
  _impl_.host_memory_arg_.InternalSwap(&other->_impl_.host_memory_arg_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.op_, lhs_arena,
      &other->_impl_.op_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.device_type_, lhs_arena,
      &other->_impl_.device_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.label_, lhs_arena,
      &other->_impl_.label_, rhs_arena
  );
  swap(_impl_.priority_, other->_impl_.priority_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KernelDef::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto[1]);
}

// ===================================================================

class KernelList::_Internal {
 public:
};

KernelList::KernelList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.KernelList)
}
KernelList::KernelList(const KernelList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  KernelList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.kernel_){from._impl_.kernel_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.KernelList)
}

inline void KernelList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.kernel_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

KernelList::~KernelList() {
  // @@protoc_insertion_point(destructor:tensorflow.KernelList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KernelList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.kernel_.~RepeatedPtrField();
}

void KernelList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KernelList::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.KernelList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.kernel_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KernelList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .tensorflow.KernelDef kernel = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_kernel(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* KernelList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.KernelList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.KernelDef kernel = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_kernel_size()); i < n; i++) {
    const auto& repfield = this->_internal_kernel(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.KernelList)
  return target;
}

size_t KernelList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.KernelList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.KernelDef kernel = 1;
  total_size += 1UL * this->_internal_kernel_size();
  for (const auto& msg : this->_impl_.kernel_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KernelList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    KernelList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KernelList::GetClassData() const { return &_class_data_; }


void KernelList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<KernelList*>(&to_msg);
  auto& from = static_cast<const KernelList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.KernelList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.kernel_.MergeFrom(from._impl_.kernel_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KernelList::CopyFrom(const KernelList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.KernelList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KernelList::IsInitialized() const {
  return true;
}

void KernelList::InternalSwap(KernelList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.kernel_.InternalSwap(&other->_impl_.kernel_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KernelList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tensorflow::KernelDef_AttrConstraint*
Arena::CreateMaybeMessage< ::tensorflow::KernelDef_AttrConstraint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::KernelDef_AttrConstraint >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::KernelDef*
Arena::CreateMaybeMessage< ::tensorflow::KernelDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::KernelDef >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::KernelList*
Arena::CreateMaybeMessage< ::tensorflow::KernelList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::KernelList >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
