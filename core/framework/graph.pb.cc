// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/graph.proto

#include "tensorflow/core/framework/graph.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace tensorflow {
PROTOBUF_CONSTEXPR GraphDef::GraphDef(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.node_)*/{}
  , /*decltype(_impl_.library_)*/nullptr
  , /*decltype(_impl_.versions_)*/nullptr
  , /*decltype(_impl_.debug_info_)*/nullptr
  , /*decltype(_impl_.version_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GraphDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphDefDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphDefDefaultTypeInternal() {}
  union {
    GraphDef _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphDefDefaultTypeInternal _GraphDef_default_instance_;
}  // namespace tensorflow
static ::_pb::Metadata file_level_metadata_tensorflow_2fcore_2fframework_2fgraph_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fgraph_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_tensorflow_2fcore_2fframework_2fgraph_2eproto = nullptr;

const uint32_t TableStruct_tensorflow_2fcore_2fframework_2fgraph_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDef, _impl_.node_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDef, _impl_.versions_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDef, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDef, _impl_.library_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDef, _impl_.debug_info_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::tensorflow::GraphDef)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::tensorflow::_GraphDef_default_instance_._instance,
};

const char descriptor_table_protodef_tensorflow_2fcore_2fframework_2fgraph_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%tensorflow/core/framework/graph.proto\022"
  "\ntensorflow\032(tensorflow/core/framework/f"
  "unction.proto\0320tensorflow/core/framework"
  "/graph_debug_info.proto\032(tensorflow/core"
  "/framework/node_def.proto\032(tensorflow/co"
  "re/framework/versions.proto\"\315\001\n\010GraphDef"
  "\022!\n\004node\030\001 \003(\0132\023.tensorflow.NodeDef\022(\n\010v"
  "ersions\030\004 \001(\0132\026.tensorflow.VersionDef\022\023\n"
  "\007version\030\003 \001(\005B\002\030\001\022/\n\007library\030\002 \001(\0132\036.te"
  "nsorflow.FunctionDefLibrary\022.\n\ndebug_inf"
  "o\030\005 \001(\0132\032.tensorflow.GraphDebugInfoBz\n\030o"
  "rg.tensorflow.frameworkB\013GraphProtosP\001ZL"
  "github.com/tensorflow/tensorflow/tensorf"
  "low/go/core/framework/graph_go_proto\370\001\001b"
  "\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_2fcore_2fframework_2fgraph_2eproto_deps[4] = {
  &::descriptor_table_tensorflow_2fcore_2fframework_2ffunction_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fframework_2fversions_2eproto,
};
static ::_pbi::once_flag descriptor_table_tensorflow_2fcore_2fframework_2fgraph_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fframework_2fgraph_2eproto = {
    false, false, 567, descriptor_table_protodef_tensorflow_2fcore_2fframework_2fgraph_2eproto,
    "tensorflow/core/framework/graph.proto",
    &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_2eproto_once, descriptor_table_tensorflow_2fcore_2fframework_2fgraph_2eproto_deps, 4, 1,
    schemas, file_default_instances, TableStruct_tensorflow_2fcore_2fframework_2fgraph_2eproto::offsets,
    file_level_metadata_tensorflow_2fcore_2fframework_2fgraph_2eproto, file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fgraph_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fframework_2fgraph_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_tensorflow_2fcore_2fframework_2fgraph_2eproto_getter() {
  return &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_tensorflow_2fcore_2fframework_2fgraph_2eproto(&descriptor_table_tensorflow_2fcore_2fframework_2fgraph_2eproto);
namespace tensorflow {

// ===================================================================

class GraphDef::_Internal {
 public:
  static const ::tensorflow::VersionDef& versions(const GraphDef* msg);
  static const ::tensorflow::FunctionDefLibrary& library(const GraphDef* msg);
  static const ::tensorflow::GraphDebugInfo& debug_info(const GraphDef* msg);
};

const ::tensorflow::VersionDef&
GraphDef::_Internal::versions(const GraphDef* msg) {
  return *msg->_impl_.versions_;
}
const ::tensorflow::FunctionDefLibrary&
GraphDef::_Internal::library(const GraphDef* msg) {
  return *msg->_impl_.library_;
}
const ::tensorflow::GraphDebugInfo&
GraphDef::_Internal::debug_info(const GraphDef* msg) {
  return *msg->_impl_.debug_info_;
}
void GraphDef::clear_node() {
  _impl_.node_.Clear();
}
void GraphDef::clear_versions() {
  if (GetArenaForAllocation() == nullptr && _impl_.versions_ != nullptr) {
    delete _impl_.versions_;
  }
  _impl_.versions_ = nullptr;
}
void GraphDef::clear_library() {
  if (GetArenaForAllocation() == nullptr && _impl_.library_ != nullptr) {
    delete _impl_.library_;
  }
  _impl_.library_ = nullptr;
}
void GraphDef::clear_debug_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.debug_info_ != nullptr) {
    delete _impl_.debug_info_;
  }
  _impl_.debug_info_ = nullptr;
}
GraphDef::GraphDef(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GraphDef)
}
GraphDef::GraphDef(const GraphDef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GraphDef* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.node_){from._impl_.node_}
    , decltype(_impl_.library_){nullptr}
    , decltype(_impl_.versions_){nullptr}
    , decltype(_impl_.debug_info_){nullptr}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_library()) {
    _this->_impl_.library_ = new ::tensorflow::FunctionDefLibrary(*from._impl_.library_);
  }
  if (from._internal_has_versions()) {
    _this->_impl_.versions_ = new ::tensorflow::VersionDef(*from._impl_.versions_);
  }
  if (from._internal_has_debug_info()) {
    _this->_impl_.debug_info_ = new ::tensorflow::GraphDebugInfo(*from._impl_.debug_info_);
  }
  _this->_impl_.version_ = from._impl_.version_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.GraphDef)
}

inline void GraphDef::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.node_){arena}
    , decltype(_impl_.library_){nullptr}
    , decltype(_impl_.versions_){nullptr}
    , decltype(_impl_.debug_info_){nullptr}
    , decltype(_impl_.version_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GraphDef::~GraphDef() {
  // @@protoc_insertion_point(destructor:tensorflow.GraphDef)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GraphDef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.node_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.library_;
  if (this != internal_default_instance()) delete _impl_.versions_;
  if (this != internal_default_instance()) delete _impl_.debug_info_;
}

void GraphDef::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GraphDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GraphDef)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.library_ != nullptr) {
    delete _impl_.library_;
  }
  _impl_.library_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.versions_ != nullptr) {
    delete _impl_.versions_;
  }
  _impl_.versions_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.debug_info_ != nullptr) {
    delete _impl_.debug_info_;
  }
  _impl_.debug_info_ = nullptr;
  _impl_.version_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GraphDef::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .tensorflow.NodeDef node = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_node(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.FunctionDefLibrary library = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_library(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 version = 3 [deprecated = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.VersionDef versions = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_versions(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.GraphDebugInfo debug_info = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_debug_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GraphDef::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GraphDef)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.NodeDef node = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_node_size()); i < n; i++) {
    const auto& repfield = this->_internal_node(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .tensorflow.FunctionDefLibrary library = 2;
  if (this->_internal_has_library()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::library(this),
        _Internal::library(this).GetCachedSize(), target, stream);
  }

  // int32 version = 3 [deprecated = true];
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_version(), target);
  }

  // .tensorflow.VersionDef versions = 4;
  if (this->_internal_has_versions()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::versions(this),
        _Internal::versions(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.GraphDebugInfo debug_info = 5;
  if (this->_internal_has_debug_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::debug_info(this),
        _Internal::debug_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GraphDef)
  return target;
}

size_t GraphDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.GraphDef)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.NodeDef node = 1;
  total_size += 1UL * this->_internal_node_size();
  for (const auto& msg : this->_impl_.node_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .tensorflow.FunctionDefLibrary library = 2;
  if (this->_internal_has_library()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.library_);
  }

  // .tensorflow.VersionDef versions = 4;
  if (this->_internal_has_versions()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.versions_);
  }

  // .tensorflow.GraphDebugInfo debug_info = 5;
  if (this->_internal_has_debug_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.debug_info_);
  }

  // int32 version = 3 [deprecated = true];
  if (this->_internal_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GraphDef::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GraphDef::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GraphDef::GetClassData() const { return &_class_data_; }


void GraphDef::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GraphDef*>(&to_msg);
  auto& from = static_cast<const GraphDef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GraphDef)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.node_.MergeFrom(from._impl_.node_);
  if (from._internal_has_library()) {
    _this->_internal_mutable_library()->::tensorflow::FunctionDefLibrary::MergeFrom(
        from._internal_library());
  }
  if (from._internal_has_versions()) {
    _this->_internal_mutable_versions()->::tensorflow::VersionDef::MergeFrom(
        from._internal_versions());
  }
  if (from._internal_has_debug_info()) {
    _this->_internal_mutable_debug_info()->::tensorflow::GraphDebugInfo::MergeFrom(
        from._internal_debug_info());
  }
  if (from._internal_version() != 0) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GraphDef::CopyFrom(const GraphDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GraphDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphDef::IsInitialized() const {
  return true;
}

void GraphDef::InternalSwap(GraphDef* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.node_.InternalSwap(&other->_impl_.node_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GraphDef, _impl_.version_)
      + sizeof(GraphDef::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(GraphDef, _impl_.library_)>(
          reinterpret_cast<char*>(&_impl_.library_),
          reinterpret_cast<char*>(&other->_impl_.library_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GraphDef::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fframework_2fgraph_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tensorflow::GraphDef*
Arena::CreateMaybeMessage< ::tensorflow::GraphDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::GraphDef >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
