// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/api_def.proto

#include "tensorflow/core/framework/api_def.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace tensorflow {
PROTOBUF_CONSTEXPR ApiDef_Endpoint::ApiDef_Endpoint(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.deprecated_)*/false
  , /*decltype(_impl_.deprecation_version_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ApiDef_EndpointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ApiDef_EndpointDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ApiDef_EndpointDefaultTypeInternal() {}
  union {
    ApiDef_Endpoint _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ApiDef_EndpointDefaultTypeInternal _ApiDef_Endpoint_default_instance_;
PROTOBUF_CONSTEXPR ApiDef_Arg::ApiDef_Arg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.rename_to_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ApiDef_ArgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ApiDef_ArgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ApiDef_ArgDefaultTypeInternal() {}
  union {
    ApiDef_Arg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ApiDef_ArgDefaultTypeInternal _ApiDef_Arg_default_instance_;
PROTOBUF_CONSTEXPR ApiDef_Attr::ApiDef_Attr(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.rename_to_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.default_value_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ApiDef_AttrDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ApiDef_AttrDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ApiDef_AttrDefaultTypeInternal() {}
  union {
    ApiDef_Attr _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ApiDef_AttrDefaultTypeInternal _ApiDef_Attr_default_instance_;
PROTOBUF_CONSTEXPR ApiDef::ApiDef(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.endpoint_)*/{}
  , /*decltype(_impl_.in_arg_)*/{}
  , /*decltype(_impl_.out_arg_)*/{}
  , /*decltype(_impl_.attr_)*/{}
  , /*decltype(_impl_.arg_order_)*/{}
  , /*decltype(_impl_.graph_op_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.summary_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_prefix_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_suffix_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.deprecation_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.visibility_)*/0
  , /*decltype(_impl_.deprecation_version_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ApiDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ApiDefDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ApiDefDefaultTypeInternal() {}
  union {
    ApiDef _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ApiDefDefaultTypeInternal _ApiDef_default_instance_;
PROTOBUF_CONSTEXPR ApiDefs::ApiDefs(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.op_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ApiDefsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ApiDefsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ApiDefsDefaultTypeInternal() {}
  union {
    ApiDefs _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ApiDefsDefaultTypeInternal _ApiDefs_default_instance_;
}  // namespace tensorflow
static ::_pb::Metadata file_level_metadata_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto[5];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto = nullptr;

const uint32_t TableStruct_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Endpoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Endpoint, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Endpoint, _impl_.deprecated_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Endpoint, _impl_.deprecation_version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Arg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Arg, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Arg, _impl_.rename_to_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Arg, _impl_.description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Attr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Attr, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Attr, _impl_.rename_to_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Attr, _impl_.default_value_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef_Attr, _impl_.description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, _impl_.graph_op_name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, _impl_.deprecation_message_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, _impl_.deprecation_version_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, _impl_.visibility_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, _impl_.endpoint_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, _impl_.in_arg_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, _impl_.out_arg_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, _impl_.arg_order_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, _impl_.attr_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, _impl_.summary_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, _impl_.description_prefix_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDef, _impl_.description_suffix_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDefs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ApiDefs, _impl_.op_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::tensorflow::ApiDef_Endpoint)},
  { 9, -1, -1, sizeof(::tensorflow::ApiDef_Arg)},
  { 18, -1, -1, sizeof(::tensorflow::ApiDef_Attr)},
  { 28, -1, -1, sizeof(::tensorflow::ApiDef)},
  { 47, -1, -1, sizeof(::tensorflow::ApiDefs)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::tensorflow::_ApiDef_Endpoint_default_instance_._instance,
  &::tensorflow::_ApiDef_Arg_default_instance_._instance,
  &::tensorflow::_ApiDef_Attr_default_instance_._instance,
  &::tensorflow::_ApiDef_default_instance_._instance,
  &::tensorflow::_ApiDefs_default_instance_._instance,
};

const char descriptor_table_protodef_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\'tensorflow/core/framework/api_def.prot"
  "o\022\ntensorflow\032*tensorflow/core/framework"
  "/attr_value.proto\"\341\005\n\006ApiDef\022\025\n\rgraph_op"
  "_name\030\001 \001(\t\022\033\n\023deprecation_message\030\014 \001(\t"
  "\022\033\n\023deprecation_version\030\r \001(\005\0221\n\nvisibil"
  "ity\030\002 \001(\0162\035.tensorflow.ApiDef.Visibility"
  "\022-\n\010endpoint\030\003 \003(\0132\033.tensorflow.ApiDef.E"
  "ndpoint\022&\n\006in_arg\030\004 \003(\0132\026.tensorflow.Api"
  "Def.Arg\022\'\n\007out_arg\030\005 \003(\0132\026.tensorflow.Ap"
  "iDef.Arg\022\021\n\targ_order\030\013 \003(\t\022%\n\004attr\030\006 \003("
  "\0132\027.tensorflow.ApiDef.Attr\022\017\n\007summary\030\007 "
  "\001(\t\022\023\n\013description\030\010 \001(\t\022\032\n\022description_"
  "prefix\030\t \001(\t\022\032\n\022description_suffix\030\n \001(\t"
  "\032I\n\010Endpoint\022\014\n\004name\030\001 \001(\t\022\022\n\ndeprecated"
  "\030\003 \001(\010\022\033\n\023deprecation_version\030\004 \001(\005\032;\n\003A"
  "rg\022\014\n\004name\030\001 \001(\t\022\021\n\trename_to\030\002 \001(\t\022\023\n\013d"
  "escription\030\003 \001(\t\032j\n\004Attr\022\014\n\004name\030\001 \001(\t\022\021"
  "\n\trename_to\030\002 \001(\t\022,\n\rdefault_value\030\003 \001(\013"
  "2\025.tensorflow.AttrValue\022\023\n\013description\030\004"
  " \001(\t\"G\n\nVisibility\022\026\n\022DEFAULT_VISIBILITY"
  "\020\000\022\013\n\007VISIBLE\020\001\022\010\n\004SKIP\020\002\022\n\n\006HIDDEN\020\003\")\n"
  "\007ApiDefs\022\036\n\002op\030\001 \003(\0132\022.tensorflow.ApiDef"
  "B}\n\030org.tensorflow.frameworkB\014ApiDefProt"
  "osP\001ZNgithub.com/tensorflow/tensorflow/t"
  "ensorflow/go/core/framework/api_def_go_p"
  "roto\370\001\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_deps[1] = {
  &::descriptor_table_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto,
};
static ::_pbi::once_flag descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto = {
    false, false, 1015, descriptor_table_protodef_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto,
    "tensorflow/core/framework/api_def.proto",
    &descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_once, descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_deps, 1, 5,
    schemas, file_default_instances, TableStruct_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::offsets,
    file_level_metadata_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto, file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_getter() {
  return &descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto(&descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto);
namespace tensorflow {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ApiDef_Visibility_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto);
  return file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto[0];
}
bool ApiDef_Visibility_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ApiDef_Visibility ApiDef::DEFAULT_VISIBILITY;
constexpr ApiDef_Visibility ApiDef::VISIBLE;
constexpr ApiDef_Visibility ApiDef::SKIP;
constexpr ApiDef_Visibility ApiDef::HIDDEN;
constexpr ApiDef_Visibility ApiDef::Visibility_MIN;
constexpr ApiDef_Visibility ApiDef::Visibility_MAX;
constexpr int ApiDef::Visibility_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class ApiDef_Endpoint::_Internal {
 public:
};

ApiDef_Endpoint::ApiDef_Endpoint(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ApiDef.Endpoint)
}
ApiDef_Endpoint::ApiDef_Endpoint(const ApiDef_Endpoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ApiDef_Endpoint* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.deprecated_){}
    , decltype(_impl_.deprecation_version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.deprecated_, &from._impl_.deprecated_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.deprecation_version_) -
    reinterpret_cast<char*>(&_impl_.deprecated_)) + sizeof(_impl_.deprecation_version_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.ApiDef.Endpoint)
}

inline void ApiDef_Endpoint::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.deprecated_){false}
    , decltype(_impl_.deprecation_version_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ApiDef_Endpoint::~ApiDef_Endpoint() {
  // @@protoc_insertion_point(destructor:tensorflow.ApiDef.Endpoint)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ApiDef_Endpoint::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void ApiDef_Endpoint::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ApiDef_Endpoint::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ApiDef.Endpoint)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.deprecated_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.deprecation_version_) -
      reinterpret_cast<char*>(&_impl_.deprecated_)) + sizeof(_impl_.deprecation_version_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ApiDef_Endpoint::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.ApiDef.Endpoint.name"));
        } else
          goto handle_unusual;
        continue;
      // bool deprecated = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.deprecated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 deprecation_version = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.deprecation_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ApiDef_Endpoint::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ApiDef.Endpoint)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.Endpoint.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bool deprecated = 3;
  if (this->_internal_deprecated() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_deprecated(), target);
  }

  // int32 deprecation_version = 4;
  if (this->_internal_deprecation_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_deprecation_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ApiDef.Endpoint)
  return target;
}

size_t ApiDef_Endpoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ApiDef.Endpoint)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bool deprecated = 3;
  if (this->_internal_deprecated() != 0) {
    total_size += 1 + 1;
  }

  // int32 deprecation_version = 4;
  if (this->_internal_deprecation_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_deprecation_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ApiDef_Endpoint::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ApiDef_Endpoint::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ApiDef_Endpoint::GetClassData() const { return &_class_data_; }


void ApiDef_Endpoint::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ApiDef_Endpoint*>(&to_msg);
  auto& from = static_cast<const ApiDef_Endpoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ApiDef.Endpoint)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_deprecated() != 0) {
    _this->_internal_set_deprecated(from._internal_deprecated());
  }
  if (from._internal_deprecation_version() != 0) {
    _this->_internal_set_deprecation_version(from._internal_deprecation_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ApiDef_Endpoint::CopyFrom(const ApiDef_Endpoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ApiDef.Endpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApiDef_Endpoint::IsInitialized() const {
  return true;
}

void ApiDef_Endpoint::InternalSwap(ApiDef_Endpoint* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ApiDef_Endpoint, _impl_.deprecation_version_)
      + sizeof(ApiDef_Endpoint::_impl_.deprecation_version_)
      - PROTOBUF_FIELD_OFFSET(ApiDef_Endpoint, _impl_.deprecated_)>(
          reinterpret_cast<char*>(&_impl_.deprecated_),
          reinterpret_cast<char*>(&other->_impl_.deprecated_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ApiDef_Endpoint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto[0]);
}

// ===================================================================

class ApiDef_Arg::_Internal {
 public:
};

ApiDef_Arg::ApiDef_Arg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ApiDef.Arg)
}
ApiDef_Arg::ApiDef_Arg(const ApiDef_Arg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ApiDef_Arg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.rename_to_){}
    , decltype(_impl_.description_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.rename_to_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rename_to_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rename_to().empty()) {
    _this->_impl_.rename_to_.Set(from._internal_rename_to(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.ApiDef.Arg)
}

inline void ApiDef_Arg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.rename_to_){}
    , decltype(_impl_.description_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.rename_to_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rename_to_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ApiDef_Arg::~ApiDef_Arg() {
  // @@protoc_insertion_point(destructor:tensorflow.ApiDef.Arg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ApiDef_Arg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.rename_to_.Destroy();
  _impl_.description_.Destroy();
}

void ApiDef_Arg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ApiDef_Arg::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ApiDef.Arg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.rename_to_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ApiDef_Arg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.ApiDef.Arg.name"));
        } else
          goto handle_unusual;
        continue;
      // string rename_to = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_rename_to();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.ApiDef.Arg.rename_to"));
        } else
          goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.ApiDef.Arg.description"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ApiDef_Arg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ApiDef.Arg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.Arg.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string rename_to = 2;
  if (!this->_internal_rename_to().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rename_to().data(), static_cast<int>(this->_internal_rename_to().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.Arg.rename_to");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rename_to(), target);
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.Arg.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ApiDef.Arg)
  return target;
}

size_t ApiDef_Arg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ApiDef.Arg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string rename_to = 2;
  if (!this->_internal_rename_to().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rename_to());
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ApiDef_Arg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ApiDef_Arg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ApiDef_Arg::GetClassData() const { return &_class_data_; }


void ApiDef_Arg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ApiDef_Arg*>(&to_msg);
  auto& from = static_cast<const ApiDef_Arg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ApiDef.Arg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_rename_to().empty()) {
    _this->_internal_set_rename_to(from._internal_rename_to());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ApiDef_Arg::CopyFrom(const ApiDef_Arg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ApiDef.Arg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApiDef_Arg::IsInitialized() const {
  return true;
}

void ApiDef_Arg::InternalSwap(ApiDef_Arg* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.rename_to_, lhs_arena,
      &other->_impl_.rename_to_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ApiDef_Arg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto[1]);
}

// ===================================================================

class ApiDef_Attr::_Internal {
 public:
  static const ::tensorflow::AttrValue& default_value(const ApiDef_Attr* msg);
};

const ::tensorflow::AttrValue&
ApiDef_Attr::_Internal::default_value(const ApiDef_Attr* msg) {
  return *msg->_impl_.default_value_;
}
void ApiDef_Attr::clear_default_value() {
  if (GetArenaForAllocation() == nullptr && _impl_.default_value_ != nullptr) {
    delete _impl_.default_value_;
  }
  _impl_.default_value_ = nullptr;
}
ApiDef_Attr::ApiDef_Attr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ApiDef.Attr)
}
ApiDef_Attr::ApiDef_Attr(const ApiDef_Attr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ApiDef_Attr* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.rename_to_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.default_value_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.rename_to_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rename_to_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rename_to().empty()) {
    _this->_impl_.rename_to_.Set(from._internal_rename_to(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_default_value()) {
    _this->_impl_.default_value_ = new ::tensorflow::AttrValue(*from._impl_.default_value_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.ApiDef.Attr)
}

inline void ApiDef_Attr::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.rename_to_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.default_value_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.rename_to_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rename_to_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ApiDef_Attr::~ApiDef_Attr() {
  // @@protoc_insertion_point(destructor:tensorflow.ApiDef.Attr)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ApiDef_Attr::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.rename_to_.Destroy();
  _impl_.description_.Destroy();
  if (this != internal_default_instance()) delete _impl_.default_value_;
}

void ApiDef_Attr::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ApiDef_Attr::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ApiDef.Attr)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.rename_to_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.default_value_ != nullptr) {
    delete _impl_.default_value_;
  }
  _impl_.default_value_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ApiDef_Attr::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.ApiDef.Attr.name"));
        } else
          goto handle_unusual;
        continue;
      // string rename_to = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_rename_to();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.ApiDef.Attr.rename_to"));
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.AttrValue default_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string description = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.ApiDef.Attr.description"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ApiDef_Attr::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ApiDef.Attr)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.Attr.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string rename_to = 2;
  if (!this->_internal_rename_to().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rename_to().data(), static_cast<int>(this->_internal_rename_to().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.Attr.rename_to");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rename_to(), target);
  }

  // .tensorflow.AttrValue default_value = 3;
  if (this->_internal_has_default_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::default_value(this),
        _Internal::default_value(this).GetCachedSize(), target, stream);
  }

  // string description = 4;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.Attr.description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ApiDef.Attr)
  return target;
}

size_t ApiDef_Attr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ApiDef.Attr)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string rename_to = 2;
  if (!this->_internal_rename_to().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rename_to());
  }

  // string description = 4;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .tensorflow.AttrValue default_value = 3;
  if (this->_internal_has_default_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.default_value_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ApiDef_Attr::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ApiDef_Attr::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ApiDef_Attr::GetClassData() const { return &_class_data_; }


void ApiDef_Attr::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ApiDef_Attr*>(&to_msg);
  auto& from = static_cast<const ApiDef_Attr&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ApiDef.Attr)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_rename_to().empty()) {
    _this->_internal_set_rename_to(from._internal_rename_to());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_has_default_value()) {
    _this->_internal_mutable_default_value()->::tensorflow::AttrValue::MergeFrom(
        from._internal_default_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ApiDef_Attr::CopyFrom(const ApiDef_Attr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ApiDef.Attr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApiDef_Attr::IsInitialized() const {
  return true;
}

void ApiDef_Attr::InternalSwap(ApiDef_Attr* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.rename_to_, lhs_arena,
      &other->_impl_.rename_to_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  swap(_impl_.default_value_, other->_impl_.default_value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ApiDef_Attr::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto[2]);
}

// ===================================================================

class ApiDef::_Internal {
 public:
};

ApiDef::ApiDef(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ApiDef)
}
ApiDef::ApiDef(const ApiDef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ApiDef* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.endpoint_){from._impl_.endpoint_}
    , decltype(_impl_.in_arg_){from._impl_.in_arg_}
    , decltype(_impl_.out_arg_){from._impl_.out_arg_}
    , decltype(_impl_.attr_){from._impl_.attr_}
    , decltype(_impl_.arg_order_){from._impl_.arg_order_}
    , decltype(_impl_.graph_op_name_){}
    , decltype(_impl_.summary_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.description_prefix_){}
    , decltype(_impl_.description_suffix_){}
    , decltype(_impl_.deprecation_message_){}
    , decltype(_impl_.visibility_){}
    , decltype(_impl_.deprecation_version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.graph_op_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.graph_op_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_graph_op_name().empty()) {
    _this->_impl_.graph_op_name_.Set(from._internal_graph_op_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.summary_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.summary_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_summary().empty()) {
    _this->_impl_.summary_.Set(from._internal_summary(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_prefix_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_prefix_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description_prefix().empty()) {
    _this->_impl_.description_prefix_.Set(from._internal_description_prefix(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_suffix_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_suffix_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description_suffix().empty()) {
    _this->_impl_.description_suffix_.Set(from._internal_description_suffix(), 
      _this->GetArenaForAllocation());
  }
  _impl_.deprecation_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.deprecation_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_deprecation_message().empty()) {
    _this->_impl_.deprecation_message_.Set(from._internal_deprecation_message(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.visibility_, &from._impl_.visibility_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.deprecation_version_) -
    reinterpret_cast<char*>(&_impl_.visibility_)) + sizeof(_impl_.deprecation_version_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.ApiDef)
}

inline void ApiDef::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.endpoint_){arena}
    , decltype(_impl_.in_arg_){arena}
    , decltype(_impl_.out_arg_){arena}
    , decltype(_impl_.attr_){arena}
    , decltype(_impl_.arg_order_){arena}
    , decltype(_impl_.graph_op_name_){}
    , decltype(_impl_.summary_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.description_prefix_){}
    , decltype(_impl_.description_suffix_){}
    , decltype(_impl_.deprecation_message_){}
    , decltype(_impl_.visibility_){0}
    , decltype(_impl_.deprecation_version_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.graph_op_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.graph_op_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.summary_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.summary_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_prefix_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_prefix_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_suffix_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_suffix_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.deprecation_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.deprecation_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ApiDef::~ApiDef() {
  // @@protoc_insertion_point(destructor:tensorflow.ApiDef)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ApiDef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.endpoint_.~RepeatedPtrField();
  _impl_.in_arg_.~RepeatedPtrField();
  _impl_.out_arg_.~RepeatedPtrField();
  _impl_.attr_.~RepeatedPtrField();
  _impl_.arg_order_.~RepeatedPtrField();
  _impl_.graph_op_name_.Destroy();
  _impl_.summary_.Destroy();
  _impl_.description_.Destroy();
  _impl_.description_prefix_.Destroy();
  _impl_.description_suffix_.Destroy();
  _impl_.deprecation_message_.Destroy();
}

void ApiDef::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ApiDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ApiDef)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.endpoint_.Clear();
  _impl_.in_arg_.Clear();
  _impl_.out_arg_.Clear();
  _impl_.attr_.Clear();
  _impl_.arg_order_.Clear();
  _impl_.graph_op_name_.ClearToEmpty();
  _impl_.summary_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.description_prefix_.ClearToEmpty();
  _impl_.description_suffix_.ClearToEmpty();
  _impl_.deprecation_message_.ClearToEmpty();
  ::memset(&_impl_.visibility_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.deprecation_version_) -
      reinterpret_cast<char*>(&_impl_.visibility_)) + sizeof(_impl_.deprecation_version_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ApiDef::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string graph_op_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_graph_op_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.ApiDef.graph_op_name"));
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.ApiDef.Visibility visibility = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_visibility(static_cast<::tensorflow::ApiDef_Visibility>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated .tensorflow.ApiDef.Endpoint endpoint = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_endpoint(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .tensorflow.ApiDef.Arg in_arg = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_in_arg(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .tensorflow.ApiDef.Arg out_arg = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_out_arg(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .tensorflow.ApiDef.Attr attr = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string summary = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_summary();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.ApiDef.summary"));
        } else
          goto handle_unusual;
        continue;
      // string description = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.ApiDef.description"));
        } else
          goto handle_unusual;
        continue;
      // string description_prefix = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_description_prefix();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.ApiDef.description_prefix"));
        } else
          goto handle_unusual;
        continue;
      // string description_suffix = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_description_suffix();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.ApiDef.description_suffix"));
        } else
          goto handle_unusual;
        continue;
      // repeated string arg_order = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_arg_order();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "tensorflow.ApiDef.arg_order"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string deprecation_message = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_deprecation_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.ApiDef.deprecation_message"));
        } else
          goto handle_unusual;
        continue;
      // int32 deprecation_version = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          _impl_.deprecation_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ApiDef::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ApiDef)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string graph_op_name = 1;
  if (!this->_internal_graph_op_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_graph_op_name().data(), static_cast<int>(this->_internal_graph_op_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.graph_op_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_graph_op_name(), target);
  }

  // .tensorflow.ApiDef.Visibility visibility = 2;
  if (this->_internal_visibility() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_visibility(), target);
  }

  // repeated .tensorflow.ApiDef.Endpoint endpoint = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_endpoint_size()); i < n; i++) {
    const auto& repfield = this->_internal_endpoint(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .tensorflow.ApiDef.Arg in_arg = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_in_arg_size()); i < n; i++) {
    const auto& repfield = this->_internal_in_arg(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .tensorflow.ApiDef.Arg out_arg = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_out_arg_size()); i < n; i++) {
    const auto& repfield = this->_internal_out_arg(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .tensorflow.ApiDef.Attr attr = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_attr_size()); i < n; i++) {
    const auto& repfield = this->_internal_attr(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string summary = 7;
  if (!this->_internal_summary().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_summary().data(), static_cast<int>(this->_internal_summary().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.summary");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_summary(), target);
  }

  // string description = 8;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.description");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_description(), target);
  }

  // string description_prefix = 9;
  if (!this->_internal_description_prefix().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description_prefix().data(), static_cast<int>(this->_internal_description_prefix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.description_prefix");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_description_prefix(), target);
  }

  // string description_suffix = 10;
  if (!this->_internal_description_suffix().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description_suffix().data(), static_cast<int>(this->_internal_description_suffix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.description_suffix");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_description_suffix(), target);
  }

  // repeated string arg_order = 11;
  for (int i = 0, n = this->_internal_arg_order_size(); i < n; i++) {
    const auto& s = this->_internal_arg_order(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.arg_order");
    target = stream->WriteString(11, s, target);
  }

  // string deprecation_message = 12;
  if (!this->_internal_deprecation_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_deprecation_message().data(), static_cast<int>(this->_internal_deprecation_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ApiDef.deprecation_message");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_deprecation_message(), target);
  }

  // int32 deprecation_version = 13;
  if (this->_internal_deprecation_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(13, this->_internal_deprecation_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ApiDef)
  return target;
}

size_t ApiDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ApiDef)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.ApiDef.Endpoint endpoint = 3;
  total_size += 1UL * this->_internal_endpoint_size();
  for (const auto& msg : this->_impl_.endpoint_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .tensorflow.ApiDef.Arg in_arg = 4;
  total_size += 1UL * this->_internal_in_arg_size();
  for (const auto& msg : this->_impl_.in_arg_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .tensorflow.ApiDef.Arg out_arg = 5;
  total_size += 1UL * this->_internal_out_arg_size();
  for (const auto& msg : this->_impl_.out_arg_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .tensorflow.ApiDef.Attr attr = 6;
  total_size += 1UL * this->_internal_attr_size();
  for (const auto& msg : this->_impl_.attr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string arg_order = 11;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.arg_order_.size());
  for (int i = 0, n = _impl_.arg_order_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.arg_order_.Get(i));
  }

  // string graph_op_name = 1;
  if (!this->_internal_graph_op_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_graph_op_name());
  }

  // string summary = 7;
  if (!this->_internal_summary().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_summary());
  }

  // string description = 8;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string description_prefix = 9;
  if (!this->_internal_description_prefix().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description_prefix());
  }

  // string description_suffix = 10;
  if (!this->_internal_description_suffix().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description_suffix());
  }

  // string deprecation_message = 12;
  if (!this->_internal_deprecation_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_deprecation_message());
  }

  // .tensorflow.ApiDef.Visibility visibility = 2;
  if (this->_internal_visibility() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_visibility());
  }

  // int32 deprecation_version = 13;
  if (this->_internal_deprecation_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_deprecation_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ApiDef::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ApiDef::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ApiDef::GetClassData() const { return &_class_data_; }


void ApiDef::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ApiDef*>(&to_msg);
  auto& from = static_cast<const ApiDef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ApiDef)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.endpoint_.MergeFrom(from._impl_.endpoint_);
  _this->_impl_.in_arg_.MergeFrom(from._impl_.in_arg_);
  _this->_impl_.out_arg_.MergeFrom(from._impl_.out_arg_);
  _this->_impl_.attr_.MergeFrom(from._impl_.attr_);
  _this->_impl_.arg_order_.MergeFrom(from._impl_.arg_order_);
  if (!from._internal_graph_op_name().empty()) {
    _this->_internal_set_graph_op_name(from._internal_graph_op_name());
  }
  if (!from._internal_summary().empty()) {
    _this->_internal_set_summary(from._internal_summary());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_description_prefix().empty()) {
    _this->_internal_set_description_prefix(from._internal_description_prefix());
  }
  if (!from._internal_description_suffix().empty()) {
    _this->_internal_set_description_suffix(from._internal_description_suffix());
  }
  if (!from._internal_deprecation_message().empty()) {
    _this->_internal_set_deprecation_message(from._internal_deprecation_message());
  }
  if (from._internal_visibility() != 0) {
    _this->_internal_set_visibility(from._internal_visibility());
  }
  if (from._internal_deprecation_version() != 0) {
    _this->_internal_set_deprecation_version(from._internal_deprecation_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ApiDef::CopyFrom(const ApiDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ApiDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApiDef::IsInitialized() const {
  return true;
}

void ApiDef::InternalSwap(ApiDef* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.endpoint_.InternalSwap(&other->_impl_.endpoint_);
  _impl_.in_arg_.InternalSwap(&other->_impl_.in_arg_);
  _impl_.out_arg_.InternalSwap(&other->_impl_.out_arg_);
  _impl_.attr_.InternalSwap(&other->_impl_.attr_);
  _impl_.arg_order_.InternalSwap(&other->_impl_.arg_order_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.graph_op_name_, lhs_arena,
      &other->_impl_.graph_op_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.summary_, lhs_arena,
      &other->_impl_.summary_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_prefix_, lhs_arena,
      &other->_impl_.description_prefix_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_suffix_, lhs_arena,
      &other->_impl_.description_suffix_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.deprecation_message_, lhs_arena,
      &other->_impl_.deprecation_message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ApiDef, _impl_.deprecation_version_)
      + sizeof(ApiDef::_impl_.deprecation_version_)
      - PROTOBUF_FIELD_OFFSET(ApiDef, _impl_.visibility_)>(
          reinterpret_cast<char*>(&_impl_.visibility_),
          reinterpret_cast<char*>(&other->_impl_.visibility_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ApiDef::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto[3]);
}

// ===================================================================

class ApiDefs::_Internal {
 public:
};

ApiDefs::ApiDefs(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ApiDefs)
}
ApiDefs::ApiDefs(const ApiDefs& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ApiDefs* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.op_){from._impl_.op_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.ApiDefs)
}

inline void ApiDefs::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.op_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ApiDefs::~ApiDefs() {
  // @@protoc_insertion_point(destructor:tensorflow.ApiDefs)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ApiDefs::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.op_.~RepeatedPtrField();
}

void ApiDefs::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ApiDefs::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ApiDefs)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.op_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ApiDefs::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .tensorflow.ApiDef op = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_op(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ApiDefs::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ApiDefs)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.ApiDef op = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_op_size()); i < n; i++) {
    const auto& repfield = this->_internal_op(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ApiDefs)
  return target;
}

size_t ApiDefs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ApiDefs)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.ApiDef op = 1;
  total_size += 1UL * this->_internal_op_size();
  for (const auto& msg : this->_impl_.op_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ApiDefs::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ApiDefs::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ApiDefs::GetClassData() const { return &_class_data_; }


void ApiDefs::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ApiDefs*>(&to_msg);
  auto& from = static_cast<const ApiDefs&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ApiDefs)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.op_.MergeFrom(from._impl_.op_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ApiDefs::CopyFrom(const ApiDefs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ApiDefs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApiDefs::IsInitialized() const {
  return true;
}

void ApiDefs::InternalSwap(ApiDefs* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.op_.InternalSwap(&other->_impl_.op_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ApiDefs::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tensorflow::ApiDef_Endpoint*
Arena::CreateMaybeMessage< ::tensorflow::ApiDef_Endpoint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::ApiDef_Endpoint >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::ApiDef_Arg*
Arena::CreateMaybeMessage< ::tensorflow::ApiDef_Arg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::ApiDef_Arg >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::ApiDef_Attr*
Arena::CreateMaybeMessage< ::tensorflow::ApiDef_Attr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::ApiDef_Attr >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::ApiDef*
Arena::CreateMaybeMessage< ::tensorflow::ApiDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::ApiDef >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::ApiDefs*
Arena::CreateMaybeMessage< ::tensorflow::ApiDefs >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::ApiDefs >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
