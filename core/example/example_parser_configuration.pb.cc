// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/example/example_parser_configuration.proto

#include "tensorflow/core/example/example_parser_configuration.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace tensorflow {
PROTOBUF_CONSTEXPR VarLenFeatureProto::VarLenFeatureProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.values_output_tensor_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.indices_output_tensor_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.shapes_output_tensor_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.dtype_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VarLenFeatureProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VarLenFeatureProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VarLenFeatureProtoDefaultTypeInternal() {}
  union {
    VarLenFeatureProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VarLenFeatureProtoDefaultTypeInternal _VarLenFeatureProto_default_instance_;
PROTOBUF_CONSTEXPR FixedLenFeatureProto::FixedLenFeatureProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.values_output_tensor_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.shape_)*/nullptr
  , /*decltype(_impl_.default_value_)*/nullptr
  , /*decltype(_impl_.dtype_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FixedLenFeatureProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FixedLenFeatureProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FixedLenFeatureProtoDefaultTypeInternal() {}
  union {
    FixedLenFeatureProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FixedLenFeatureProtoDefaultTypeInternal _FixedLenFeatureProto_default_instance_;
PROTOBUF_CONSTEXPR FeatureConfiguration::FeatureConfiguration(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.config_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct FeatureConfigurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeatureConfigurationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeatureConfigurationDefaultTypeInternal() {}
  union {
    FeatureConfiguration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeatureConfigurationDefaultTypeInternal _FeatureConfiguration_default_instance_;
PROTOBUF_CONSTEXPR ExampleParserConfiguration_FeatureMapEntry_DoNotUse::ExampleParserConfiguration_FeatureMapEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct ExampleParserConfiguration_FeatureMapEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExampleParserConfiguration_FeatureMapEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExampleParserConfiguration_FeatureMapEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ExampleParserConfiguration_FeatureMapEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExampleParserConfiguration_FeatureMapEntry_DoNotUseDefaultTypeInternal _ExampleParserConfiguration_FeatureMapEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ExampleParserConfiguration::ExampleParserConfiguration(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.feature_map_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ExampleParserConfigurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExampleParserConfigurationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExampleParserConfigurationDefaultTypeInternal() {}
  union {
    ExampleParserConfiguration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExampleParserConfigurationDefaultTypeInternal _ExampleParserConfiguration_default_instance_;
}  // namespace tensorflow
static ::_pb::Metadata file_level_metadata_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto[5];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto = nullptr;

const uint32_t TableStruct_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::VarLenFeatureProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::VarLenFeatureProto, _impl_.dtype_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::VarLenFeatureProto, _impl_.values_output_tensor_name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::VarLenFeatureProto, _impl_.indices_output_tensor_name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::VarLenFeatureProto, _impl_.shapes_output_tensor_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::FixedLenFeatureProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::FixedLenFeatureProto, _impl_.dtype_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FixedLenFeatureProto, _impl_.shape_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FixedLenFeatureProto, _impl_.default_value_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FixedLenFeatureProto, _impl_.values_output_tensor_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::FeatureConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::tensorflow::FeatureConfiguration, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::tensorflow::FeatureConfiguration, _impl_.config_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ExampleParserConfiguration_FeatureMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ExampleParserConfiguration_FeatureMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ExampleParserConfiguration_FeatureMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ExampleParserConfiguration_FeatureMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ExampleParserConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ExampleParserConfiguration, _impl_.feature_map_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::tensorflow::VarLenFeatureProto)},
  { 10, -1, -1, sizeof(::tensorflow::FixedLenFeatureProto)},
  { 20, -1, -1, sizeof(::tensorflow::FeatureConfiguration)},
  { 29, 37, -1, sizeof(::tensorflow::ExampleParserConfiguration_FeatureMapEntry_DoNotUse)},
  { 39, -1, -1, sizeof(::tensorflow::ExampleParserConfiguration)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::tensorflow::_VarLenFeatureProto_default_instance_._instance,
  &::tensorflow::_FixedLenFeatureProto_default_instance_._instance,
  &::tensorflow::_FeatureConfiguration_default_instance_._instance,
  &::tensorflow::_ExampleParserConfiguration_FeatureMapEntry_DoNotUse_default_instance_._instance,
  &::tensorflow::_ExampleParserConfiguration_default_instance_._instance,
};

const char descriptor_table_protodef_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n:tensorflow/core/example/example_parser"
  "_configuration.proto\022\ntensorflow\032&tensor"
  "flow/core/framework/tensor.proto\032,tensor"
  "flow/core/framework/tensor_shape.proto\032%"
  "tensorflow/core/framework/types.proto\"\243\001"
  "\n\022VarLenFeatureProto\022#\n\005dtype\030\001 \001(\0162\024.te"
  "nsorflow.DataType\022!\n\031values_output_tenso"
  "r_name\030\002 \001(\t\022\"\n\032indices_output_tensor_na"
  "me\030\003 \001(\t\022!\n\031shapes_output_tensor_name\030\004 "
  "\001(\t\"\273\001\n\024FixedLenFeatureProto\022#\n\005dtype\030\001 "
  "\001(\0162\024.tensorflow.DataType\022+\n\005shape\030\002 \001(\013"
  "2\034.tensorflow.TensorShapeProto\022.\n\rdefaul"
  "t_value\030\003 \001(\0132\027.tensorflow.TensorProto\022!"
  "\n\031values_output_tensor_name\030\004 \001(\t\"\232\001\n\024Fe"
  "atureConfiguration\022=\n\021fixed_len_feature\030"
  "\001 \001(\0132 .tensorflow.FixedLenFeatureProtoH"
  "\000\0229\n\017var_len_feature\030\002 \001(\0132\036.tensorflow."
  "VarLenFeatureProtoH\000B\010\n\006config\"\276\001\n\032Examp"
  "leParserConfiguration\022K\n\013feature_map\030\001 \003"
  "(\01326.tensorflow.ExampleParserConfigurati"
  "on.FeatureMapEntry\032S\n\017FeatureMapEntry\022\013\n"
  "\003key\030\001 \001(\t\022/\n\005value\030\002 \001(\0132 .tensorflow.F"
  "eatureConfiguration:\0028\001B\242\001\n\026org.tensorfl"
  "ow.exampleB ExampleParserConfigurationPr"
  "otosP\001Zagithub.com/tensorflow/tensorflow"
  "/tensorflow/go/core/example/example_pars"
  "er_configuration_go_proto\370\001\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto_deps[3] = {
  &::descriptor_table_tensorflow_2fcore_2fframework_2ftensor_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fframework_2ftypes_2eproto,
};
static ::_pbi::once_flag descriptor_table_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto = {
    false, false, 1076, descriptor_table_protodef_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto,
    "tensorflow/core/example/example_parser_configuration.proto",
    &descriptor_table_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto_once, descriptor_table_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto_deps, 3, 5,
    schemas, file_default_instances, TableStruct_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::offsets,
    file_level_metadata_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto, file_level_enum_descriptors_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto_getter() {
  return &descriptor_table_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto(&descriptor_table_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto);
namespace tensorflow {

// ===================================================================

class VarLenFeatureProto::_Internal {
 public:
};

VarLenFeatureProto::VarLenFeatureProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.VarLenFeatureProto)
}
VarLenFeatureProto::VarLenFeatureProto(const VarLenFeatureProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VarLenFeatureProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.values_output_tensor_name_){}
    , decltype(_impl_.indices_output_tensor_name_){}
    , decltype(_impl_.shapes_output_tensor_name_){}
    , decltype(_impl_.dtype_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.values_output_tensor_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.values_output_tensor_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_values_output_tensor_name().empty()) {
    _this->_impl_.values_output_tensor_name_.Set(from._internal_values_output_tensor_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.indices_output_tensor_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.indices_output_tensor_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_indices_output_tensor_name().empty()) {
    _this->_impl_.indices_output_tensor_name_.Set(from._internal_indices_output_tensor_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.shapes_output_tensor_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.shapes_output_tensor_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_shapes_output_tensor_name().empty()) {
    _this->_impl_.shapes_output_tensor_name_.Set(from._internal_shapes_output_tensor_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.dtype_ = from._impl_.dtype_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.VarLenFeatureProto)
}

inline void VarLenFeatureProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.values_output_tensor_name_){}
    , decltype(_impl_.indices_output_tensor_name_){}
    , decltype(_impl_.shapes_output_tensor_name_){}
    , decltype(_impl_.dtype_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.values_output_tensor_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.values_output_tensor_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.indices_output_tensor_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.indices_output_tensor_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.shapes_output_tensor_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.shapes_output_tensor_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

VarLenFeatureProto::~VarLenFeatureProto() {
  // @@protoc_insertion_point(destructor:tensorflow.VarLenFeatureProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VarLenFeatureProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.values_output_tensor_name_.Destroy();
  _impl_.indices_output_tensor_name_.Destroy();
  _impl_.shapes_output_tensor_name_.Destroy();
}

void VarLenFeatureProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VarLenFeatureProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.VarLenFeatureProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_output_tensor_name_.ClearToEmpty();
  _impl_.indices_output_tensor_name_.ClearToEmpty();
  _impl_.shapes_output_tensor_name_.ClearToEmpty();
  _impl_.dtype_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VarLenFeatureProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tensorflow.DataType dtype = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_dtype(static_cast<::tensorflow::DataType>(val));
        } else
          goto handle_unusual;
        continue;
      // string values_output_tensor_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_values_output_tensor_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.VarLenFeatureProto.values_output_tensor_name"));
        } else
          goto handle_unusual;
        continue;
      // string indices_output_tensor_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_indices_output_tensor_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.VarLenFeatureProto.indices_output_tensor_name"));
        } else
          goto handle_unusual;
        continue;
      // string shapes_output_tensor_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_shapes_output_tensor_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.VarLenFeatureProto.shapes_output_tensor_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VarLenFeatureProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.VarLenFeatureProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.DataType dtype = 1;
  if (this->_internal_dtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_dtype(), target);
  }

  // string values_output_tensor_name = 2;
  if (!this->_internal_values_output_tensor_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_values_output_tensor_name().data(), static_cast<int>(this->_internal_values_output_tensor_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.VarLenFeatureProto.values_output_tensor_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_values_output_tensor_name(), target);
  }

  // string indices_output_tensor_name = 3;
  if (!this->_internal_indices_output_tensor_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_indices_output_tensor_name().data(), static_cast<int>(this->_internal_indices_output_tensor_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.VarLenFeatureProto.indices_output_tensor_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_indices_output_tensor_name(), target);
  }

  // string shapes_output_tensor_name = 4;
  if (!this->_internal_shapes_output_tensor_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_shapes_output_tensor_name().data(), static_cast<int>(this->_internal_shapes_output_tensor_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.VarLenFeatureProto.shapes_output_tensor_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_shapes_output_tensor_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.VarLenFeatureProto)
  return target;
}

size_t VarLenFeatureProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.VarLenFeatureProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string values_output_tensor_name = 2;
  if (!this->_internal_values_output_tensor_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_values_output_tensor_name());
  }

  // string indices_output_tensor_name = 3;
  if (!this->_internal_indices_output_tensor_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_indices_output_tensor_name());
  }

  // string shapes_output_tensor_name = 4;
  if (!this->_internal_shapes_output_tensor_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_shapes_output_tensor_name());
  }

  // .tensorflow.DataType dtype = 1;
  if (this->_internal_dtype() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_dtype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VarLenFeatureProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VarLenFeatureProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VarLenFeatureProto::GetClassData() const { return &_class_data_; }


void VarLenFeatureProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VarLenFeatureProto*>(&to_msg);
  auto& from = static_cast<const VarLenFeatureProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.VarLenFeatureProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_values_output_tensor_name().empty()) {
    _this->_internal_set_values_output_tensor_name(from._internal_values_output_tensor_name());
  }
  if (!from._internal_indices_output_tensor_name().empty()) {
    _this->_internal_set_indices_output_tensor_name(from._internal_indices_output_tensor_name());
  }
  if (!from._internal_shapes_output_tensor_name().empty()) {
    _this->_internal_set_shapes_output_tensor_name(from._internal_shapes_output_tensor_name());
  }
  if (from._internal_dtype() != 0) {
    _this->_internal_set_dtype(from._internal_dtype());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VarLenFeatureProto::CopyFrom(const VarLenFeatureProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.VarLenFeatureProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarLenFeatureProto::IsInitialized() const {
  return true;
}

void VarLenFeatureProto::InternalSwap(VarLenFeatureProto* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.values_output_tensor_name_, lhs_arena,
      &other->_impl_.values_output_tensor_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.indices_output_tensor_name_, lhs_arena,
      &other->_impl_.indices_output_tensor_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.shapes_output_tensor_name_, lhs_arena,
      &other->_impl_.shapes_output_tensor_name_, rhs_arena
  );
  swap(_impl_.dtype_, other->_impl_.dtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VarLenFeatureProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto[0]);
}

// ===================================================================

class FixedLenFeatureProto::_Internal {
 public:
  static const ::tensorflow::TensorShapeProto& shape(const FixedLenFeatureProto* msg);
  static const ::tensorflow::TensorProto& default_value(const FixedLenFeatureProto* msg);
};

const ::tensorflow::TensorShapeProto&
FixedLenFeatureProto::_Internal::shape(const FixedLenFeatureProto* msg) {
  return *msg->_impl_.shape_;
}
const ::tensorflow::TensorProto&
FixedLenFeatureProto::_Internal::default_value(const FixedLenFeatureProto* msg) {
  return *msg->_impl_.default_value_;
}
void FixedLenFeatureProto::clear_shape() {
  if (GetArenaForAllocation() == nullptr && _impl_.shape_ != nullptr) {
    delete _impl_.shape_;
  }
  _impl_.shape_ = nullptr;
}
void FixedLenFeatureProto::clear_default_value() {
  if (GetArenaForAllocation() == nullptr && _impl_.default_value_ != nullptr) {
    delete _impl_.default_value_;
  }
  _impl_.default_value_ = nullptr;
}
FixedLenFeatureProto::FixedLenFeatureProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.FixedLenFeatureProto)
}
FixedLenFeatureProto::FixedLenFeatureProto(const FixedLenFeatureProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FixedLenFeatureProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.values_output_tensor_name_){}
    , decltype(_impl_.shape_){nullptr}
    , decltype(_impl_.default_value_){nullptr}
    , decltype(_impl_.dtype_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.values_output_tensor_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.values_output_tensor_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_values_output_tensor_name().empty()) {
    _this->_impl_.values_output_tensor_name_.Set(from._internal_values_output_tensor_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_shape()) {
    _this->_impl_.shape_ = new ::tensorflow::TensorShapeProto(*from._impl_.shape_);
  }
  if (from._internal_has_default_value()) {
    _this->_impl_.default_value_ = new ::tensorflow::TensorProto(*from._impl_.default_value_);
  }
  _this->_impl_.dtype_ = from._impl_.dtype_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.FixedLenFeatureProto)
}

inline void FixedLenFeatureProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.values_output_tensor_name_){}
    , decltype(_impl_.shape_){nullptr}
    , decltype(_impl_.default_value_){nullptr}
    , decltype(_impl_.dtype_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.values_output_tensor_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.values_output_tensor_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FixedLenFeatureProto::~FixedLenFeatureProto() {
  // @@protoc_insertion_point(destructor:tensorflow.FixedLenFeatureProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FixedLenFeatureProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.values_output_tensor_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.shape_;
  if (this != internal_default_instance()) delete _impl_.default_value_;
}

void FixedLenFeatureProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FixedLenFeatureProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.FixedLenFeatureProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_output_tensor_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.shape_ != nullptr) {
    delete _impl_.shape_;
  }
  _impl_.shape_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.default_value_ != nullptr) {
    delete _impl_.default_value_;
  }
  _impl_.default_value_ = nullptr;
  _impl_.dtype_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FixedLenFeatureProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tensorflow.DataType dtype = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_dtype(static_cast<::tensorflow::DataType>(val));
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.TensorShapeProto shape = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_shape(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.TensorProto default_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string values_output_tensor_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_values_output_tensor_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.FixedLenFeatureProto.values_output_tensor_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FixedLenFeatureProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.FixedLenFeatureProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.DataType dtype = 1;
  if (this->_internal_dtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_dtype(), target);
  }

  // .tensorflow.TensorShapeProto shape = 2;
  if (this->_internal_has_shape()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::shape(this),
        _Internal::shape(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.TensorProto default_value = 3;
  if (this->_internal_has_default_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::default_value(this),
        _Internal::default_value(this).GetCachedSize(), target, stream);
  }

  // string values_output_tensor_name = 4;
  if (!this->_internal_values_output_tensor_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_values_output_tensor_name().data(), static_cast<int>(this->_internal_values_output_tensor_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.FixedLenFeatureProto.values_output_tensor_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_values_output_tensor_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.FixedLenFeatureProto)
  return target;
}

size_t FixedLenFeatureProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.FixedLenFeatureProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string values_output_tensor_name = 4;
  if (!this->_internal_values_output_tensor_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_values_output_tensor_name());
  }

  // .tensorflow.TensorShapeProto shape = 2;
  if (this->_internal_has_shape()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.shape_);
  }

  // .tensorflow.TensorProto default_value = 3;
  if (this->_internal_has_default_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.default_value_);
  }

  // .tensorflow.DataType dtype = 1;
  if (this->_internal_dtype() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_dtype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FixedLenFeatureProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FixedLenFeatureProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FixedLenFeatureProto::GetClassData() const { return &_class_data_; }


void FixedLenFeatureProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FixedLenFeatureProto*>(&to_msg);
  auto& from = static_cast<const FixedLenFeatureProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.FixedLenFeatureProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_values_output_tensor_name().empty()) {
    _this->_internal_set_values_output_tensor_name(from._internal_values_output_tensor_name());
  }
  if (from._internal_has_shape()) {
    _this->_internal_mutable_shape()->::tensorflow::TensorShapeProto::MergeFrom(
        from._internal_shape());
  }
  if (from._internal_has_default_value()) {
    _this->_internal_mutable_default_value()->::tensorflow::TensorProto::MergeFrom(
        from._internal_default_value());
  }
  if (from._internal_dtype() != 0) {
    _this->_internal_set_dtype(from._internal_dtype());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FixedLenFeatureProto::CopyFrom(const FixedLenFeatureProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.FixedLenFeatureProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FixedLenFeatureProto::IsInitialized() const {
  return true;
}

void FixedLenFeatureProto::InternalSwap(FixedLenFeatureProto* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.values_output_tensor_name_, lhs_arena,
      &other->_impl_.values_output_tensor_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FixedLenFeatureProto, _impl_.dtype_)
      + sizeof(FixedLenFeatureProto::_impl_.dtype_)
      - PROTOBUF_FIELD_OFFSET(FixedLenFeatureProto, _impl_.shape_)>(
          reinterpret_cast<char*>(&_impl_.shape_),
          reinterpret_cast<char*>(&other->_impl_.shape_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FixedLenFeatureProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto[1]);
}

// ===================================================================

class FeatureConfiguration::_Internal {
 public:
  static const ::tensorflow::FixedLenFeatureProto& fixed_len_feature(const FeatureConfiguration* msg);
  static const ::tensorflow::VarLenFeatureProto& var_len_feature(const FeatureConfiguration* msg);
};

const ::tensorflow::FixedLenFeatureProto&
FeatureConfiguration::_Internal::fixed_len_feature(const FeatureConfiguration* msg) {
  return *msg->_impl_.config_.fixed_len_feature_;
}
const ::tensorflow::VarLenFeatureProto&
FeatureConfiguration::_Internal::var_len_feature(const FeatureConfiguration* msg) {
  return *msg->_impl_.config_.var_len_feature_;
}
void FeatureConfiguration::set_allocated_fixed_len_feature(::tensorflow::FixedLenFeatureProto* fixed_len_feature) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_config();
  if (fixed_len_feature) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(fixed_len_feature);
    if (message_arena != submessage_arena) {
      fixed_len_feature = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fixed_len_feature, submessage_arena);
    }
    set_has_fixed_len_feature();
    _impl_.config_.fixed_len_feature_ = fixed_len_feature;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.FeatureConfiguration.fixed_len_feature)
}
void FeatureConfiguration::set_allocated_var_len_feature(::tensorflow::VarLenFeatureProto* var_len_feature) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_config();
  if (var_len_feature) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(var_len_feature);
    if (message_arena != submessage_arena) {
      var_len_feature = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, var_len_feature, submessage_arena);
    }
    set_has_var_len_feature();
    _impl_.config_.var_len_feature_ = var_len_feature;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.FeatureConfiguration.var_len_feature)
}
FeatureConfiguration::FeatureConfiguration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.FeatureConfiguration)
}
FeatureConfiguration::FeatureConfiguration(const FeatureConfiguration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FeatureConfiguration* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.config_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_config();
  switch (from.config_case()) {
    case kFixedLenFeature: {
      _this->_internal_mutable_fixed_len_feature()->::tensorflow::FixedLenFeatureProto::MergeFrom(
          from._internal_fixed_len_feature());
      break;
    }
    case kVarLenFeature: {
      _this->_internal_mutable_var_len_feature()->::tensorflow::VarLenFeatureProto::MergeFrom(
          from._internal_var_len_feature());
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.FeatureConfiguration)
}

inline void FeatureConfiguration::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.config_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_config();
}

FeatureConfiguration::~FeatureConfiguration() {
  // @@protoc_insertion_point(destructor:tensorflow.FeatureConfiguration)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FeatureConfiguration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_config()) {
    clear_config();
  }
}

void FeatureConfiguration::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FeatureConfiguration::clear_config() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.FeatureConfiguration)
  switch (config_case()) {
    case kFixedLenFeature: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.config_.fixed_len_feature_;
      }
      break;
    }
    case kVarLenFeature: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.config_.var_len_feature_;
      }
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CONFIG_NOT_SET;
}


void FeatureConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.FeatureConfiguration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_config();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FeatureConfiguration::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tensorflow.FixedLenFeatureProto fixed_len_feature = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_fixed_len_feature(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.VarLenFeatureProto var_len_feature = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_var_len_feature(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FeatureConfiguration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.FeatureConfiguration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.FixedLenFeatureProto fixed_len_feature = 1;
  if (_internal_has_fixed_len_feature()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::fixed_len_feature(this),
        _Internal::fixed_len_feature(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.VarLenFeatureProto var_len_feature = 2;
  if (_internal_has_var_len_feature()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::var_len_feature(this),
        _Internal::var_len_feature(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.FeatureConfiguration)
  return target;
}

size_t FeatureConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.FeatureConfiguration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (config_case()) {
    // .tensorflow.FixedLenFeatureProto fixed_len_feature = 1;
    case kFixedLenFeature: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.config_.fixed_len_feature_);
      break;
    }
    // .tensorflow.VarLenFeatureProto var_len_feature = 2;
    case kVarLenFeature: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.config_.var_len_feature_);
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FeatureConfiguration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FeatureConfiguration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FeatureConfiguration::GetClassData() const { return &_class_data_; }


void FeatureConfiguration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FeatureConfiguration*>(&to_msg);
  auto& from = static_cast<const FeatureConfiguration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.FeatureConfiguration)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.config_case()) {
    case kFixedLenFeature: {
      _this->_internal_mutable_fixed_len_feature()->::tensorflow::FixedLenFeatureProto::MergeFrom(
          from._internal_fixed_len_feature());
      break;
    }
    case kVarLenFeature: {
      _this->_internal_mutable_var_len_feature()->::tensorflow::VarLenFeatureProto::MergeFrom(
          from._internal_var_len_feature());
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FeatureConfiguration::CopyFrom(const FeatureConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.FeatureConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeatureConfiguration::IsInitialized() const {
  return true;
}

void FeatureConfiguration::InternalSwap(FeatureConfiguration* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.config_, other->_impl_.config_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata FeatureConfiguration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto[2]);
}

// ===================================================================

ExampleParserConfiguration_FeatureMapEntry_DoNotUse::ExampleParserConfiguration_FeatureMapEntry_DoNotUse() {}
ExampleParserConfiguration_FeatureMapEntry_DoNotUse::ExampleParserConfiguration_FeatureMapEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ExampleParserConfiguration_FeatureMapEntry_DoNotUse::MergeFrom(const ExampleParserConfiguration_FeatureMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ExampleParserConfiguration_FeatureMapEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto[3]);
}

// ===================================================================

class ExampleParserConfiguration::_Internal {
 public:
};

ExampleParserConfiguration::ExampleParserConfiguration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &ExampleParserConfiguration::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:tensorflow.ExampleParserConfiguration)
}
ExampleParserConfiguration::ExampleParserConfiguration(const ExampleParserConfiguration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ExampleParserConfiguration* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.feature_map_)*/{}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.feature_map_.MergeFrom(from._impl_.feature_map_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.ExampleParserConfiguration)
}

inline void ExampleParserConfiguration::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.feature_map_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ExampleParserConfiguration::~ExampleParserConfiguration() {
  // @@protoc_insertion_point(destructor:tensorflow.ExampleParserConfiguration)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void ExampleParserConfiguration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.feature_map_.Destruct();
  _impl_.feature_map_.~MapField();
}

void ExampleParserConfiguration::ArenaDtor(void* object) {
  ExampleParserConfiguration* _this = reinterpret_cast< ExampleParserConfiguration* >(object);
  _this->_impl_.feature_map_.Destruct();
}
void ExampleParserConfiguration::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ExampleParserConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ExampleParserConfiguration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.feature_map_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExampleParserConfiguration::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .tensorflow.FeatureConfiguration> feature_map = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.feature_map_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExampleParserConfiguration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ExampleParserConfiguration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .tensorflow.FeatureConfiguration> feature_map = 1;
  if (!this->_internal_feature_map().empty()) {
    using MapType = ::_pb::Map<std::string, ::tensorflow::FeatureConfiguration>;
    using WireHelper = ExampleParserConfiguration_FeatureMapEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_feature_map();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "tensorflow.ExampleParserConfiguration.FeatureMapEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ExampleParserConfiguration)
  return target;
}

size_t ExampleParserConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ExampleParserConfiguration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .tensorflow.FeatureConfiguration> feature_map = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_feature_map_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::FeatureConfiguration >::const_iterator
      it = this->_internal_feature_map().begin();
      it != this->_internal_feature_map().end(); ++it) {
    total_size += ExampleParserConfiguration_FeatureMapEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExampleParserConfiguration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ExampleParserConfiguration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExampleParserConfiguration::GetClassData() const { return &_class_data_; }


void ExampleParserConfiguration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ExampleParserConfiguration*>(&to_msg);
  auto& from = static_cast<const ExampleParserConfiguration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ExampleParserConfiguration)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.feature_map_.MergeFrom(from._impl_.feature_map_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExampleParserConfiguration::CopyFrom(const ExampleParserConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ExampleParserConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExampleParserConfiguration::IsInitialized() const {
  return true;
}

void ExampleParserConfiguration::InternalSwap(ExampleParserConfiguration* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.feature_map_.InternalSwap(&other->_impl_.feature_map_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExampleParserConfiguration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tensorflow::VarLenFeatureProto*
Arena::CreateMaybeMessage< ::tensorflow::VarLenFeatureProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::VarLenFeatureProto >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::FixedLenFeatureProto*
Arena::CreateMaybeMessage< ::tensorflow::FixedLenFeatureProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::FixedLenFeatureProto >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::FeatureConfiguration*
Arena::CreateMaybeMessage< ::tensorflow::FeatureConfiguration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::FeatureConfiguration >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::ExampleParserConfiguration_FeatureMapEntry_DoNotUse*
Arena::CreateMaybeMessage< ::tensorflow::ExampleParserConfiguration_FeatureMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::ExampleParserConfiguration_FeatureMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::ExampleParserConfiguration*
Arena::CreateMaybeMessage< ::tensorflow::ExampleParserConfiguration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::ExampleParserConfiguration >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
